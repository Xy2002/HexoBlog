{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/bb.css","path":"css/bb.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","path":"css/barrager.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/star.png","path":"medias/star.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","path":"js/jquery.barrager.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","path":"medias/barrager/2.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","path":"medias/barrager/close.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","path":"medias/barrager/0.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","path":"medias/barrager/1.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","path":"libs/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","path":"libs/twikoo/twikoo.all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","path":"libs/twikoo/twikoo.all.min.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.css","path":"libs/prism/prism.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","path":"libs/awesome/webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","path":"libs/awesome/webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","path":"libs/awesome/webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","path":"libs/awesome/webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","path":"libs/awesome/webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","path":"libs/awesome/webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","path":"libs/awesome/webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","path":"libs/awesome/webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","path":"libs/awesome/webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/about/index.md","hash":"89b37eda8f97c826274c8254a03d1b40be21760c","modified":1632856022069},{"_id":"source/_data/friends.json","hash":"ad0e0b97827608d52775c6241fb757faef41e86c","modified":1652447049615},{"_id":"source/contact/index.md","hash":"0ce0f337ad6c2ebbaac00b8ff97099d3d0026b61","modified":1632856022220},{"_id":"source/_posts/PhotoSphereViewer.md","hash":"aacccf53118c879778b0f04e5021c4708fd52bcf","modified":1652099007426},{"_id":"source/_posts/howToUseFrpRunJmeterServer.md","hash":"5f059832dd90216518c9a3bff9f0a2355ddb10a7","modified":1655066516349},{"_id":"source/_posts/explainValueReferenceInJs.md","hash":"21fc85d7ebd365d92fb5e49b7db69786e7f52a09","modified":1652099007437},{"_id":"source/_posts/awaitExceptionCatchMethod.md","hash":"260312f911a7f3655b4f0a358c02dadf7ef1288b","modified":1652099007439},{"_id":"source/categories/index.md","hash":"4f30ccf830f3f5cf81fcde25368ea56c60956c63","modified":1632856022059},{"_id":"source/_posts/vantWeappInMpvue.md","hash":"4173b199fcae94b228d3e49757bae0d5200db256","modified":1652099007422},{"_id":"source/_posts/javascriptBasicQuestions.md","hash":"8e90187b03c8a57ac2d58f93691aa92d2f48e2c6","modified":1652122327213},{"_id":"source/_posts/mpvueSteppedPit.md","hash":"c527abc81271274c21c3a4582fd3ff4adb0f80f4","modified":1652099007429},{"_id":"source/friends/index.md","hash":"a0a25a32bbe37f7df1fc5824578f0ca6fcb68eb5","modified":1632856022211},{"_id":"source/_posts/vueElectron.md","hash":"a4eba787b7c9d9a52df2546250282f3d3e8938fe","modified":1652118807983},{"_id":"source/404/index.md","hash":"811c588dfb293d7eb3e3a96df3bfe53193aba04f","modified":1632856040662},{"_id":"source/_posts/viteWithTSX.md","hash":"175d546c1b1d5720cf11bc768b9d2153715ef86c","modified":1652121182220},{"_id":"source/tags/index.md","hash":"b7eaaed8cb2a333c43e3f54bff844e2b01fbbc75","modified":1632856023647},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1633777704444},{"_id":"themes/hexo-theme-matery/.DS_Store","hash":"358e7418130a30ca8d15693d802062a39be4337a","modified":1633777722233},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"a2267aed16d52f4adeb13f555d36d076855387af","modified":1633777704445},{"_id":"themes/hexo-theme-matery/CHANGELOG.md","hash":"084ec8b110a20170d08a0aa5fd8accf601051835","modified":1633777704444},{"_id":"themes/hexo-theme-matery/README.md","hash":"ddaf6310154e314385d63041da61c418055314f6","modified":1633777704445},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"a191ac31cdeed997713cb031e46be1c5171822cd","modified":1633777704445},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"bb583b880bebd29bdba0487068db60b37c2fdebf","modified":1633777704445},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"55be607f1ab1b2e0c3dbf8d295d2a534331231f1","modified":1652450712800},{"_id":"themes/hexo-theme-matery/languages/zh-HK.yml","hash":"51c06005927e8bde5b3e23353d2bf2c32ed855f3","modified":1633777704446},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"99a74316aed478efb0db823c4460ee2e660f101c","modified":1633777704450},{"_id":"themes/hexo-theme-matery/.gitignore","hash":"727607929a51db7ea10968f547c26041eee9cfff","modified":1633777704444},{"_id":"themes/hexo-theme-matery/layout/404.ejs","hash":"9c8ca67377211e5d60fdde272a975faa9a91a22a","modified":1634378757930},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1633777704451},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"a777733e03d954ac265a3d0523245bd191732130","modified":1633777704451},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1633777704451},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1633777704451},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"51e5369ec6b017cc702a8d957fc052c59dd4c3d7","modified":1633777704451},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"4bfb9e946a90724fc8a902efe404c7b20549a38c","modified":1633777704451},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1633777704452},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"f421840a8076ebe6a53c85483d6a8e8634af9cc0","modified":1633777704451},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"90b5a4c1f70e4756db569c15a7c6cad0c77c4500","modified":1633777704451},{"_id":"themes/hexo-theme-matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1633777704449},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1633777704449},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1633777704452},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1633777704449},{"_id":"themes/hexo-theme-matery/layout/bb.ejs","hash":"21959d702f17a3d98b716daf44c8b5eecd59c7c5","modified":1633777704451},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1633777704450},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1633777704450},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1633777704450},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1633777704450},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"8551137e94ca4e2e3b8b63d5626255884cb60cb5","modified":1633777704450},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1633777704452},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1633777704449},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1633777704450},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"e9e3e327d5de9d7aeadbde32e1d558652d9e9195","modified":1633777704450},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1633777704450},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"5e5ec78f8ab229d54786ef2e0ea2864af2dc459f","modified":1633777704450},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1633777704446},{"_id":"themes/hexo-theme-matery/layout/_partial/background.ejs","hash":"aef6edeeb11209831a11d8c7f5d59992e2573335","modified":1633777704446},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1633777704450},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1633777704446},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"c35e4254ff0738878f65251a657b4fdcafc4b270","modified":1633777704446},{"_id":"themes/hexo-theme-matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1633777704446},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1633777704446},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1633777704446},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1633777704447},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"5ad05cdc0544d77f0058b9faeb1742628b61d002","modified":1633777704446},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1633777704446},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1633777704447},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1633777704447},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1633777704447},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"59e38c70f3d8e7165e686e5e84a627835f4321b0","modified":1633777704447},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"3b725258ccdfd193d8aae24c726a9a3a2a924a84","modified":1633777704447},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"85f0ef1c390694a1661e77f44a3ed76555099385","modified":1633777704447},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1633777704447},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"cda18036a6c782dee122a33f3bba759f3377a68c","modified":1633777704448},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"52de0cf3ce13a3477b0a1659d2b8aa41db1f622d","modified":1633777704447},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1633777704448},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"4002adc615f6d3959993dcb62004a07adfc3fe4f","modified":1633777704448},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"3ff94aff01936242a9f4e1f31adb9b43bfab8d53","modified":1633777704448},{"_id":"themes/hexo-theme-matery/layout/_partial/minivaline.ejs","hash":"738b83cd90fe1b26971d803fc89c56193323da1e","modified":1633777704447},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"c76b78782ea82340104fccc089417572e0adece4","modified":1633777704448},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1633777704448},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1633777704448},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"ffc55bc7e73bc698bfc58d8e3780c336b83282cf","modified":1633777704449},{"_id":"themes/hexo-theme-matery/layout/_partial/twikoo.ejs","hash":"f9cb8c82b9d2a7cdb644e10718f1cdeb9400414c","modified":1633777704449},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1633777704448},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"6f871bd3a70f720e4e451f1f4f625cbc6d8994a4","modified":1633777704449},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"045f3aaade1dc6749a1f824b0405b5fdb9e041e4","modified":1633777704449},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"150529c9fb9aa8ddb42ec3e02645d301faa2503b","modified":1633777704449},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1633777704449},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1633777704452},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"659caf80b3551d572339da5b5d1dc451a6d9b801","modified":1633777921687},{"_id":"themes/hexo-theme-matery/source/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1633777704452},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","hash":"862879d9313ed8d4c721fa32ef8f94ac2f0a28ae","modified":1633777704452},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1633777704452},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"57058d1431a679f01590e954c63907dc56189e8f","modified":1632856744382},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1633777704484},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1633777704492},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1633777704492},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1633777704453},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1633777704452},{"_id":"themes/hexo-theme-matery/source/medias/star.png","hash":"5cb60bbafe125158773adcdeffc6def385eb710e","modified":1632856742652},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1633777704484},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"5caa2d6e3d34c334ac68dfaafc81a583d6123382","modified":1633777704453},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1633777704484},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","hash":"19c8b2498ca1083e537f7f443172970912107f83","modified":1633777704453},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1633777704484},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1633777704484},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1633777704487},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1633777704487},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1633777704488},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1633777704489},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1633777704489},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1633777704490},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1633777704486},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1633777704490},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1633777704491},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1633777704490},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1633777704491},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1633777704492},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1633777704492},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1633777704493},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1633777704453},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1633777704453},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1633777704453},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1633777704467},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1633777704453},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1633777704454},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1633777704467},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1633777704467},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1633777704467},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1633777704467},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1633777704467},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1633777704468},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1633777704467},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1633777704468},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1633777704471},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1633777704467},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1633777704474},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1633777704473},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1633777704474},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1633777704477},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1633777704475},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1633777704474},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1633777704477},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1633777704480},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1633777704478},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1633777704477},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1633777704477},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.css","hash":"62e5474893dece076534352f564ceabd6e088a5a","modified":1633777704477},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1633777704478},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1633777704460},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1633777704461},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1633777704461},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1633777704461},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1633777704474},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1633777704475},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1633777704475},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1633777704475},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1633777704475},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1633777704475},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1633777704475},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1633777704475},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1633777704475},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1633777704475},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1633777704477},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1633777704477},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1633777704477},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1633777704478},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1633777704477},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1633777704478},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1633777704478},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1633777704481},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1633777704482},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1633777704482},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1633777704485},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1633777704486},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1633777704486},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1633777704487},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1633777704488},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1633777704488},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1633777704487},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1633777704492},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1633777704491},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1633777704490},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1633777704489},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1633777704488},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1633777704468},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1633777704474},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1633777704474},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1633777704480},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1633777704454},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1633777704455},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1633777704460},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1633777704459},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1633777704459},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1633777704467},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1633777704467},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1633777704485},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1633777704484},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1633777704482},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1633777704484},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1633777704476},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1633777704477},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1633777704481},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1633777704462},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1633777704460},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1633777704466},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1633777704483},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1633777704479},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1633777704458},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1633777704471},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1633777704473},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1633777704465},{"_id":"public/baidu_urls.txt","hash":"b7c1a04b5cb828575b8331fb33816c47eb36081a","modified":1655066542949},{"_id":"public/search.xml","hash":"c0be00ef8fef478490b1cb62a19297b5813221b9","modified":1655066542949},{"_id":"public/sitemap.xml","hash":"d36bf4850ed2850d79c35410a68a96e3c318e2ef","modified":1655066542949},{"_id":"public/baidusitemap.xml","hash":"95a988734627dcfadf51b162e765bce30dea4ba7","modified":1655066542949},{"_id":"public/categories/index.html","hash":"02a139135df59b76c3ecc4c25c11edd2b695f218","modified":1655066542949},{"_id":"public/friends/index.html","hash":"354df5114adfdea4ce7dc1313baee2f0cdf5bad7","modified":1655066542949},{"_id":"public/about/index.html","hash":"b99636bcecbf2a167304027b0550632084da98df","modified":1655066542949},{"_id":"public/404/index.html","hash":"c8a06da2404425824310badc149b19b56709aef5","modified":1655066542949},{"_id":"public/tags/index.html","hash":"abff0d4bf04800558927c03ed7e9a125a98b5934","modified":1655066542949},{"_id":"public/contact/index.html","hash":"5cb556e4f475c78b636ca95d7628401d05b95c03","modified":1655066542949},{"_id":"public/2022/05/10/javascriptbasicquestions/index.html","hash":"91f4694092ea5c81fd33adf41140e0e6ae8ce55e","modified":1655066542949},{"_id":"public/2022/05/09/vitewithtsx/index.html","hash":"6c705e99bc4a12a399c2c2a7f698bfadde51f3a4","modified":1655066542949},{"_id":"public/2021/09/29/mpvuesteppedpit/index.html","hash":"aa69b9624fb74cb0480ec25e64abeff66d019210","modified":1655066542949},{"_id":"public/2021/06/10/vueelectron/index.html","hash":"6cbe80f0b1669470ff9eeb7efcedcd2fad0f7e56","modified":1655066542949},{"_id":"public/2021/10/28/explainvaluereferenceinjs/index.html","hash":"c8da45f43a3a7e5578ba421da9b9e49c4c76dc19","modified":1655066542949},{"_id":"public/2022/06/13/howtousefrprunjmeterserver/index.html","hash":"39aeaaa27818179b41d803ead1418fc2e2aa6f2e","modified":1655066542949},{"_id":"public/2021/05/21/photosphereviewer/index.html","hash":"b06e7a1d17bac071220c61b77050f715d77b514d","modified":1655066542949},{"_id":"public/2021/05/07/awaitexceptioncatchmethod/index.html","hash":"7b43076b503d9670ca48e947db0994ee025ec473","modified":1655066542949},{"_id":"public/2021/04/15/vantweappinmpvue/index.html","hash":"f502e70eaf0e423b1c24cec015a95808faeaab47","modified":1655066542949},{"_id":"public/archives/index.html","hash":"477df99e8387abdcb476856401312d2cd34aaa5b","modified":1655066542949},{"_id":"public/archives/2021/index.html","hash":"30e23379b561174455f902b366c8eea5668c29ca","modified":1655066542949},{"_id":"public/archives/2021/04/index.html","hash":"e8d5c29640b66152e06a44217b6f3af62c42ab12","modified":1655066542949},{"_id":"public/archives/2021/06/index.html","hash":"4439fc0c68526b8ef0d262099654dce917a83bc3","modified":1655066542949},{"_id":"public/archives/2021/09/index.html","hash":"a7a3935f867e7791604b4d63da20ef0057f73786","modified":1655066542949},{"_id":"public/archives/2021/10/index.html","hash":"423615d876bf8beafe929749384bbb41ec87621c","modified":1655066542949},{"_id":"public/archives/2022/index.html","hash":"1fb680b385bad321906120418e0dae24d5b00273","modified":1655066542949},{"_id":"public/archives/2021/05/index.html","hash":"786cf02e95e989fd58df33909a5bc6508e279461","modified":1655066542949},{"_id":"public/archives/2022/05/index.html","hash":"10dab3d9903955578e67f10f153095fa2239d208","modified":1655066542949},{"_id":"public/archives/2022/06/index.html","hash":"2f94eaabad3c4eee9081158b137810ba6400af63","modified":1655066542949},{"_id":"public/index.html","hash":"890e0bb8efb696e94af2f14a914ed92b9a84f960","modified":1655066542949},{"_id":"public/categories/Node-js/index.html","hash":"4cf8efa8a1c38e2468b22e552dc401ffeb8b73b6","modified":1655066542949},{"_id":"public/categories/Jmeter/index.html","hash":"a9011c4ec36807cdb96db749d569b7ab904f892c","modified":1655066542949},{"_id":"public/categories/JavaScript/index.html","hash":"79e1ce681b43f8b5f5c48d61dfb7de402e304b22","modified":1655066542949},{"_id":"public/categories/mpvue/index.html","hash":"3ddf12344df253bdc895da134dd96d062173868c","modified":1655066542949},{"_id":"public/categories/Vue/index.html","hash":"63a3c79bdf423727d3d91e95de9249c07d0ca2cc","modified":1655066542949},{"_id":"public/categories/Three-js/index.html","hash":"5a647cd279d99f12331f5d3be412fcaad48db927","modified":1655066542949},{"_id":"public/tags/Nodejs/index.html","hash":"55b94e8436b5aecc56d43c509f6b7d901eb8da99","modified":1655066542949},{"_id":"public/tags/mpvue/index.html","hash":"99c62660a538264884e14ffb54af9dd6bdb80e86","modified":1655066542949},{"_id":"public/tags/Vue-js/index.html","hash":"0d4b67caad495b2027f68d646ef0d4455ea1db4d","modified":1655066542949},{"_id":"public/tags/Three-js/index.html","hash":"5c2f969e25803b6946ddb56612ae318728f4704f","modified":1655066542949},{"_id":"public/tags/Jmeter/index.html","hash":"be06a7458eea6e979f4c6b55eb29ac14038a9978","modified":1655066542949},{"_id":"public/tags/PhotoSphereViewer/index.html","hash":"b4f6b3080517218ec09e905ef12bc775de9e1abc","modified":1655066542949},{"_id":"public/tags/Electron/index.html","hash":"5d44c8d4d233bf0538bd10179a60210f49df29c1","modified":1655066542949},{"_id":"public/tags/JavaScript/index.html","hash":"32cfb2f4d67dbbe56dd377121bd61729472c4184","modified":1655066542949},{"_id":"public/tags/Vue/index.html","hash":"c1040a202b1ee9602cea20f3c4c55e29f82a0e15","modified":1655066542949},{"_id":"public/tags/TypeScript/index.html","hash":"5f12f5495d0e28e8ecbc580ef779e91c4ed866e2","modified":1655066542949},{"_id":"public/tags/JSX-TSX/index.html","hash":"75344dfce54cafb35aeb550fcd72c1f0fa5f53de","modified":1655066542949},{"_id":"public/tags/Vite/index.html","hash":"6c9895a2190011a8568eebc2b89b896b3bc531ec","modified":1655066542949},{"_id":"public/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1655066542949},{"_id":"public/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1655066542949},{"_id":"public/medias/logo.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1655066542949},{"_id":"public/medias/star.png","hash":"5cb60bbafe125158773adcdeffc6def385eb710e","modified":1655066542949},{"_id":"public/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1655066542949},{"_id":"public/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1655066542949},{"_id":"public/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1655066542949},{"_id":"public/medias/avatar.jpg","hash":"57058d1431a679f01590e954c63907dc56189e8f","modified":1655066542949},{"_id":"public/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1655066542949},{"_id":"public/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1655066542949},{"_id":"public/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1655066542949},{"_id":"public/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1655066542949},{"_id":"public/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1655066542949},{"_id":"public/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1655066542949},{"_id":"public/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1655066542949},{"_id":"public/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1655066542949},{"_id":"public/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1655066542949},{"_id":"public/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1655066542949},{"_id":"public/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1655066542949},{"_id":"public/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1655066542949},{"_id":"public/medias/reward/alipay.jpg","hash":"1abc719b95d1b26f1f898e6b0a9b7609146e332f","modified":1655066542949},{"_id":"public/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1655066542949},{"_id":"public/medias/reward/wechat.png","hash":"fe93385aa92fe328e01c8221a80b039be9e4e140","modified":1655066542949},{"_id":"public/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1655066542949},{"_id":"public/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1655066542949},{"_id":"public/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1655066542949},{"_id":"public/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1655066542949},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1655066542949},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1655066542949},{"_id":"public/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1655066542949},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1655066542949},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1655066542949},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1655066542949},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1655066542949},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1655066542949},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1655066542949},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1655066542949},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1655066542949},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1655066542949},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1655066542949},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1655066542949},{"_id":"public/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1655066542949},{"_id":"public/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1655066542949},{"_id":"public/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1655066542949},{"_id":"public/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1655066542949},{"_id":"public/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1655066542949},{"_id":"public/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1655066542949},{"_id":"public/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1655066542949},{"_id":"public/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1655066542949},{"_id":"public/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1655066542949},{"_id":"public/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1655066542949},{"_id":"public/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1655066542949},{"_id":"public/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1655066542949},{"_id":"public/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1655066542949},{"_id":"public/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1655066542949},{"_id":"public/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1655066542949},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1655066542949},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1655066542949},{"_id":"public/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1655066542949},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1655066542949},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1655066542949},{"_id":"public/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1655066542949},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1655066542949},{"_id":"public/css/barrager.css","hash":"862879d9313ed8d4c721fa32ef8f94ac2f0a28ae","modified":1655066542949},{"_id":"public/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1655066542949},{"_id":"public/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1655066542949},{"_id":"public/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1655066542949},{"_id":"public/js/jquery.barrager.js","hash":"19c8b2498ca1083e537f7f443172970912107f83","modified":1655066542949},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1655066542949},{"_id":"public/js/search.js","hash":"5caa2d6e3d34c334ac68dfaafc81a583d6123382","modified":1655066542949},{"_id":"public/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1655066542949},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1655066542949},{"_id":"public/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1655066542949},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1655066542949},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1655066542949},{"_id":"public/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1655066542949},{"_id":"public/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1655066542949},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1655066542949},{"_id":"public/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1655066542949},{"_id":"public/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1655066542949},{"_id":"public/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1655066542949},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1655066542949},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1655066542949},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1655066542949},{"_id":"public/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1655066542949},{"_id":"public/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1655066542949},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1655066542949},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1655066542949},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1655066542949},{"_id":"public/libs/prism/prism.css","hash":"62e5474893dece076534352f564ceabd6e088a5a","modified":1655066542949},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1655066542949},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1655066542949},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1655066542949},{"_id":"public/css/matery.css","hash":"659caf80b3551d572339da5b5d1dc451a6d9b801","modified":1655066542949},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1655066542949},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1655066542949},{"_id":"public/libs/gitalk/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1655066542949},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1655066542949},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1655066542949},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1655066542949},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1655066542949},{"_id":"public/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1655066542949},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1655066542949},{"_id":"public/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1655066542949},{"_id":"public/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1655066542949},{"_id":"public/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1655066542949},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1655066542949},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1655066542949},{"_id":"public/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1655066542949},{"_id":"public/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1655066542949},{"_id":"public/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1655066542949},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1655066542949},{"_id":"public/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1655066542949},{"_id":"public/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1655066542949},{"_id":"public/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1655066542949},{"_id":"public/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1655066542949},{"_id":"public/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1655066542949},{"_id":"public/libs/awesome/webfonts/fa-regular-400.svg","hash":"3d3a49445343d80f3b553e3e3425b9a7bd49acaf","modified":1655066542949},{"_id":"public/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1655066542949},{"_id":"public/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1655066542949},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1655066542949},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1655066542949},{"_id":"public/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1655066542949},{"_id":"public/libs/awesome/webfonts/fa-brands-400.svg","hash":"5e2d2a159294576bea69cc3360efb5ffe110ab2d","modified":1655066542949},{"_id":"public/libs/awesome/webfonts/fa-solid-900.svg","hash":"7da88b19e1486f8c968d3cf5ab3f194f01ea17fd","modified":1655066542949}],"Category":[{"name":"Node.js","_id":"cl4brvxsh0004kg7edqfp63my"},{"name":"Jmeter","_id":"cl4brvxsk000ckg7e61e544f1"},{"name":"JavaScript","_id":"cl4brvxsl000jkg7e6mlzgeip"},{"name":"mpvue","_id":"cl4brvxsm000pkg7ehh72ged3"},{"name":"Three.js","_id":"cl4brvxso000zkg7e3w3y3wcx"},{"name":"Vue","_id":"cl4brvxso0015kg7ed5a89bqo"}],"Data":[{"_id":"friends","data":[{"avatar":"https://www.naiquoy.com/imgs/twain.jpeg","name":"Twain","introduction":"永远滴神","url":"https://blog.2333.ink/","title":"前去膜拜"},{"avatar":"https://noechou.cn/wp-content/uploads/2021/01/Cache_-6619600f913cdc0c..jpg","name":"第七纵队","introduction":"里歪是个戆卵","url":"https://noechou.cn/","title":"前去学习"},{"avatar":"https://www.scery.com/images/avatar.png","name":"Anthony","introduction":"As you look around","url":"https://www.scery.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1587892058-wechat_pic_20200406225459.jpg","name":"Taoidle","introduction":"秋深し 隣はなにも しない人","url":"https://www.taoidle.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1588039248-photo_2019-02-14_18-47-31.jpg","name":"johnpoint","introduction":"折腾是第一生产力（不是","url":"https://blog.lvcshu.com/","title":"前去学习"},{"avatar":"https://img.imgdb.cn/item/603750c35f4313ce25f92a35.jpg","name":"SolitudeAlma","introduction":"都懂一点，不是很懂的小捞仔。","url":"https://blog.yt1209.com/","title":"前去学习"},{"avatar":"https://jniantic.cn/logo.jpg","name":"经年思维","introduction":"有一份光，发一份热","url":"https://jniantic.cn","title":"前去学习"}]}],"Page":[{"title":"categories","date":"2021-04-14T16:00:00.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-04-15 00:00:00\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2021-09-28T19:07:02.059Z","path":"categories/index.html","comments":1,"_id":"cl4brvxsd0000kg7edtnj236n","content":"","site":{"data":{"friends":[{"avatar":"https://www.naiquoy.com/imgs/twain.jpeg","name":"Twain","introduction":"永远滴神","url":"https://blog.2333.ink/","title":"前去膜拜"},{"avatar":"https://noechou.cn/wp-content/uploads/2021/01/Cache_-6619600f913cdc0c..jpg","name":"第七纵队","introduction":"里歪是个戆卵","url":"https://noechou.cn/","title":"前去学习"},{"avatar":"https://www.scery.com/images/avatar.png","name":"Anthony","introduction":"As you look around","url":"https://www.scery.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1587892058-wechat_pic_20200406225459.jpg","name":"Taoidle","introduction":"秋深し 隣はなにも しない人","url":"https://www.taoidle.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1588039248-photo_2019-02-14_18-47-31.jpg","name":"johnpoint","introduction":"折腾是第一生产力（不是","url":"https://blog.lvcshu.com/","title":"前去学习"},{"avatar":"https://img.imgdb.cn/item/603750c35f4313ce25f92a35.jpg","name":"SolitudeAlma","introduction":"都懂一点，不是很懂的小捞仔。","url":"https://blog.yt1209.com/","title":"前去学习"},{"avatar":"https://jniantic.cn/logo.jpg","name":"经年思维","introduction":"有一份光，发一份热","url":"https://jniantic.cn","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"friends","date":"2021-04-14T16:00:00.000Z","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2021-04-15 00:00:00\ntype: \"friends\"\nlayout: \"friends\"\n---\n","updated":"2021-09-28T19:07:02.211Z","path":"friends/index.html","comments":1,"_id":"cl4brvxsg0002kg7e2ko7h7h3","content":"","site":{"data":{"friends":[{"avatar":"https://www.naiquoy.com/imgs/twain.jpeg","name":"Twain","introduction":"永远滴神","url":"https://blog.2333.ink/","title":"前去膜拜"},{"avatar":"https://noechou.cn/wp-content/uploads/2021/01/Cache_-6619600f913cdc0c..jpg","name":"第七纵队","introduction":"里歪是个戆卵","url":"https://noechou.cn/","title":"前去学习"},{"avatar":"https://www.scery.com/images/avatar.png","name":"Anthony","introduction":"As you look around","url":"https://www.scery.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1587892058-wechat_pic_20200406225459.jpg","name":"Taoidle","introduction":"秋深し 隣はなにも しない人","url":"https://www.taoidle.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1588039248-photo_2019-02-14_18-47-31.jpg","name":"johnpoint","introduction":"折腾是第一生产力（不是","url":"https://blog.lvcshu.com/","title":"前去学习"},{"avatar":"https://img.imgdb.cn/item/603750c35f4313ce25f92a35.jpg","name":"SolitudeAlma","introduction":"都懂一点，不是很懂的小捞仔。","url":"https://blog.yt1209.com/","title":"前去学习"},{"avatar":"https://jniantic.cn/logo.jpg","name":"经年思维","introduction":"有一份光，发一份热","url":"https://jniantic.cn","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"about","date":"2021-04-14T16:00:00.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-04-15 00:00:00\ntype: \"about\"\nlayout: \"about\"\n---\n","updated":"2021-09-28T19:07:02.069Z","path":"about/index.html","comments":1,"_id":"cl4brvxsi0006kg7e7kvy3kjz","content":"","site":{"data":{"friends":[{"avatar":"https://www.naiquoy.com/imgs/twain.jpeg","name":"Twain","introduction":"永远滴神","url":"https://blog.2333.ink/","title":"前去膜拜"},{"avatar":"https://noechou.cn/wp-content/uploads/2021/01/Cache_-6619600f913cdc0c..jpg","name":"第七纵队","introduction":"里歪是个戆卵","url":"https://noechou.cn/","title":"前去学习"},{"avatar":"https://www.scery.com/images/avatar.png","name":"Anthony","introduction":"As you look around","url":"https://www.scery.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1587892058-wechat_pic_20200406225459.jpg","name":"Taoidle","introduction":"秋深し 隣はなにも しない人","url":"https://www.taoidle.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1588039248-photo_2019-02-14_18-47-31.jpg","name":"johnpoint","introduction":"折腾是第一生产力（不是","url":"https://blog.lvcshu.com/","title":"前去学习"},{"avatar":"https://img.imgdb.cn/item/603750c35f4313ce25f92a35.jpg","name":"SolitudeAlma","introduction":"都懂一点，不是很懂的小捞仔。","url":"https://blog.yt1209.com/","title":"前去学习"},{"avatar":"https://jniantic.cn/logo.jpg","name":"经年思维","introduction":"有一份光，发一份热","url":"https://jniantic.cn","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"404","date":"2021-04-13T08:49:26.000Z","type":"404","layout":"404","description":"Oops~,it looks like something went wrong","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2021-04-13 16:49:26\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Oops~,it looks like something went wrong\"\n---\n","updated":"2021-09-28T19:07:20.662Z","path":"404/index.html","comments":1,"_id":"cl4brvxsj0008kg7e68h96w72","content":"","site":{"data":{"friends":[{"avatar":"https://www.naiquoy.com/imgs/twain.jpeg","name":"Twain","introduction":"永远滴神","url":"https://blog.2333.ink/","title":"前去膜拜"},{"avatar":"https://noechou.cn/wp-content/uploads/2021/01/Cache_-6619600f913cdc0c..jpg","name":"第七纵队","introduction":"里歪是个戆卵","url":"https://noechou.cn/","title":"前去学习"},{"avatar":"https://www.scery.com/images/avatar.png","name":"Anthony","introduction":"As you look around","url":"https://www.scery.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1587892058-wechat_pic_20200406225459.jpg","name":"Taoidle","introduction":"秋深し 隣はなにも しない人","url":"https://www.taoidle.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1588039248-photo_2019-02-14_18-47-31.jpg","name":"johnpoint","introduction":"折腾是第一生产力（不是","url":"https://blog.lvcshu.com/","title":"前去学习"},{"avatar":"https://img.imgdb.cn/item/603750c35f4313ce25f92a35.jpg","name":"SolitudeAlma","introduction":"都懂一点，不是很懂的小捞仔。","url":"https://blog.yt1209.com/","title":"前去学习"},{"avatar":"https://jniantic.cn/logo.jpg","name":"经年思维","introduction":"有一份光，发一份热","url":"https://jniantic.cn","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"tags","date":"2021-04-13T08:48:18.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-04-13 16:48:18\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2021-09-28T19:07:03.647Z","path":"tags/index.html","comments":1,"_id":"cl4brvxsj000akg7e0jfic0mf","content":"","site":{"data":{"friends":[{"avatar":"https://www.naiquoy.com/imgs/twain.jpeg","name":"Twain","introduction":"永远滴神","url":"https://blog.2333.ink/","title":"前去膜拜"},{"avatar":"https://noechou.cn/wp-content/uploads/2021/01/Cache_-6619600f913cdc0c..jpg","name":"第七纵队","introduction":"里歪是个戆卵","url":"https://noechou.cn/","title":"前去学习"},{"avatar":"https://www.scery.com/images/avatar.png","name":"Anthony","introduction":"As you look around","url":"https://www.scery.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1587892058-wechat_pic_20200406225459.jpg","name":"Taoidle","introduction":"秋深し 隣はなにも しない人","url":"https://www.taoidle.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1588039248-photo_2019-02-14_18-47-31.jpg","name":"johnpoint","introduction":"折腾是第一生产力（不是","url":"https://blog.lvcshu.com/","title":"前去学习"},{"avatar":"https://img.imgdb.cn/item/603750c35f4313ce25f92a35.jpg","name":"SolitudeAlma","introduction":"都懂一点，不是很懂的小捞仔。","url":"https://blog.yt1209.com/","title":"前去学习"},{"avatar":"https://jniantic.cn/logo.jpg","name":"经年思维","introduction":"有一份光，发一份热","url":"https://jniantic.cn","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"contact","date":"2021-04-14T16:00:00.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2021-04-15 00:00:00\ntype: \"contact\"\nlayout: \"contact\"\n---\n","updated":"2021-09-28T19:07:02.220Z","path":"contact/index.html","comments":1,"_id":"cl4brvxsk000fkg7e711t9weu","content":"","site":{"data":{"friends":[{"avatar":"https://www.naiquoy.com/imgs/twain.jpeg","name":"Twain","introduction":"永远滴神","url":"https://blog.2333.ink/","title":"前去膜拜"},{"avatar":"https://noechou.cn/wp-content/uploads/2021/01/Cache_-6619600f913cdc0c..jpg","name":"第七纵队","introduction":"里歪是个戆卵","url":"https://noechou.cn/","title":"前去学习"},{"avatar":"https://www.scery.com/images/avatar.png","name":"Anthony","introduction":"As you look around","url":"https://www.scery.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1587892058-wechat_pic_20200406225459.jpg","name":"Taoidle","introduction":"秋深し 隣はなにも しない人","url":"https://www.taoidle.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1588039248-photo_2019-02-14_18-47-31.jpg","name":"johnpoint","introduction":"折腾是第一生产力（不是","url":"https://blog.lvcshu.com/","title":"前去学习"},{"avatar":"https://img.imgdb.cn/item/603750c35f4313ce25f92a35.jpg","name":"SolitudeAlma","introduction":"都懂一点，不是很懂的小捞仔。","url":"https://blog.yt1209.com/","title":"前去学习"},{"avatar":"https://jniantic.cn/logo.jpg","name":"经年思维","introduction":"有一份光，发一份热","url":"https://jniantic.cn","title":"前去学习"}]}},"excerpt":"","more":""}],"Post":[{"title":"Node.js:async/await异常捕获","date":"2021-05-07T10:30:00.000Z","author":"Marshall","img":"https://unsplash.it/1920/1080?random2","top":false,"cover":false,"toc":true,"mathjax":false,"summary":"JavaScript中优雅的处理await异常","reprintPolicy":"cc_by","_content":"\nAsync/await 是 ES7 中的新特性，它可以让开发者编写异步代码像同步代码一样，的确它给我们带来了很多方便的地方，但是在 async/await 中如何来处理错误呢？在异步的调用中，会产生各种不同的错误，例如：HTTP 请求产生了错误、访问 DB 产生的异常、操作文件产生异常。在 Promise 的使用中，当遇到了错误，它会抛出一个异常，该异常将被捕获到一个方法回调中。在 async/await 中，我们又如何处理呢？\n## Node.js:await异常捕获方法\n\n### 一、使用try/catch捕获异常\n```javascript\nasync function asyncFunc() {\n    try {\n        const token = await verifyToken(token);\n        console.log(token)\n    }\n    catch(err) {\n        console.log(err);\n    }\n}\n```\n回顾上面的代码，try/catch 的确可以来解决错误异常的处理，但是让代码非常的不干净，原本 `async/await` 的优势就是让代码更佳的简约，这样一来又违背了它的初衷，这让我们进入了新的思考。\n\n### 二、使用to.js处理异常\n#### 1.CommonJS环境下安装await-to-js\n``` bash\n$ npm i await-to-js --save\n```\n##### 1.引入\n```js\nconst to = require('await-to-js').default;\n```\n##### 2.使用\n```js\nconst[err,res]=await to(verifyToken(token))\nif(err){\n   console.log(err)\n}else{\n    console.log(res)\n}\n```\n#### 2.自己制作to.js\n```javascript\nexport default function to(promise) {\n   return promise.then(data => {\n      return [null, data];\n   })\n   .catch(err => [err]);\n}\n```\n\n##### 使用\n```javascript\nimport to from './to.js'\nconst[err,res]=await to(verifyToken(token))\nif(err){\n   console.log(err)\n}else{\n    console.log(res)\n}\n```\n","source":"_posts/awaitExceptionCatchMethod.md","raw":"---\ntitle: Node.js:async/await异常捕获\ndate: 2021-5-7 18:30:00\nauthor: Marshall\nimg: https://unsplash.it/1920/1080?random2\ntop: false\ncover: false\ntoc: true\nmathjax: false\nsummary: JavaScript中优雅的处理await异常\ncategories: Node.js\nreprintPolicy: cc_by\ntags:\n- Nodejs\n---\n\nAsync/await 是 ES7 中的新特性，它可以让开发者编写异步代码像同步代码一样，的确它给我们带来了很多方便的地方，但是在 async/await 中如何来处理错误呢？在异步的调用中，会产生各种不同的错误，例如：HTTP 请求产生了错误、访问 DB 产生的异常、操作文件产生异常。在 Promise 的使用中，当遇到了错误，它会抛出一个异常，该异常将被捕获到一个方法回调中。在 async/await 中，我们又如何处理呢？\n## Node.js:await异常捕获方法\n\n### 一、使用try/catch捕获异常\n```javascript\nasync function asyncFunc() {\n    try {\n        const token = await verifyToken(token);\n        console.log(token)\n    }\n    catch(err) {\n        console.log(err);\n    }\n}\n```\n回顾上面的代码，try/catch 的确可以来解决错误异常的处理，但是让代码非常的不干净，原本 `async/await` 的优势就是让代码更佳的简约，这样一来又违背了它的初衷，这让我们进入了新的思考。\n\n### 二、使用to.js处理异常\n#### 1.CommonJS环境下安装await-to-js\n``` bash\n$ npm i await-to-js --save\n```\n##### 1.引入\n```js\nconst to = require('await-to-js').default;\n```\n##### 2.使用\n```js\nconst[err,res]=await to(verifyToken(token))\nif(err){\n   console.log(err)\n}else{\n    console.log(res)\n}\n```\n#### 2.自己制作to.js\n```javascript\nexport default function to(promise) {\n   return promise.then(data => {\n      return [null, data];\n   })\n   .catch(err => [err]);\n}\n```\n\n##### 使用\n```javascript\nimport to from './to.js'\nconst[err,res]=await to(verifyToken(token))\nif(err){\n   console.log(err)\n}else{\n    console.log(res)\n}\n```\n","slug":"awaitExceptionCatchMethod","published":1,"updated":"2022-05-09T12:23:27.439Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4brvxse0001kg7eabep2zac","content":"<p>Async/await 是 ES7 中的新特性，它可以让开发者编写异步代码像同步代码一样，的确它给我们带来了很多方便的地方，但是在 async/await 中如何来处理错误呢？在异步的调用中，会产生各种不同的错误，例如：HTTP 请求产生了错误、访问 DB 产生的异常、操作文件产生异常。在 Promise 的使用中，当遇到了错误，它会抛出一个异常，该异常将被捕获到一个方法回调中。在 async/await 中，我们又如何处理呢？</p>\n<h2 id=\"Node-js-await异常捕获方法\"><a href=\"#Node-js-await异常捕获方法\" class=\"headerlink\" title=\"Node.js:await异常捕获方法\"></a>Node.js:await异常捕获方法</h2><h3 id=\"一、使用try-catch捕获异常\"><a href=\"#一、使用try-catch捕获异常\" class=\"headerlink\" title=\"一、使用try/catch捕获异常\"></a>一、使用try/catch捕获异常</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">asyncFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">verifyToken</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>回顾上面的代码，try/catch 的确可以来解决错误异常的处理，但是让代码非常的不干净，原本 <code>async/await</code> 的优势就是让代码更佳的简约，这样一来又违背了它的初衷，这让我们进入了新的思考。</p>\n<h3 id=\"二、使用to-js处理异常\"><a href=\"#二、使用to-js处理异常\" class=\"headerlink\" title=\"二、使用to.js处理异常\"></a>二、使用to.js处理异常</h3><h4 id=\"1-CommonJS环境下安装await-to-js\"><a href=\"#1-CommonJS环境下安装await-to-js\" class=\"headerlink\" title=\"1.CommonJS环境下安装await-to-js\"></a>1.CommonJS环境下安装await-to-js</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i await-to-js --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h5 id=\"1-引入\"><a href=\"#1-引入\" class=\"headerlink\" title=\"1.引入\"></a>1.引入</h5><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> to <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'await-to-js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h5 id=\"2-使用\"><a href=\"#2-使用\" class=\"headerlink\" title=\"2.使用\"></a>2.使用</h5><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span><span class=\"token punctuation\">[</span>err<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">await</span> <span class=\"token function\">to</span><span class=\"token punctuation\">(</span><span class=\"token function\">verifyToken</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"2-自己制作to-js\"><a href=\"#2-自己制作to-js\" class=\"headerlink\" title=\"2.自己制作to.js\"></a>2.自己制作to.js</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">to</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">promise</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">return</span> promise<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>err<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> to <span class=\"token keyword\">from</span> <span class=\"token string\">'./to.js'</span>\n<span class=\"token keyword\">const</span><span class=\"token punctuation\">[</span>err<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">await</span> <span class=\"token function\">to</span><span class=\"token punctuation\">(</span><span class=\"token function\">verifyToken</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{"friends":[{"avatar":"https://www.naiquoy.com/imgs/twain.jpeg","name":"Twain","introduction":"永远滴神","url":"https://blog.2333.ink/","title":"前去膜拜"},{"avatar":"https://noechou.cn/wp-content/uploads/2021/01/Cache_-6619600f913cdc0c..jpg","name":"第七纵队","introduction":"里歪是个戆卵","url":"https://noechou.cn/","title":"前去学习"},{"avatar":"https://www.scery.com/images/avatar.png","name":"Anthony","introduction":"As you look around","url":"https://www.scery.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1587892058-wechat_pic_20200406225459.jpg","name":"Taoidle","introduction":"秋深し 隣はなにも しない人","url":"https://www.taoidle.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1588039248-photo_2019-02-14_18-47-31.jpg","name":"johnpoint","introduction":"折腾是第一生产力（不是","url":"https://blog.lvcshu.com/","title":"前去学习"},{"avatar":"https://img.imgdb.cn/item/603750c35f4313ce25f92a35.jpg","name":"SolitudeAlma","introduction":"都懂一点，不是很懂的小捞仔。","url":"https://blog.yt1209.com/","title":"前去学习"},{"avatar":"https://jniantic.cn/logo.jpg","name":"经年思维","introduction":"有一份光，发一份热","url":"https://jniantic.cn","title":"前去学习"}]}},"excerpt":"","more":"<p>Async/await 是 ES7 中的新特性，它可以让开发者编写异步代码像同步代码一样，的确它给我们带来了很多方便的地方，但是在 async/await 中如何来处理错误呢？在异步的调用中，会产生各种不同的错误，例如：HTTP 请求产生了错误、访问 DB 产生的异常、操作文件产生异常。在 Promise 的使用中，当遇到了错误，它会抛出一个异常，该异常将被捕获到一个方法回调中。在 async/await 中，我们又如何处理呢？</p>\n<h2 id=\"Node-js-await异常捕获方法\"><a href=\"#Node-js-await异常捕获方法\" class=\"headerlink\" title=\"Node.js:await异常捕获方法\"></a>Node.js:await异常捕获方法</h2><h3 id=\"一、使用try-catch捕获异常\"><a href=\"#一、使用try-catch捕获异常\" class=\"headerlink\" title=\"一、使用try/catch捕获异常\"></a>一、使用try/catch捕获异常</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">asyncFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">verifyToken</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>回顾上面的代码，try/catch 的确可以来解决错误异常的处理，但是让代码非常的不干净，原本 <code>async/await</code> 的优势就是让代码更佳的简约，这样一来又违背了它的初衷，这让我们进入了新的思考。</p>\n<h3 id=\"二、使用to-js处理异常\"><a href=\"#二、使用to-js处理异常\" class=\"headerlink\" title=\"二、使用to.js处理异常\"></a>二、使用to.js处理异常</h3><h4 id=\"1-CommonJS环境下安装await-to-js\"><a href=\"#1-CommonJS环境下安装await-to-js\" class=\"headerlink\" title=\"1.CommonJS环境下安装await-to-js\"></a>1.CommonJS环境下安装await-to-js</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i await-to-js --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h5 id=\"1-引入\"><a href=\"#1-引入\" class=\"headerlink\" title=\"1.引入\"></a>1.引入</h5><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> to <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'await-to-js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h5 id=\"2-使用\"><a href=\"#2-使用\" class=\"headerlink\" title=\"2.使用\"></a>2.使用</h5><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">const</span><span class=\"token punctuation\">[</span>err<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">await</span> <span class=\"token function\">to</span><span class=\"token punctuation\">(</span><span class=\"token function\">verifyToken</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"2-自己制作to-js\"><a href=\"#2-自己制作to-js\" class=\"headerlink\" title=\"2.自己制作to.js\"></a>2.自己制作to.js</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">to</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">promise</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">return</span> promise<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>err<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h5><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> to <span class=\"token keyword\">from</span> <span class=\"token string\">'./to.js'</span>\n<span class=\"token keyword\">const</span><span class=\"token punctuation\">[</span>err<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">await</span> <span class=\"token function\">to</span><span class=\"token punctuation\">(</span><span class=\"token function\">verifyToken</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n"},{"title":"如何利用Frp在没有公网的机器上运行Jmeter Server作为slave","date":"2022-06-12T20:30:00.000Z","author":"Marshall","img":"https://unsplash.it/1920/1080?random9","top":true,"cover":true,"toc":true,"mathjax":false,"summary":"愉快的分布式测试","reprintPolicy":"cc_by","_content":"\n在做测试的作业时，突然想到bin目录下有个jmeter-server，看到server我就猜想是否能组成分布式，经过一番查找，发现是可行的，正好手上有一些白嫖的内网服务器，于是想利用自己部署好的Frp来给这些白嫖的服务器焕发第二春，但是教程都是利用内网机器做成分布式，显然是不适用于当前情况的。于是，在看过rmi的原理和经过一番摸索后，终于实现了自己的想法。\n\n## Slave  \n\n### jmeter配置\n修改`bin/jmeter.properties`  \n\n```ini\nremote_hosts=127.0.0.1\n#重点在于修改这两项配置，端口自定义为自己想要的端口，但是两个端口需一致\nserver_port=6789 \nserver.rmi.localport=6789 \n```  \n\n启动命令  \n```bash\njmeter-server -Djava.rmi.server.hostname=0.0.0.0 #将0.0.0.0修改为frps端的ip\n```\n\n### frpc配置  \nfrps配置就不多介绍了，可以自行查看文档，重点在于frpc如何配置。  \n因为rmi是基于`tcp/ip`协议的，所以应该应该这样配置:\n```ini\n[jmeter]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 6789 #修改成自己想要的端口 \nremote_port = 6789 #修改成自己想要的端口\n```\n\n## Master\n\n### 修改jmeter配置\n\n修改`bin/jmeter.properties`  \n\n```ini\n[jmeter]\n#将0.0.0.0修改为frps端端ip，端口为Slave配置的端口\nremote_hosts=0.0.0.0:6789\n```\n\n\n","source":"_posts/howToUseFrpRunJmeterServer.md","raw":"---\ntitle: 如何利用Frp在没有公网的机器上运行Jmeter Server作为slave\ndate: 2022-06-13 04:30:00  \nauthor: Marshall  \nimg: https://unsplash.it/1920/1080?random9\ntop: true  \ncover: true  \ntoc: true  \nmathjax: false  \nsummary: 愉快的分布式测试  \ncategories: Jmeter  \nreprintPolicy: cc_by  \ntags:\n- Jmeter\n---\n\n在做测试的作业时，突然想到bin目录下有个jmeter-server，看到server我就猜想是否能组成分布式，经过一番查找，发现是可行的，正好手上有一些白嫖的内网服务器，于是想利用自己部署好的Frp来给这些白嫖的服务器焕发第二春，但是教程都是利用内网机器做成分布式，显然是不适用于当前情况的。于是，在看过rmi的原理和经过一番摸索后，终于实现了自己的想法。\n\n## Slave  \n\n### jmeter配置\n修改`bin/jmeter.properties`  \n\n```ini\nremote_hosts=127.0.0.1\n#重点在于修改这两项配置，端口自定义为自己想要的端口，但是两个端口需一致\nserver_port=6789 \nserver.rmi.localport=6789 \n```  \n\n启动命令  \n```bash\njmeter-server -Djava.rmi.server.hostname=0.0.0.0 #将0.0.0.0修改为frps端的ip\n```\n\n### frpc配置  \nfrps配置就不多介绍了，可以自行查看文档，重点在于frpc如何配置。  \n因为rmi是基于`tcp/ip`协议的，所以应该应该这样配置:\n```ini\n[jmeter]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 6789 #修改成自己想要的端口 \nremote_port = 6789 #修改成自己想要的端口\n```\n\n## Master\n\n### 修改jmeter配置\n\n修改`bin/jmeter.properties`  \n\n```ini\n[jmeter]\n#将0.0.0.0修改为frps端端ip，端口为Slave配置的端口\nremote_hosts=0.0.0.0:6789\n```\n\n\n","slug":"howToUseFrpRunJmeterServer","published":1,"updated":"2022-06-12T20:41:56.349Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4brvxsg0003kg7e3osc4iwg","content":"<p>在做测试的作业时，突然想到bin目录下有个jmeter-server，看到server我就猜想是否能组成分布式，经过一番查找，发现是可行的，正好手上有一些白嫖的内网服务器，于是想利用自己部署好的Frp来给这些白嫖的服务器焕发第二春，但是教程都是利用内网机器做成分布式，显然是不适用于当前情况的。于是，在看过rmi的原理和经过一番摸索后，终于实现了自己的想法。</p>\n<h2 id=\"Slave\"><a href=\"#Slave\" class=\"headerlink\" title=\"Slave\"></a>Slave</h2><h3 id=\"jmeter配置\"><a href=\"#jmeter配置\" class=\"headerlink\" title=\"jmeter配置\"></a>jmeter配置</h3><p>修改<code>bin/jmeter.properties</code>  </p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token constant\">remote_hosts</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>127.0.0.1</span>\n<span class=\"token comment\">#重点在于修改这两项配置，端口自定义为自己想要的端口，但是两个端口需一致</span>\n<span class=\"token constant\">server_port</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>6789 </span>\n<span class=\"token constant\">server.rmi.localport</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>6789 </span>\n```  \n\n启动命令  \n```bash\njmeter-server -Djava.rmi.server.hostname<span class=\"token attr-value\"><span class=\"token punctuation\">=</span>0.0.0.0 #将0.0.0.0修改为frps端的ip</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"frpc配置\"><a href=\"#frpc配置\" class=\"headerlink\" title=\"frpc配置\"></a>frpc配置</h3><p>frps配置就不多介绍了，可以自行查看文档，重点在于frpc如何配置。<br>因为rmi是基于<code>tcp/ip</code>协议的，所以应该应该这样配置:</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token selector\">[jmeter]</span>\n<span class=\"token constant\">type</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> tcp</span>\n<span class=\"token constant\">local_ip</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> 127.0.0.1</span>\n<span class=\"token constant\">local_port</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> 6789 #修改成自己想要的端口 </span>\n<span class=\"token constant\">remote_port</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> 6789 #修改成自己想要的端口</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Master\"><a href=\"#Master\" class=\"headerlink\" title=\"Master\"></a>Master</h2><h3 id=\"修改jmeter配置\"><a href=\"#修改jmeter配置\" class=\"headerlink\" title=\"修改jmeter配置\"></a>修改jmeter配置</h3><p>修改<code>bin/jmeter.properties</code>  </p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token selector\">[jmeter]</span>\n<span class=\"token comment\">#将0.0.0.0修改为frps端端ip，端口为Slave配置的端口</span>\n<span class=\"token constant\">remote_hosts</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>0.0.0.0:6789</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n","site":{"data":{"friends":[{"avatar":"https://www.naiquoy.com/imgs/twain.jpeg","name":"Twain","introduction":"永远滴神","url":"https://blog.2333.ink/","title":"前去膜拜"},{"avatar":"https://noechou.cn/wp-content/uploads/2021/01/Cache_-6619600f913cdc0c..jpg","name":"第七纵队","introduction":"里歪是个戆卵","url":"https://noechou.cn/","title":"前去学习"},{"avatar":"https://www.scery.com/images/avatar.png","name":"Anthony","introduction":"As you look around","url":"https://www.scery.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1587892058-wechat_pic_20200406225459.jpg","name":"Taoidle","introduction":"秋深し 隣はなにも しない人","url":"https://www.taoidle.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1588039248-photo_2019-02-14_18-47-31.jpg","name":"johnpoint","introduction":"折腾是第一生产力（不是","url":"https://blog.lvcshu.com/","title":"前去学习"},{"avatar":"https://img.imgdb.cn/item/603750c35f4313ce25f92a35.jpg","name":"SolitudeAlma","introduction":"都懂一点，不是很懂的小捞仔。","url":"https://blog.yt1209.com/","title":"前去学习"},{"avatar":"https://jniantic.cn/logo.jpg","name":"经年思维","introduction":"有一份光，发一份热","url":"https://jniantic.cn","title":"前去学习"}]}},"excerpt":"","more":"<p>在做测试的作业时，突然想到bin目录下有个jmeter-server，看到server我就猜想是否能组成分布式，经过一番查找，发现是可行的，正好手上有一些白嫖的内网服务器，于是想利用自己部署好的Frp来给这些白嫖的服务器焕发第二春，但是教程都是利用内网机器做成分布式，显然是不适用于当前情况的。于是，在看过rmi的原理和经过一番摸索后，终于实现了自己的想法。</p>\n<h2 id=\"Slave\"><a href=\"#Slave\" class=\"headerlink\" title=\"Slave\"></a>Slave</h2><h3 id=\"jmeter配置\"><a href=\"#jmeter配置\" class=\"headerlink\" title=\"jmeter配置\"></a>jmeter配置</h3><p>修改<code>bin/jmeter.properties</code>  </p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token constant\">remote_hosts</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>127.0.0.1</span>\n<span class=\"token comment\">#重点在于修改这两项配置，端口自定义为自己想要的端口，但是两个端口需一致</span>\n<span class=\"token constant\">server_port</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>6789 </span>\n<span class=\"token constant\">server.rmi.localport</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>6789 </span>\n```  \n\n启动命令  \n```bash\njmeter-server -Djava.rmi.server.hostname<span class=\"token attr-value\"><span class=\"token punctuation\">=</span>0.0.0.0 #将0.0.0.0修改为frps端的ip</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"frpc配置\"><a href=\"#frpc配置\" class=\"headerlink\" title=\"frpc配置\"></a>frpc配置</h3><p>frps配置就不多介绍了，可以自行查看文档，重点在于frpc如何配置。<br>因为rmi是基于<code>tcp/ip</code>协议的，所以应该应该这样配置:</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token selector\">[jmeter]</span>\n<span class=\"token constant\">type</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> tcp</span>\n<span class=\"token constant\">local_ip</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> 127.0.0.1</span>\n<span class=\"token constant\">local_port</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> 6789 #修改成自己想要的端口 </span>\n<span class=\"token constant\">remote_port</span> <span class=\"token attr-value\"><span class=\"token punctuation\">=</span> 6789 #修改成自己想要的端口</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Master\"><a href=\"#Master\" class=\"headerlink\" title=\"Master\"></a>Master</h2><h3 id=\"修改jmeter配置\"><a href=\"#修改jmeter配置\" class=\"headerlink\" title=\"修改jmeter配置\"></a>修改jmeter配置</h3><p>修改<code>bin/jmeter.properties</code>  </p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token selector\">[jmeter]</span>\n<span class=\"token comment\">#将0.0.0.0修改为frps端端ip，端口为Slave配置的端口</span>\n<span class=\"token constant\">remote_hosts</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>0.0.0.0:6789</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n"},{"title":"JavaScript的值传递和引用传递","date":"2021-10-28T00:30:00.000Z","author":"Marshall","img":"https://unsplash.it/1920/1080?random7","top":true,"cover":false,"toc":true,"mathjax":false,"summary":"在JavaScript中，到底是值传递，还是引用传递呢？函数参数是按什么传递呢？","reprintPolicy":"cc_by","_content":"\n在不断的学习中，碰到一个有趣的问题:“在JavaScript中，到底是值传递，还是引用传递呢？函数参数是按什么传递呢？”\n\n引用文章:\n\n* [JavaScript的值传递和引用传递](https://blog.fundebug.com/2017/08/09/explain_value_reference_in_js/)\n* [JS中的值是按值传递，还是按引用传递呢？](https://segmentfault.com/a/1190000005794070)\n* [JavaScript深入之参数按值传递](https://github.com/mqyqingfeng/Blog/issues/10)\n* [JavaScript 深入了解基本类型和引用类型的值](https://segmentfault.com/a/1190000006752076)\n\n## JavaScript的数据类型\nJavaScript 有 5 种基本的数据类型（值类型），分别是:`Boolean`、`null`、`undefined`、`String` 和 `Number`。还有3种引用数据类型:`Object`、`Array`、`Function`，它们通过引用来传递。\n### 基本数据类型\n如果一个基本的数据类型绑定到某个变量，我们可以认为该变量包含这个基本数据类型的值。\n并且基本类型的变量是存放在栈内存（Stack）里的\n```JavaScript\nvar x = 10;\nvar y = \"abc\";\nvar z = null;\n```\n当我们使用=将这些变量赋值到另外的变量，实际上是将对应的值拷贝了一份，然后赋值给新的变量。我们把它称作值传递。\n```JavaScript\nvar x = 10;\nvar y = \"abc\";\n\nvar a = x;\nvar b = y;\n\nconsole.log(x, y, a, b); // 10, 'abc', 10, 'abc'\n```\n`a`和`x`都包含 10，`b`和`y`都包含'abc'，并且它们是完全独立的拷贝，互不干涉。如果我们将a的值改变，x不会受到影响。这就是值传递，不会因为被赋值后的变量改变而导致原变量改变。\n### 引用数据类型\n如果一个变量绑定到一个非基本数据类型(Array, Function, Object)，那么它只记录了一个内存地址，该地址存放了具体的数据。注意之前提到指向基本数据类型的变量相当于包含了数据，而现在指向非基本数据类型的变量本身是不包含数据的。\n并且引用类型的值是保存在堆内存（Heap）中的对象（Object）。\n与其他编程语言不同，JavaScript 不能直接操作对象的内存空间（堆内存）。\n> 栈内存中保存了变量标识符和指向堆内存中该对象的指针\n> 堆内存中保存了对象的内容\n```JavaScript\nvar reference = [1];\nvar refCopy = reference;\nreference.push(2);\nconsole.log(reference, refCopy); // [1, 2], [1, 2]\n```\n`reference`和`refCopy`指向同一个数组。 如果我们更新`reference`，`refCopy`也会受到影响。可见，引用后的对象更新后，被引用的对象也更新了。\n关键点:\n>运算符=就是创建或修改变量在内存中的指向.\n>初始化变量时为创建,重新赋值即为修改\n\n举一个例子\n```JavaScript\nvar a = {b: 1};// a = {b: 1}\nvar c = a;// c = {b: 1}\na = 2;// 重新赋值a\nconsole.log(c);// {b: 1}\n```\n接着是上一段代码在内存中的分布:  \n\n| 栈   | 堆   |\n| ---- | ---- |\n|   a,c   | b |\n\n然后一步一步执行代码:\n\n1. 创建变量a指向对象{b: 1};\n2. 创建变量c指向对象{b: 1};\n3. a重新指向常量区的2;  \n\n| 栈 | 堆 | 常量区 |\n| ---- | ----| ----|\n| a | | 2|\n| c |{b:1} | |\n\n所以c从始至终都是指向对象{b: 1}.\n\n\n### ==和===的比较\n对于基本类型的变量，==会对变量进行隐式转换，可以对不同类型的变量进行比较，===不仅进行值得比较，还要进行数据类型的比较。\n对于引用类型的变量，==和===只会判断引用的地址是否相同，而不会判断对象具体里属性以及值是否相同。因此，如果两个变量指向相同的对象，则返回`true`。\n## 函数参数按值传递\n### 定义\n在《JavaScript高级程序设计》第三版 4.1.3，讲到传递参数：\n> ECMAScript中所有函数的参数都是按值传递的。\n>\n### 按值传递\n举个简单的例子：\n```JavaScript\nvar value = 1;\nfunction foo(v) {\n    v = 2;\n    console.log(v); //2\n}\nfoo(value);\nconsole.log(value) // 1\n```\n很好理解，当传递 value 到函数 foo 中，相当于拷贝了一份 value，假设拷贝的这份叫 _value，函数中修改的都是 _value 的值，而不会影响原来的 value 值。\n### 按共享传递 call by sharing\n准确的说，JS中的基本类型按值传递，对象类型按共享传递的(call by sharing，也叫按对象传递、按对象共享传递)。最早由Barbara Liskov. 在1974年的GLU语言中提出。该求值策略被用于Python、Java、Ruby、JS等多种语言。\n该策略的重点是：调用函数传参时，函数接受对象实参引用的副本(既不是按值传递的对象副本，也不是按引用传递的隐式引用)。 它和按引用传递的不同在于：在共享传递中对函数形参的赋值，不会影响实参的值。如下面例子中，不可以通过修改形参o的值，来修改obj的值。\n\n```JavaScript\nvar obj = {x : 1};\nfunction foo(o) {\n    o = 100;\n}\nfoo(obj);\nconsole.log(obj.x); // 仍然是1, obj并未被修改为100.\n```\n然而，虽然引用是副本，引用的对象是相同的。它们共享相同的对象，所以修改形参对象的属性值，也会影响到实参的属性值。\n```JavaScript\nvar obj = {x : 1};\nfunction foo(o) {\n    o.x = 3;\n}\nfoo(obj);\nconsole.log(obj.x); // 3, 被修改了!\n```\n乍一看，函数的参数为对象时，好像是引用传递，但是红宝书说ECMAScript中所有函数的参数都是按值传递的, 这是没错的。但是**拷贝副本也是一种值的拷贝**，这时会觉得是引用传递，但实际上还是值的传递。理解这个问题的关键在于如何理解值传递和引用类型，这里要强调的是**数据类型**和**方法参数**的传递方式没有**半毛钱关系**。  \n简单来说, **引用类型的值传递**, 在方法内部如果对形参重新赋值, 哪怕是同一个类的对象, 在赋值后修改对象的属性, 实参的对应的属性值都不会改变, 同时实参指向的对象也不变, 而形参在重新赋值后已经指向一个新的对象了; **而引用类型的引用传递**, 在方法内部如果对形参重新赋值, 那么实参也跟着重新赋值, 实参最初所指向的那个对象将不被任何变量所指向。其实就是说形参也会被分配一个新的地址，指向实参的值。\n\n## 一道简单的题\n```JavaScript\nfunction changeAgeAndReference(person) {\n    person.age = 25;\n    person = {\n        name: \"John\",\n        age: 50\n    };\n\n    return person;\n}\nvar personObj1 = {\n    name: \"Alex\",\n    age: 30\n};\nvar personObj2 = changeAgeAndReference(personObj1);\nconsole.log(personObj1); // -> ?\nconsole.log(personObj2); // -> ?\n```\n\n最后，若有错误的地方，欢迎大家指出来！\n","source":"_posts/explainValueReferenceInJs.md","raw":"---\ntitle: JavaScript的值传递和引用传递\ndate: 2021-10-28 08:30:00\nauthor: Marshall\nimg: https://unsplash.it/1920/1080?random7\ntop: true\ncover: false\ntoc: true\nmathjax: false\nsummary: 在JavaScript中，到底是值传递，还是引用传递呢？函数参数是按什么传递呢？\ncategories: JavaScript\nreprintPolicy: cc_by\ntags:\n- JavaScript\n---\n\n在不断的学习中，碰到一个有趣的问题:“在JavaScript中，到底是值传递，还是引用传递呢？函数参数是按什么传递呢？”\n\n引用文章:\n\n* [JavaScript的值传递和引用传递](https://blog.fundebug.com/2017/08/09/explain_value_reference_in_js/)\n* [JS中的值是按值传递，还是按引用传递呢？](https://segmentfault.com/a/1190000005794070)\n* [JavaScript深入之参数按值传递](https://github.com/mqyqingfeng/Blog/issues/10)\n* [JavaScript 深入了解基本类型和引用类型的值](https://segmentfault.com/a/1190000006752076)\n\n## JavaScript的数据类型\nJavaScript 有 5 种基本的数据类型（值类型），分别是:`Boolean`、`null`、`undefined`、`String` 和 `Number`。还有3种引用数据类型:`Object`、`Array`、`Function`，它们通过引用来传递。\n### 基本数据类型\n如果一个基本的数据类型绑定到某个变量，我们可以认为该变量包含这个基本数据类型的值。\n并且基本类型的变量是存放在栈内存（Stack）里的\n```JavaScript\nvar x = 10;\nvar y = \"abc\";\nvar z = null;\n```\n当我们使用=将这些变量赋值到另外的变量，实际上是将对应的值拷贝了一份，然后赋值给新的变量。我们把它称作值传递。\n```JavaScript\nvar x = 10;\nvar y = \"abc\";\n\nvar a = x;\nvar b = y;\n\nconsole.log(x, y, a, b); // 10, 'abc', 10, 'abc'\n```\n`a`和`x`都包含 10，`b`和`y`都包含'abc'，并且它们是完全独立的拷贝，互不干涉。如果我们将a的值改变，x不会受到影响。这就是值传递，不会因为被赋值后的变量改变而导致原变量改变。\n### 引用数据类型\n如果一个变量绑定到一个非基本数据类型(Array, Function, Object)，那么它只记录了一个内存地址，该地址存放了具体的数据。注意之前提到指向基本数据类型的变量相当于包含了数据，而现在指向非基本数据类型的变量本身是不包含数据的。\n并且引用类型的值是保存在堆内存（Heap）中的对象（Object）。\n与其他编程语言不同，JavaScript 不能直接操作对象的内存空间（堆内存）。\n> 栈内存中保存了变量标识符和指向堆内存中该对象的指针\n> 堆内存中保存了对象的内容\n```JavaScript\nvar reference = [1];\nvar refCopy = reference;\nreference.push(2);\nconsole.log(reference, refCopy); // [1, 2], [1, 2]\n```\n`reference`和`refCopy`指向同一个数组。 如果我们更新`reference`，`refCopy`也会受到影响。可见，引用后的对象更新后，被引用的对象也更新了。\n关键点:\n>运算符=就是创建或修改变量在内存中的指向.\n>初始化变量时为创建,重新赋值即为修改\n\n举一个例子\n```JavaScript\nvar a = {b: 1};// a = {b: 1}\nvar c = a;// c = {b: 1}\na = 2;// 重新赋值a\nconsole.log(c);// {b: 1}\n```\n接着是上一段代码在内存中的分布:  \n\n| 栈   | 堆   |\n| ---- | ---- |\n|   a,c   | b |\n\n然后一步一步执行代码:\n\n1. 创建变量a指向对象{b: 1};\n2. 创建变量c指向对象{b: 1};\n3. a重新指向常量区的2;  \n\n| 栈 | 堆 | 常量区 |\n| ---- | ----| ----|\n| a | | 2|\n| c |{b:1} | |\n\n所以c从始至终都是指向对象{b: 1}.\n\n\n### ==和===的比较\n对于基本类型的变量，==会对变量进行隐式转换，可以对不同类型的变量进行比较，===不仅进行值得比较，还要进行数据类型的比较。\n对于引用类型的变量，==和===只会判断引用的地址是否相同，而不会判断对象具体里属性以及值是否相同。因此，如果两个变量指向相同的对象，则返回`true`。\n## 函数参数按值传递\n### 定义\n在《JavaScript高级程序设计》第三版 4.1.3，讲到传递参数：\n> ECMAScript中所有函数的参数都是按值传递的。\n>\n### 按值传递\n举个简单的例子：\n```JavaScript\nvar value = 1;\nfunction foo(v) {\n    v = 2;\n    console.log(v); //2\n}\nfoo(value);\nconsole.log(value) // 1\n```\n很好理解，当传递 value 到函数 foo 中，相当于拷贝了一份 value，假设拷贝的这份叫 _value，函数中修改的都是 _value 的值，而不会影响原来的 value 值。\n### 按共享传递 call by sharing\n准确的说，JS中的基本类型按值传递，对象类型按共享传递的(call by sharing，也叫按对象传递、按对象共享传递)。最早由Barbara Liskov. 在1974年的GLU语言中提出。该求值策略被用于Python、Java、Ruby、JS等多种语言。\n该策略的重点是：调用函数传参时，函数接受对象实参引用的副本(既不是按值传递的对象副本，也不是按引用传递的隐式引用)。 它和按引用传递的不同在于：在共享传递中对函数形参的赋值，不会影响实参的值。如下面例子中，不可以通过修改形参o的值，来修改obj的值。\n\n```JavaScript\nvar obj = {x : 1};\nfunction foo(o) {\n    o = 100;\n}\nfoo(obj);\nconsole.log(obj.x); // 仍然是1, obj并未被修改为100.\n```\n然而，虽然引用是副本，引用的对象是相同的。它们共享相同的对象，所以修改形参对象的属性值，也会影响到实参的属性值。\n```JavaScript\nvar obj = {x : 1};\nfunction foo(o) {\n    o.x = 3;\n}\nfoo(obj);\nconsole.log(obj.x); // 3, 被修改了!\n```\n乍一看，函数的参数为对象时，好像是引用传递，但是红宝书说ECMAScript中所有函数的参数都是按值传递的, 这是没错的。但是**拷贝副本也是一种值的拷贝**，这时会觉得是引用传递，但实际上还是值的传递。理解这个问题的关键在于如何理解值传递和引用类型，这里要强调的是**数据类型**和**方法参数**的传递方式没有**半毛钱关系**。  \n简单来说, **引用类型的值传递**, 在方法内部如果对形参重新赋值, 哪怕是同一个类的对象, 在赋值后修改对象的属性, 实参的对应的属性值都不会改变, 同时实参指向的对象也不变, 而形参在重新赋值后已经指向一个新的对象了; **而引用类型的引用传递**, 在方法内部如果对形参重新赋值, 那么实参也跟着重新赋值, 实参最初所指向的那个对象将不被任何变量所指向。其实就是说形参也会被分配一个新的地址，指向实参的值。\n\n## 一道简单的题\n```JavaScript\nfunction changeAgeAndReference(person) {\n    person.age = 25;\n    person = {\n        name: \"John\",\n        age: 50\n    };\n\n    return person;\n}\nvar personObj1 = {\n    name: \"Alex\",\n    age: 30\n};\nvar personObj2 = changeAgeAndReference(personObj1);\nconsole.log(personObj1); // -> ?\nconsole.log(personObj2); // -> ?\n```\n\n最后，若有错误的地方，欢迎大家指出来！\n","slug":"explainValueReferenceInJs","published":1,"updated":"2022-05-09T12:23:27.437Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4brvxsi0007kg7e3pshbffa","content":"<p>在不断的学习中，碰到一个有趣的问题:“在JavaScript中，到底是值传递，还是引用传递呢？函数参数是按什么传递呢？”</p>\n<p>引用文章:</p>\n<ul>\n<li><a href=\"https://blog.fundebug.com/2017/08/09/explain_value_reference_in_js/\">JavaScript的值传递和引用传递</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000005794070\">JS中的值是按值传递，还是按引用传递呢？</a></li>\n<li><a href=\"https://github.com/mqyqingfeng/Blog/issues/10\">JavaScript深入之参数按值传递</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000006752076\">JavaScript 深入了解基本类型和引用类型的值</a></li>\n</ul>\n<h2 id=\"JavaScript的数据类型\"><a href=\"#JavaScript的数据类型\" class=\"headerlink\" title=\"JavaScript的数据类型\"></a>JavaScript的数据类型</h2><p>JavaScript 有 5 种基本的数据类型（值类型），分别是:<code>Boolean</code>、<code>null</code>、<code>undefined</code>、<code>String</code> 和 <code>Number</code>。还有3种引用数据类型:<code>Object</code>、<code>Array</code>、<code>Function</code>，它们通过引用来传递。</p>\n<h3 id=\"基本数据类型\"><a href=\"#基本数据类型\" class=\"headerlink\" title=\"基本数据类型\"></a>基本数据类型</h3><p>如果一个基本的数据类型绑定到某个变量，我们可以认为该变量包含这个基本数据类型的值。<br>并且基本类型的变量是存放在栈内存（Stack）里的</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">var x &#x3D; 10;\nvar y &#x3D; &quot;abc&quot;;\nvar z &#x3D; null;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>当我们使用=将这些变量赋值到另外的变量，实际上是将对应的值拷贝了一份，然后赋值给新的变量。我们把它称作值传递。</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">var x &#x3D; 10;\nvar y &#x3D; &quot;abc&quot;;\n\nvar a &#x3D; x;\nvar b &#x3D; y;\n\nconsole.log(x, y, a, b); &#x2F;&#x2F; 10, &#39;abc&#39;, 10, &#39;abc&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>a</code>和<code>x</code>都包含 10，<code>b</code>和<code>y</code>都包含’abc’，并且它们是完全独立的拷贝，互不干涉。如果我们将a的值改变，x不会受到影响。这就是值传递，不会因为被赋值后的变量改变而导致原变量改变。</p>\n<h3 id=\"引用数据类型\"><a href=\"#引用数据类型\" class=\"headerlink\" title=\"引用数据类型\"></a>引用数据类型</h3><p>如果一个变量绑定到一个非基本数据类型(Array, Function, Object)，那么它只记录了一个内存地址，该地址存放了具体的数据。注意之前提到指向基本数据类型的变量相当于包含了数据，而现在指向非基本数据类型的变量本身是不包含数据的。<br>并且引用类型的值是保存在堆内存（Heap）中的对象（Object）。<br>与其他编程语言不同，JavaScript 不能直接操作对象的内存空间（堆内存）。</p>\n<blockquote>\n<p>栈内存中保存了变量标识符和指向堆内存中该对象的指针<br>堆内存中保存了对象的内容</p>\n</blockquote>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">var reference &#x3D; [1];\nvar refCopy &#x3D; reference;\nreference.push(2);\nconsole.log(reference, refCopy); &#x2F;&#x2F; [1, 2], [1, 2]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>reference</code>和<code>refCopy</code>指向同一个数组。 如果我们更新<code>reference</code>，<code>refCopy</code>也会受到影响。可见，引用后的对象更新后，被引用的对象也更新了。<br>关键点:</p>\n<blockquote>\n<p>运算符=就是创建或修改变量在内存中的指向.<br>初始化变量时为创建,重新赋值即为修改</p>\n</blockquote>\n<p>举一个例子</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">var a &#x3D; &#123;b: 1&#125;;&#x2F;&#x2F; a &#x3D; &#123;b: 1&#125;\nvar c &#x3D; a;&#x2F;&#x2F; c &#x3D; &#123;b: 1&#125;\na &#x3D; 2;&#x2F;&#x2F; 重新赋值a\nconsole.log(c);&#x2F;&#x2F; &#123;b: 1&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接着是上一段代码在内存中的分布:  </p>\n<table>\n<thead>\n<tr>\n<th>栈</th>\n<th>堆</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>a,c</td>\n<td>b</td>\n</tr>\n</tbody></table>\n<p>然后一步一步执行代码:</p>\n<ol>\n<li>创建变量a指向对象{b: 1};</li>\n<li>创建变量c指向对象{b: 1};</li>\n<li>a重新指向常量区的2;  </li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>栈</th>\n<th>堆</th>\n<th>常量区</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>a</td>\n<td></td>\n<td>2</td>\n</tr>\n<tr>\n<td>c</td>\n<td>{b:1}</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>所以c从始至终都是指向对象{b: 1}.</p>\n<h3 id=\"和-的比较\"><a href=\"#和-的比较\" class=\"headerlink\" title=\"==和===的比较\"></a>==和===的比较</h3><p>对于基本类型的变量，==会对变量进行隐式转换，可以对不同类型的变量进行比较，===不仅进行值得比较，还要进行数据类型的比较。<br>对于引用类型的变量，==和===只会判断引用的地址是否相同，而不会判断对象具体里属性以及值是否相同。因此，如果两个变量指向相同的对象，则返回<code>true</code>。</p>\n<h2 id=\"函数参数按值传递\"><a href=\"#函数参数按值传递\" class=\"headerlink\" title=\"函数参数按值传递\"></a>函数参数按值传递</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>在《JavaScript高级程序设计》第三版 4.1.3，讲到传递参数：</p>\n<blockquote>\n<p>ECMAScript中所有函数的参数都是按值传递的。</p>\n</blockquote>\n<h3 id=\"按值传递\"><a href=\"#按值传递\" class=\"headerlink\" title=\"按值传递\"></a>按值传递</h3><p>举个简单的例子：</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">var value &#x3D; 1;\nfunction foo(v) &#123;\n    v &#x3D; 2;\n    console.log(v); &#x2F;&#x2F;2\n&#125;\nfoo(value);\nconsole.log(value) &#x2F;&#x2F; 1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>很好理解，当传递 value 到函数 foo 中，相当于拷贝了一份 value，假设拷贝的这份叫 _value，函数中修改的都是 _value 的值，而不会影响原来的 value 值。</p>\n<h3 id=\"按共享传递-call-by-sharing\"><a href=\"#按共享传递-call-by-sharing\" class=\"headerlink\" title=\"按共享传递 call by sharing\"></a>按共享传递 call by sharing</h3><p>准确的说，JS中的基本类型按值传递，对象类型按共享传递的(call by sharing，也叫按对象传递、按对象共享传递)。最早由Barbara Liskov. 在1974年的GLU语言中提出。该求值策略被用于Python、Java、Ruby、JS等多种语言。<br>该策略的重点是：调用函数传参时，函数接受对象实参引用的副本(既不是按值传递的对象副本，也不是按引用传递的隐式引用)。 它和按引用传递的不同在于：在共享传递中对函数形参的赋值，不会影响实参的值。如下面例子中，不可以通过修改形参o的值，来修改obj的值。</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">var obj &#x3D; &#123;x : 1&#125;;\nfunction foo(o) &#123;\n    o &#x3D; 100;\n&#125;\nfoo(obj);\nconsole.log(obj.x); &#x2F;&#x2F; 仍然是1, obj并未被修改为100.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然而，虽然引用是副本，引用的对象是相同的。它们共享相同的对象，所以修改形参对象的属性值，也会影响到实参的属性值。</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">var obj &#x3D; &#123;x : 1&#125;;\nfunction foo(o) &#123;\n    o.x &#x3D; 3;\n&#125;\nfoo(obj);\nconsole.log(obj.x); &#x2F;&#x2F; 3, 被修改了!<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>乍一看，函数的参数为对象时，好像是引用传递，但是红宝书说ECMAScript中所有函数的参数都是按值传递的, 这是没错的。但是<strong>拷贝副本也是一种值的拷贝</strong>，这时会觉得是引用传递，但实际上还是值的传递。理解这个问题的关键在于如何理解值传递和引用类型，这里要强调的是<strong>数据类型</strong>和<strong>方法参数</strong>的传递方式没有<strong>半毛钱关系</strong>。<br>简单来说, <strong>引用类型的值传递</strong>, 在方法内部如果对形参重新赋值, 哪怕是同一个类的对象, 在赋值后修改对象的属性, 实参的对应的属性值都不会改变, 同时实参指向的对象也不变, 而形参在重新赋值后已经指向一个新的对象了; <strong>而引用类型的引用传递</strong>, 在方法内部如果对形参重新赋值, 那么实参也跟着重新赋值, 实参最初所指向的那个对象将不被任何变量所指向。其实就是说形参也会被分配一个新的地址，指向实参的值。</p>\n<h2 id=\"一道简单的题\"><a href=\"#一道简单的题\" class=\"headerlink\" title=\"一道简单的题\"></a>一道简单的题</h2><pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">function changeAgeAndReference(person) &#123;\n    person.age &#x3D; 25;\n    person &#x3D; &#123;\n        name: &quot;John&quot;,\n        age: 50\n    &#125;;\n\n    return person;\n&#125;\nvar personObj1 &#x3D; &#123;\n    name: &quot;Alex&quot;,\n    age: 30\n&#125;;\nvar personObj2 &#x3D; changeAgeAndReference(personObj1);\nconsole.log(personObj1); &#x2F;&#x2F; -&gt; ?\nconsole.log(personObj2); &#x2F;&#x2F; -&gt; ?<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>最后，若有错误的地方，欢迎大家指出来！</p>\n","site":{"data":{"friends":[{"avatar":"https://www.naiquoy.com/imgs/twain.jpeg","name":"Twain","introduction":"永远滴神","url":"https://blog.2333.ink/","title":"前去膜拜"},{"avatar":"https://noechou.cn/wp-content/uploads/2021/01/Cache_-6619600f913cdc0c..jpg","name":"第七纵队","introduction":"里歪是个戆卵","url":"https://noechou.cn/","title":"前去学习"},{"avatar":"https://www.scery.com/images/avatar.png","name":"Anthony","introduction":"As you look around","url":"https://www.scery.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1587892058-wechat_pic_20200406225459.jpg","name":"Taoidle","introduction":"秋深し 隣はなにも しない人","url":"https://www.taoidle.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1588039248-photo_2019-02-14_18-47-31.jpg","name":"johnpoint","introduction":"折腾是第一生产力（不是","url":"https://blog.lvcshu.com/","title":"前去学习"},{"avatar":"https://img.imgdb.cn/item/603750c35f4313ce25f92a35.jpg","name":"SolitudeAlma","introduction":"都懂一点，不是很懂的小捞仔。","url":"https://blog.yt1209.com/","title":"前去学习"},{"avatar":"https://jniantic.cn/logo.jpg","name":"经年思维","introduction":"有一份光，发一份热","url":"https://jniantic.cn","title":"前去学习"}]}},"excerpt":"","more":"<p>在不断的学习中，碰到一个有趣的问题:“在JavaScript中，到底是值传递，还是引用传递呢？函数参数是按什么传递呢？”</p>\n<p>引用文章:</p>\n<ul>\n<li><a href=\"https://blog.fundebug.com/2017/08/09/explain_value_reference_in_js/\">JavaScript的值传递和引用传递</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000005794070\">JS中的值是按值传递，还是按引用传递呢？</a></li>\n<li><a href=\"https://github.com/mqyqingfeng/Blog/issues/10\">JavaScript深入之参数按值传递</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000006752076\">JavaScript 深入了解基本类型和引用类型的值</a></li>\n</ul>\n<h2 id=\"JavaScript的数据类型\"><a href=\"#JavaScript的数据类型\" class=\"headerlink\" title=\"JavaScript的数据类型\"></a>JavaScript的数据类型</h2><p>JavaScript 有 5 种基本的数据类型（值类型），分别是:<code>Boolean</code>、<code>null</code>、<code>undefined</code>、<code>String</code> 和 <code>Number</code>。还有3种引用数据类型:<code>Object</code>、<code>Array</code>、<code>Function</code>，它们通过引用来传递。</p>\n<h3 id=\"基本数据类型\"><a href=\"#基本数据类型\" class=\"headerlink\" title=\"基本数据类型\"></a>基本数据类型</h3><p>如果一个基本的数据类型绑定到某个变量，我们可以认为该变量包含这个基本数据类型的值。<br>并且基本类型的变量是存放在栈内存（Stack）里的</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">var x &#x3D; 10;\nvar y &#x3D; &quot;abc&quot;;\nvar z &#x3D; null;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>当我们使用=将这些变量赋值到另外的变量，实际上是将对应的值拷贝了一份，然后赋值给新的变量。我们把它称作值传递。</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">var x &#x3D; 10;\nvar y &#x3D; &quot;abc&quot;;\n\nvar a &#x3D; x;\nvar b &#x3D; y;\n\nconsole.log(x, y, a, b); &#x2F;&#x2F; 10, &#39;abc&#39;, 10, &#39;abc&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>a</code>和<code>x</code>都包含 10，<code>b</code>和<code>y</code>都包含’abc’，并且它们是完全独立的拷贝，互不干涉。如果我们将a的值改变，x不会受到影响。这就是值传递，不会因为被赋值后的变量改变而导致原变量改变。</p>\n<h3 id=\"引用数据类型\"><a href=\"#引用数据类型\" class=\"headerlink\" title=\"引用数据类型\"></a>引用数据类型</h3><p>如果一个变量绑定到一个非基本数据类型(Array, Function, Object)，那么它只记录了一个内存地址，该地址存放了具体的数据。注意之前提到指向基本数据类型的变量相当于包含了数据，而现在指向非基本数据类型的变量本身是不包含数据的。<br>并且引用类型的值是保存在堆内存（Heap）中的对象（Object）。<br>与其他编程语言不同，JavaScript 不能直接操作对象的内存空间（堆内存）。</p>\n<blockquote>\n<p>栈内存中保存了变量标识符和指向堆内存中该对象的指针<br>堆内存中保存了对象的内容</p>\n</blockquote>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">var reference &#x3D; [1];\nvar refCopy &#x3D; reference;\nreference.push(2);\nconsole.log(reference, refCopy); &#x2F;&#x2F; [1, 2], [1, 2]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>reference</code>和<code>refCopy</code>指向同一个数组。 如果我们更新<code>reference</code>，<code>refCopy</code>也会受到影响。可见，引用后的对象更新后，被引用的对象也更新了。<br>关键点:</p>\n<blockquote>\n<p>运算符=就是创建或修改变量在内存中的指向.<br>初始化变量时为创建,重新赋值即为修改</p>\n</blockquote>\n<p>举一个例子</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">var a &#x3D; &#123;b: 1&#125;;&#x2F;&#x2F; a &#x3D; &#123;b: 1&#125;\nvar c &#x3D; a;&#x2F;&#x2F; c &#x3D; &#123;b: 1&#125;\na &#x3D; 2;&#x2F;&#x2F; 重新赋值a\nconsole.log(c);&#x2F;&#x2F; &#123;b: 1&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接着是上一段代码在内存中的分布:  </p>\n<table>\n<thead>\n<tr>\n<th>栈</th>\n<th>堆</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>a,c</td>\n<td>b</td>\n</tr>\n</tbody></table>\n<p>然后一步一步执行代码:</p>\n<ol>\n<li>创建变量a指向对象{b: 1};</li>\n<li>创建变量c指向对象{b: 1};</li>\n<li>a重新指向常量区的2;  </li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>栈</th>\n<th>堆</th>\n<th>常量区</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>a</td>\n<td></td>\n<td>2</td>\n</tr>\n<tr>\n<td>c</td>\n<td>{b:1}</td>\n<td></td>\n</tr>\n</tbody></table>\n<p>所以c从始至终都是指向对象{b: 1}.</p>\n<h3 id=\"和-的比较\"><a href=\"#和-的比较\" class=\"headerlink\" title=\"==和===的比较\"></a>==和===的比较</h3><p>对于基本类型的变量，==会对变量进行隐式转换，可以对不同类型的变量进行比较，===不仅进行值得比较，还要进行数据类型的比较。<br>对于引用类型的变量，==和===只会判断引用的地址是否相同，而不会判断对象具体里属性以及值是否相同。因此，如果两个变量指向相同的对象，则返回<code>true</code>。</p>\n<h2 id=\"函数参数按值传递\"><a href=\"#函数参数按值传递\" class=\"headerlink\" title=\"函数参数按值传递\"></a>函数参数按值传递</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>在《JavaScript高级程序设计》第三版 4.1.3，讲到传递参数：</p>\n<blockquote>\n<p>ECMAScript中所有函数的参数都是按值传递的。</p>\n</blockquote>\n<h3 id=\"按值传递\"><a href=\"#按值传递\" class=\"headerlink\" title=\"按值传递\"></a>按值传递</h3><p>举个简单的例子：</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">var value &#x3D; 1;\nfunction foo(v) &#123;\n    v &#x3D; 2;\n    console.log(v); &#x2F;&#x2F;2\n&#125;\nfoo(value);\nconsole.log(value) &#x2F;&#x2F; 1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>很好理解，当传递 value 到函数 foo 中，相当于拷贝了一份 value，假设拷贝的这份叫 _value，函数中修改的都是 _value 的值，而不会影响原来的 value 值。</p>\n<h3 id=\"按共享传递-call-by-sharing\"><a href=\"#按共享传递-call-by-sharing\" class=\"headerlink\" title=\"按共享传递 call by sharing\"></a>按共享传递 call by sharing</h3><p>准确的说，JS中的基本类型按值传递，对象类型按共享传递的(call by sharing，也叫按对象传递、按对象共享传递)。最早由Barbara Liskov. 在1974年的GLU语言中提出。该求值策略被用于Python、Java、Ruby、JS等多种语言。<br>该策略的重点是：调用函数传参时，函数接受对象实参引用的副本(既不是按值传递的对象副本，也不是按引用传递的隐式引用)。 它和按引用传递的不同在于：在共享传递中对函数形参的赋值，不会影响实参的值。如下面例子中，不可以通过修改形参o的值，来修改obj的值。</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">var obj &#x3D; &#123;x : 1&#125;;\nfunction foo(o) &#123;\n    o &#x3D; 100;\n&#125;\nfoo(obj);\nconsole.log(obj.x); &#x2F;&#x2F; 仍然是1, obj并未被修改为100.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然而，虽然引用是副本，引用的对象是相同的。它们共享相同的对象，所以修改形参对象的属性值，也会影响到实参的属性值。</p>\n<pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">var obj &#x3D; &#123;x : 1&#125;;\nfunction foo(o) &#123;\n    o.x &#x3D; 3;\n&#125;\nfoo(obj);\nconsole.log(obj.x); &#x2F;&#x2F; 3, 被修改了!<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>乍一看，函数的参数为对象时，好像是引用传递，但是红宝书说ECMAScript中所有函数的参数都是按值传递的, 这是没错的。但是<strong>拷贝副本也是一种值的拷贝</strong>，这时会觉得是引用传递，但实际上还是值的传递。理解这个问题的关键在于如何理解值传递和引用类型，这里要强调的是<strong>数据类型</strong>和<strong>方法参数</strong>的传递方式没有<strong>半毛钱关系</strong>。<br>简单来说, <strong>引用类型的值传递</strong>, 在方法内部如果对形参重新赋值, 哪怕是同一个类的对象, 在赋值后修改对象的属性, 实参的对应的属性值都不会改变, 同时实参指向的对象也不变, 而形参在重新赋值后已经指向一个新的对象了; <strong>而引用类型的引用传递</strong>, 在方法内部如果对形参重新赋值, 那么实参也跟着重新赋值, 实参最初所指向的那个对象将不被任何变量所指向。其实就是说形参也会被分配一个新的地址，指向实参的值。</p>\n<h2 id=\"一道简单的题\"><a href=\"#一道简单的题\" class=\"headerlink\" title=\"一道简单的题\"></a>一道简单的题</h2><pre class=\"line-numbers language-JavaScript\" data-language=\"JavaScript\"><code class=\"language-JavaScript\">function changeAgeAndReference(person) &#123;\n    person.age &#x3D; 25;\n    person &#x3D; &#123;\n        name: &quot;John&quot;,\n        age: 50\n    &#125;;\n\n    return person;\n&#125;\nvar personObj1 &#x3D; &#123;\n    name: &quot;Alex&quot;,\n    age: 30\n&#125;;\nvar personObj2 &#x3D; changeAgeAndReference(personObj1);\nconsole.log(personObj1); &#x2F;&#x2F; -&gt; ?\nconsole.log(personObj2); &#x2F;&#x2F; -&gt; ?<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>最后，若有错误的地方，欢迎大家指出来！</p>\n"},{"title":"mpvue踩过的坑","date":"2021-09-28T16:00:00.000Z","author":"Marshall","img":"https://unsplash.it/1920/1080?random5","top":true,"cover":false,"toc":true,"mathjax":false,"summary":"mpvue是一个很棒的框架","reprintPolicy":"cc_by","_content":"\n前言：暑假期间，为了完成一个校内项目，需要开发一个小程序，因为有Vue的基础，所以采用了[mpvue](http://mpvue.com/) 框架进行开发，本篇博客记录了一些我碰到的坑以及注意事项\n\n## 为什么我新增了页面，没有反应？\n\n因为 webpack 编译的文件是由配置的 entry 决定的，新增的页面并没有添加进 entry，所以需要手动 `npm run dev` 一下，考虑不是高频操作，所以还可以忍受\n\n## 如何获取小程序在 page onLoad 时候传递的 options?\n\n在所有 页面 的组件内可以通过 this.$root.$mp.query 进行获取。\n\n## 如何正确引用并使用微信小程序的原生UI库?\n\n利用npm安装，或者git clone后将dist目录移到相关目录后，在根目录下的`app.json`文件中，对`usingComponents`进行相关配置对应对路径即可。以[vant-weapp](https://youzan.github.io/vant-weapp/#/home) 中的van-button组件为例\n\n```json\n{\n  ...,\n  \"usingComponents\": {\n    \"van-button\": \"/static/vant/button/index\",\n    ...\n  },\n  ...\n}\n```\n\n在使用时，需要对组件进行双向绑定对时候，须遵守mpvue的相关语法，此处用van-field为例，代码如下\n>官方示例\n```html\n<van-field\n    value=\"{{ value }}\"\n    placeholder=\"请输入用户名\"\n    border=\"{{ false }}\"\n    bind:change=\"onChange\"\n/>\n```\n```javascript\nPage({\n    data: {\n        value: '',\n    },\n\n    onChange(event) {\n        console.log(event.detail);\n    },\n});\n```\n\n>实际使用\n```html\n<van-field\n    :value=\"value\"\n    placeholder=\"请输入用户名\"\n    :border=\"false\"\n    @input=\"value=$event.mp.detail\"\n/>\n```\n```javascript\nexport default{\n    data(){\n        return{\n            value: ''\n        }\n    }\n}\n```\n\n很显然，我们需要做的就是将微信小程序中双向绑定的语法改为mpvue的双向绑定语法，在微信小程序中，attribute的风格为mustache style，既`{{value}}`的形式，进行修改时，不需要带`{{}}`，并且如果是绑定的是属性，需要在属性前加上`:`，如果绑定的是监听DOM事件，需要加上`@`，例如\n```html\n<input value=\"{{value}}\" />\n//需改为\n<input :value=\"value\" />\n\n<view id=\"tapTest\" bindtap=\"tapName\"> Click me! </view>\n//需改为\n<view id=\"tapTest\" @click=\"tapName\"> Click me! </view>\n```\n\n> 注意！监听DOM事件的修改方式需按下表进行修改\n\n这是事件映射表，修改时需对照此表进行修改，左侧为 WEB 事件，右侧为 小程序 对应事件\n```json\n{\n    \"click\": \"tap\",\n    \"touchstart\": \"touchstart\",\n    \"touchmove\": \"touchmove\",\n    \"touchcancel\": \"touchcancel\",\n    \"touchend\": \"touchend\",\n    \"tap\": \"tap\",\n    \"longtap\": \"longtap\",\n    \"input\": \"input\",\n    \"change\": \"change\",\n    \"submit\": \"submit\",\n    \"blur\": \"blur\",\n    \"focus\": \"focus\",\n    \"reset\": \"reset\",\n    \"confirm\": \"confirm\",\n    \"columnchange\": \"columnchange\",\n    \"linechange\": \"linechange\",\n    \"error\": \"error\",\n    \"scrolltoupper\": \"scrolltoupper\",\n    \"scrolltolower\": \"scrolltolower\",\n    \"scroll\": \"scroll\"\n}\n```\n\n## 生命周期的区别\n总所周知，Vue的生命周期是精髓所在，下图为mpvue的生命周期图示\n![mpvue](http://mpvue.com/assets/img/lifecycle.a8762770.jpg)\n详细的解释请看[mpvue使用手册](http://mpvue.com/mpvue/) 和 [微信小程序生命周期](https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page.html)  \n这里要注意的是，如无特殊需求，请不要使用小程序的生命周期钩子，善用好生命周期会对项目有极大的帮助！\n\n## 踩过的一些坑\n### click事件捕捉问题\n[van-tabs组件@click事件捕捉问题](https://github.com/Rychou/mpvue-vant/issues/47)  \n```javascript\n// 修改前\nthis.trigger('click', index);\n// 修改后\nthis.trigger('vclick', index);\n```\n\n```html\n<van-tabs :active=\"active\" @vclick=\"handleClick\">\n```\n\n```javascript\nhandleClick ({ mp }) {\n  console.log(mp.detail.index)\n}\n```\n使用van-tabs组件时，事件捕获的信息丢失，经过一番查找后才发现是mpvue的问题,这里引用一位开发者的回答\n> `detail`信息被封装到`e.mp.detail`中去了。这种`vant`组件库用原生写的组件是可以捕获到`click`这种事件的。文档中指的是`vue`组件在引用时无法使用`@click`。  \n\n因此，如果遇到click事件出现问题，请参照上面的方法对组件进行修改\n### background-color在`main.json`配置没有生效\n一般来说，`style tag`会自动加上`scoped`属性，`scoped`是为了解决全局css冲突的问题，因此，你的css selector是会被带上hash的，因此无法生效，例如\n```css\n/*你的代码*/\npage{\nbackground-color:red;\n}\n/*编译结果*/\npage.data-v-fe19b4ea{\nbackground-color:red;\n}\n```\n最好不要去掉`style tag`里的`scoped`属性，我是这样解决的\n```css\n/*最外层的div加上一个class cover*/\n.cover {\n  background-color: #e5e5e5;\n  height: 100%;\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  overflow: auto;\n  overscroll-behavior-y: contain;\n}\n\n```\n或者\n```html\n<style lang=\"stylus\" rel=\"stylesheet/stylus\" scoped>\n@import \"../../../static/stylus/mixin.styl\"\nbody\n  background-color #fff\n</style>\n```\n\n### 一些建议\n#### request\n在微信小程序中，建议对request函数进行封装，不仅提升开发时的效率，代码也会更容易理解，将`wx.request`函数进行配置后封装，返回`Promise`对象。\n```javascript\n//我是这样封装的，进行开发时需根据实际需求进行修改\nimport Config from './config'\nimport Token from './token'\n\nfunction request (url, method, data, header = {}, noRefetch = false) {\n  wx.showLoading({\n    title: '加载中' //  数据请求前loading\n  })\n  return new Promise((resolve, reject) => {\n    wx.request({\n      url: Config.baseUrl + url,\n      method: method,\n      data: data,\n      header: {\n        'token': wx.getStorageSync('token'),\n        'content-type': 'application/json'\n      },\n      success: function (res) {\n        let code = res.statusCode.toString()\n        let startChar = code.charAt(0)\n        if (startChar === '2') {\n          resolve(res.data)\n        } else {\n          if (code === '401') {\n            if (!noRefetch) {\n              Token.getTokenFromServer().then((token) => {\n                //  获取token之后重新发送请求\n                request(url, method, data, {}, true).then((res) => {\n                  resolve(res)\n                })\n              })\n            }\n          } else {\n            reject(res)\n          }\n        }\n      },\n      fail: function (error) {\n        reject(error)\n      },\n      complete: function () {\n        wx.hideLoading()\n      }\n    })\n  })\n}\nfunction get (obj) {\n  return request(obj.url, 'GET', obj.data)\n}\nfunction post (obj) {\n  return request(obj.url, 'POST', obj.data)\n}\n\nexport default {\n  request,\n  get,\n  post\n}\n\n```\n#### promisify\n将微信小程序的api进行封装，转化为promise\n```javascript\n/**\n * 用于把微信原生callback的api，转换为promise\n *\n * 示例：\n *     import {promisify} from '...' // 这一部可以在全局引入或挂载\n *     const res= await promisify(wx.showModal,{content:'确认删除？'})\n */\nexport function promisify( api, options, ...params ) {\n  return new Promise( (resolve, reject) => {\n    api( Object.assign( {},  options,  {\n      success: resolve,\n      fail: reject\n    } ), ...params )\n  } ).catch( err=>console.log(err) )\n}\n\n// 暴露的是一个对象\nexport default {\n  promisify\n}\n\n```\n","source":"_posts/mpvueSteppedPit.md","raw":"---\ntitle: mpvue踩过的坑\ndate: 2021-9-29 00:00:00\nauthor: Marshall\nimg: https://unsplash.it/1920/1080?random5\ntop: true\ncover: false\ntoc: true\nmathjax: false\nsummary: mpvue是一个很棒的框架\ncategories: mpvue\nreprintPolicy: cc_by\ntags:\n- mpvue\n- Vue.js\n---\n\n前言：暑假期间，为了完成一个校内项目，需要开发一个小程序，因为有Vue的基础，所以采用了[mpvue](http://mpvue.com/) 框架进行开发，本篇博客记录了一些我碰到的坑以及注意事项\n\n## 为什么我新增了页面，没有反应？\n\n因为 webpack 编译的文件是由配置的 entry 决定的，新增的页面并没有添加进 entry，所以需要手动 `npm run dev` 一下，考虑不是高频操作，所以还可以忍受\n\n## 如何获取小程序在 page onLoad 时候传递的 options?\n\n在所有 页面 的组件内可以通过 this.$root.$mp.query 进行获取。\n\n## 如何正确引用并使用微信小程序的原生UI库?\n\n利用npm安装，或者git clone后将dist目录移到相关目录后，在根目录下的`app.json`文件中，对`usingComponents`进行相关配置对应对路径即可。以[vant-weapp](https://youzan.github.io/vant-weapp/#/home) 中的van-button组件为例\n\n```json\n{\n  ...,\n  \"usingComponents\": {\n    \"van-button\": \"/static/vant/button/index\",\n    ...\n  },\n  ...\n}\n```\n\n在使用时，需要对组件进行双向绑定对时候，须遵守mpvue的相关语法，此处用van-field为例，代码如下\n>官方示例\n```html\n<van-field\n    value=\"{{ value }}\"\n    placeholder=\"请输入用户名\"\n    border=\"{{ false }}\"\n    bind:change=\"onChange\"\n/>\n```\n```javascript\nPage({\n    data: {\n        value: '',\n    },\n\n    onChange(event) {\n        console.log(event.detail);\n    },\n});\n```\n\n>实际使用\n```html\n<van-field\n    :value=\"value\"\n    placeholder=\"请输入用户名\"\n    :border=\"false\"\n    @input=\"value=$event.mp.detail\"\n/>\n```\n```javascript\nexport default{\n    data(){\n        return{\n            value: ''\n        }\n    }\n}\n```\n\n很显然，我们需要做的就是将微信小程序中双向绑定的语法改为mpvue的双向绑定语法，在微信小程序中，attribute的风格为mustache style，既`{{value}}`的形式，进行修改时，不需要带`{{}}`，并且如果是绑定的是属性，需要在属性前加上`:`，如果绑定的是监听DOM事件，需要加上`@`，例如\n```html\n<input value=\"{{value}}\" />\n//需改为\n<input :value=\"value\" />\n\n<view id=\"tapTest\" bindtap=\"tapName\"> Click me! </view>\n//需改为\n<view id=\"tapTest\" @click=\"tapName\"> Click me! </view>\n```\n\n> 注意！监听DOM事件的修改方式需按下表进行修改\n\n这是事件映射表，修改时需对照此表进行修改，左侧为 WEB 事件，右侧为 小程序 对应事件\n```json\n{\n    \"click\": \"tap\",\n    \"touchstart\": \"touchstart\",\n    \"touchmove\": \"touchmove\",\n    \"touchcancel\": \"touchcancel\",\n    \"touchend\": \"touchend\",\n    \"tap\": \"tap\",\n    \"longtap\": \"longtap\",\n    \"input\": \"input\",\n    \"change\": \"change\",\n    \"submit\": \"submit\",\n    \"blur\": \"blur\",\n    \"focus\": \"focus\",\n    \"reset\": \"reset\",\n    \"confirm\": \"confirm\",\n    \"columnchange\": \"columnchange\",\n    \"linechange\": \"linechange\",\n    \"error\": \"error\",\n    \"scrolltoupper\": \"scrolltoupper\",\n    \"scrolltolower\": \"scrolltolower\",\n    \"scroll\": \"scroll\"\n}\n```\n\n## 生命周期的区别\n总所周知，Vue的生命周期是精髓所在，下图为mpvue的生命周期图示\n![mpvue](http://mpvue.com/assets/img/lifecycle.a8762770.jpg)\n详细的解释请看[mpvue使用手册](http://mpvue.com/mpvue/) 和 [微信小程序生命周期](https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page.html)  \n这里要注意的是，如无特殊需求，请不要使用小程序的生命周期钩子，善用好生命周期会对项目有极大的帮助！\n\n## 踩过的一些坑\n### click事件捕捉问题\n[van-tabs组件@click事件捕捉问题](https://github.com/Rychou/mpvue-vant/issues/47)  \n```javascript\n// 修改前\nthis.trigger('click', index);\n// 修改后\nthis.trigger('vclick', index);\n```\n\n```html\n<van-tabs :active=\"active\" @vclick=\"handleClick\">\n```\n\n```javascript\nhandleClick ({ mp }) {\n  console.log(mp.detail.index)\n}\n```\n使用van-tabs组件时，事件捕获的信息丢失，经过一番查找后才发现是mpvue的问题,这里引用一位开发者的回答\n> `detail`信息被封装到`e.mp.detail`中去了。这种`vant`组件库用原生写的组件是可以捕获到`click`这种事件的。文档中指的是`vue`组件在引用时无法使用`@click`。  \n\n因此，如果遇到click事件出现问题，请参照上面的方法对组件进行修改\n### background-color在`main.json`配置没有生效\n一般来说，`style tag`会自动加上`scoped`属性，`scoped`是为了解决全局css冲突的问题，因此，你的css selector是会被带上hash的，因此无法生效，例如\n```css\n/*你的代码*/\npage{\nbackground-color:red;\n}\n/*编译结果*/\npage.data-v-fe19b4ea{\nbackground-color:red;\n}\n```\n最好不要去掉`style tag`里的`scoped`属性，我是这样解决的\n```css\n/*最外层的div加上一个class cover*/\n.cover {\n  background-color: #e5e5e5;\n  height: 100%;\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  overflow: auto;\n  overscroll-behavior-y: contain;\n}\n\n```\n或者\n```html\n<style lang=\"stylus\" rel=\"stylesheet/stylus\" scoped>\n@import \"../../../static/stylus/mixin.styl\"\nbody\n  background-color #fff\n</style>\n```\n\n### 一些建议\n#### request\n在微信小程序中，建议对request函数进行封装，不仅提升开发时的效率，代码也会更容易理解，将`wx.request`函数进行配置后封装，返回`Promise`对象。\n```javascript\n//我是这样封装的，进行开发时需根据实际需求进行修改\nimport Config from './config'\nimport Token from './token'\n\nfunction request (url, method, data, header = {}, noRefetch = false) {\n  wx.showLoading({\n    title: '加载中' //  数据请求前loading\n  })\n  return new Promise((resolve, reject) => {\n    wx.request({\n      url: Config.baseUrl + url,\n      method: method,\n      data: data,\n      header: {\n        'token': wx.getStorageSync('token'),\n        'content-type': 'application/json'\n      },\n      success: function (res) {\n        let code = res.statusCode.toString()\n        let startChar = code.charAt(0)\n        if (startChar === '2') {\n          resolve(res.data)\n        } else {\n          if (code === '401') {\n            if (!noRefetch) {\n              Token.getTokenFromServer().then((token) => {\n                //  获取token之后重新发送请求\n                request(url, method, data, {}, true).then((res) => {\n                  resolve(res)\n                })\n              })\n            }\n          } else {\n            reject(res)\n          }\n        }\n      },\n      fail: function (error) {\n        reject(error)\n      },\n      complete: function () {\n        wx.hideLoading()\n      }\n    })\n  })\n}\nfunction get (obj) {\n  return request(obj.url, 'GET', obj.data)\n}\nfunction post (obj) {\n  return request(obj.url, 'POST', obj.data)\n}\n\nexport default {\n  request,\n  get,\n  post\n}\n\n```\n#### promisify\n将微信小程序的api进行封装，转化为promise\n```javascript\n/**\n * 用于把微信原生callback的api，转换为promise\n *\n * 示例：\n *     import {promisify} from '...' // 这一部可以在全局引入或挂载\n *     const res= await promisify(wx.showModal,{content:'确认删除？'})\n */\nexport function promisify( api, options, ...params ) {\n  return new Promise( (resolve, reject) => {\n    api( Object.assign( {},  options,  {\n      success: resolve,\n      fail: reject\n    } ), ...params )\n  } ).catch( err=>console.log(err) )\n}\n\n// 暴露的是一个对象\nexport default {\n  promisify\n}\n\n```\n","slug":"mpvueSteppedPit","published":1,"updated":"2022-05-09T12:23:27.429Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4brvxsj0009kg7eh7jq7bt7","content":"<p>前言：暑假期间，为了完成一个校内项目，需要开发一个小程序，因为有Vue的基础，所以采用了<a href=\"http://mpvue.com/\">mpvue</a> 框架进行开发，本篇博客记录了一些我碰到的坑以及注意事项</p>\n<h2 id=\"为什么我新增了页面，没有反应？\"><a href=\"#为什么我新增了页面，没有反应？\" class=\"headerlink\" title=\"为什么我新增了页面，没有反应？\"></a>为什么我新增了页面，没有反应？</h2><p>因为 webpack 编译的文件是由配置的 entry 决定的，新增的页面并没有添加进 entry，所以需要手动 <code>npm run dev</code> 一下，考虑不是高频操作，所以还可以忍受</p>\n<h2 id=\"如何获取小程序在-page-onLoad-时候传递的-options\"><a href=\"#如何获取小程序在-page-onLoad-时候传递的-options\" class=\"headerlink\" title=\"如何获取小程序在 page onLoad 时候传递的 options?\"></a>如何获取小程序在 page onLoad 时候传递的 options?</h2><p>在所有 页面 的组件内可以通过 this.$root.$mp.query 进行获取。</p>\n<h2 id=\"如何正确引用并使用微信小程序的原生UI库\"><a href=\"#如何正确引用并使用微信小程序的原生UI库\" class=\"headerlink\" title=\"如何正确引用并使用微信小程序的原生UI库?\"></a>如何正确引用并使用微信小程序的原生UI库?</h2><p>利用npm安装，或者git clone后将dist目录移到相关目录后，在根目录下的<code>app.json</code>文件中，对<code>usingComponents</code>进行相关配置对应对路径即可。以<a href=\"https://youzan.github.io/vant-weapp/#/home\">vant-weapp</a> 中的van-button组件为例</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  ...<span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"usingComponents\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"van-button\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/static/vant/button/index\"</span><span class=\"token punctuation\">,</span>\n    ...\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  ...\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在使用时，需要对组件进行双向绑定对时候，须遵守mpvue的相关语法，此处用van-field为例，代码如下</p>\n<blockquote>\n<p>官方示例</p>\n</blockquote>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>van-field</span>\n    <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123; value &#125;&#125;<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入用户名<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">border</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123; false &#125;&#125;<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>change</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onChange<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        value<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>实际使用</p>\n</blockquote>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>van-field</span>\n    <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入用户名<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">:border</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value=$event.mp.detail<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">&#123;</span>\n            value<span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>很显然，我们需要做的就是将微信小程序中双向绑定的语法改为mpvue的双向绑定语法，在微信小程序中，attribute的风格为mustache style，既<code>&#123;&#123;value&#125;&#125;</code>的形式，进行修改时，不需要带<code>&#123;&#123;&#125;&#125;</code>，并且如果是绑定的是属性，需要在属性前加上<code>:</code>，如果绑定的是监听DOM事件，需要加上<code>@</code>，例如</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123;value&#125;&#125;<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n//需改为\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tapTest<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tapName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> Click me! <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span>\n//需改为\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tapTest<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tapName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> Click me! <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>注意！监听DOM事件的修改方式需按下表进行修改</p>\n</blockquote>\n<p>这是事件映射表，修改时需对照此表进行修改，左侧为 WEB 事件，右侧为 小程序 对应事件</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"click\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tap\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"touchstart\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"touchstart\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"touchmove\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"touchmove\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"touchcancel\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"touchcancel\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"touchend\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"touchend\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"tap\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tap\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"longtap\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"longtap\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"input\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"input\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"change\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"change\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"submit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"submit\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"blur\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"blur\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"focus\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"focus\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"reset\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"reset\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"confirm\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"confirm\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"columnchange\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"columnchange\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"linechange\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"linechange\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"error\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"scrolltoupper\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"scrolltoupper\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"scrolltolower\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"scrolltolower\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"scroll\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"scroll\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"生命周期的区别\"><a href=\"#生命周期的区别\" class=\"headerlink\" title=\"生命周期的区别\"></a>生命周期的区别</h2><p>总所周知，Vue的生命周期是精髓所在，下图为mpvue的生命周期图示<br><img src=\"http://mpvue.com/assets/img/lifecycle.a8762770.jpg\" alt=\"mpvue\"><br>详细的解释请看<a href=\"http://mpvue.com/mpvue/\">mpvue使用手册</a> 和 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page.html\">微信小程序生命周期</a><br>这里要注意的是，如无特殊需求，请不要使用小程序的生命周期钩子，善用好生命周期会对项目有极大的帮助！</p>\n<h2 id=\"踩过的一些坑\"><a href=\"#踩过的一些坑\" class=\"headerlink\" title=\"踩过的一些坑\"></a>踩过的一些坑</h2><h3 id=\"click事件捕捉问题\"><a href=\"#click事件捕捉问题\" class=\"headerlink\" title=\"click事件捕捉问题\"></a>click事件捕捉问题</h3><p><a href=\"https://github.com/Rychou/mpvue-vant/issues/47\">van-tabs组件@click事件捕捉问题</a>  </p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 修改前</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 修改后</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span><span class=\"token string\">'vclick'</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>van-tabs</span> <span class=\"token attr-name\">:active</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>active<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@vclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleClick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">handleClick</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> mp <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mp<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>使用van-tabs组件时，事件捕获的信息丢失，经过一番查找后才发现是mpvue的问题,这里引用一位开发者的回答</p>\n<blockquote>\n<p><code>detail</code>信息被封装到<code>e.mp.detail</code>中去了。这种<code>vant</code>组件库用原生写的组件是可以捕获到<code>click</code>这种事件的。文档中指的是<code>vue</code>组件在引用时无法使用<code>@click</code>。  </p>\n</blockquote>\n<p>因此，如果遇到click事件出现问题，请参照上面的方法对组件进行修改</p>\n<h3 id=\"background-color在main-json配置没有生效\"><a href=\"#background-color在main-json配置没有生效\" class=\"headerlink\" title=\"background-color在main.json配置没有生效\"></a>background-color在<code>main.json</code>配置没有生效</h3><p>一般来说，<code>style tag</code>会自动加上<code>scoped</code>属性，<code>scoped</code>是为了解决全局css冲突的问题，因此，你的css selector是会被带上hash的，因此无法生效，例如</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/*你的代码*/</span>\n<span class=\"token selector\">page</span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/*编译结果*/</span>\n<span class=\"token selector\">page.data-v-fe19b4ea</span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>最好不要去掉<code>style tag</code>里的<code>scoped</code>属性，我是这样解决的</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/*最外层的div加上一个class cover*/</span>\n<span class=\"token selector\">.cover</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #e5e5e5<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overscroll-behavior-y</span><span class=\"token punctuation\">:</span> contain<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>或者</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylus<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet/stylus<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scoped</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n@import <span class=\"token string\">\"../../../static/stylus/mixin.styl\"</span>\nbody\n  background-color #fff\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"一些建议\"><a href=\"#一些建议\" class=\"headerlink\" title=\"一些建议\"></a>一些建议</h3><h4 id=\"request\"><a href=\"#request\" class=\"headerlink\" title=\"request\"></a>request</h4><p>在微信小程序中，建议对request函数进行封装，不仅提升开发时的效率，代码也会更容易理解，将<code>wx.request</code>函数进行配置后封装，返回<code>Promise</code>对象。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//我是这样封装的，进行开发时需根据实际需求进行修改</span>\n<span class=\"token keyword\">import</span> Config <span class=\"token keyword\">from</span> <span class=\"token string\">'./config'</span>\n<span class=\"token keyword\">import</span> Token <span class=\"token keyword\">from</span> <span class=\"token string\">'./token'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">request</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> header <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> noRefetch <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  wx<span class=\"token punctuation\">.</span><span class=\"token function\">showLoading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    title<span class=\"token operator\">:</span> <span class=\"token string\">'加载中'</span> <span class=\"token comment\">//  数据请求前loading</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    wx<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      url<span class=\"token operator\">:</span> Config<span class=\"token punctuation\">.</span>baseUrl <span class=\"token operator\">+</span> url<span class=\"token punctuation\">,</span>\n      method<span class=\"token operator\">:</span> method<span class=\"token punctuation\">,</span>\n      data<span class=\"token operator\">:</span> data<span class=\"token punctuation\">,</span>\n      header<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token string\">'token'</span><span class=\"token operator\">:</span> wx<span class=\"token punctuation\">.</span><span class=\"token function\">getStorageSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'content-type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">let</span> code <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>statusCode<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">let</span> startChar <span class=\"token operator\">=</span> code<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>startChar <span class=\"token operator\">===</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">===</span> <span class=\"token string\">'401'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>noRefetch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              Token<span class=\"token punctuation\">.</span><span class=\"token function\">getTokenFromServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">token</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">//  获取token之后重新发送请求</span>\n                <span class=\"token function\">request</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                  <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">fail</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">complete</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        wx<span class=\"token punctuation\">.</span><span class=\"token function\">hideLoading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">get</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">post</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  request<span class=\"token punctuation\">,</span>\n  get<span class=\"token punctuation\">,</span>\n  post\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"promisify\"><a href=\"#promisify\" class=\"headerlink\" title=\"promisify\"></a>promisify</h4><p>将微信小程序的api进行封装，转化为promise</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * 用于把微信原生callback的api，转换为promise\n *\n * 示例：\n *     import &#123;promisify&#125; from '...' // 这一部可以在全局引入或挂载\n *     const res= await promisify(wx.showModal,&#123;content:'确认删除？'&#125;)\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">api<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>params</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">api</span><span class=\"token punctuation\">(</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  options<span class=\"token punctuation\">,</span>  <span class=\"token punctuation\">&#123;</span>\n      success<span class=\"token operator\">:</span> resolve<span class=\"token punctuation\">,</span>\n      fail<span class=\"token operator\">:</span> reject\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>params <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">err</span><span class=\"token operator\">=></span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 暴露的是一个对象</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  promisify\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{"friends":[{"avatar":"https://www.naiquoy.com/imgs/twain.jpeg","name":"Twain","introduction":"永远滴神","url":"https://blog.2333.ink/","title":"前去膜拜"},{"avatar":"https://noechou.cn/wp-content/uploads/2021/01/Cache_-6619600f913cdc0c..jpg","name":"第七纵队","introduction":"里歪是个戆卵","url":"https://noechou.cn/","title":"前去学习"},{"avatar":"https://www.scery.com/images/avatar.png","name":"Anthony","introduction":"As you look around","url":"https://www.scery.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1587892058-wechat_pic_20200406225459.jpg","name":"Taoidle","introduction":"秋深し 隣はなにも しない人","url":"https://www.taoidle.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1588039248-photo_2019-02-14_18-47-31.jpg","name":"johnpoint","introduction":"折腾是第一生产力（不是","url":"https://blog.lvcshu.com/","title":"前去学习"},{"avatar":"https://img.imgdb.cn/item/603750c35f4313ce25f92a35.jpg","name":"SolitudeAlma","introduction":"都懂一点，不是很懂的小捞仔。","url":"https://blog.yt1209.com/","title":"前去学习"},{"avatar":"https://jniantic.cn/logo.jpg","name":"经年思维","introduction":"有一份光，发一份热","url":"https://jniantic.cn","title":"前去学习"}]}},"excerpt":"","more":"<p>前言：暑假期间，为了完成一个校内项目，需要开发一个小程序，因为有Vue的基础，所以采用了<a href=\"http://mpvue.com/\">mpvue</a> 框架进行开发，本篇博客记录了一些我碰到的坑以及注意事项</p>\n<h2 id=\"为什么我新增了页面，没有反应？\"><a href=\"#为什么我新增了页面，没有反应？\" class=\"headerlink\" title=\"为什么我新增了页面，没有反应？\"></a>为什么我新增了页面，没有反应？</h2><p>因为 webpack 编译的文件是由配置的 entry 决定的，新增的页面并没有添加进 entry，所以需要手动 <code>npm run dev</code> 一下，考虑不是高频操作，所以还可以忍受</p>\n<h2 id=\"如何获取小程序在-page-onLoad-时候传递的-options\"><a href=\"#如何获取小程序在-page-onLoad-时候传递的-options\" class=\"headerlink\" title=\"如何获取小程序在 page onLoad 时候传递的 options?\"></a>如何获取小程序在 page onLoad 时候传递的 options?</h2><p>在所有 页面 的组件内可以通过 this.$root.$mp.query 进行获取。</p>\n<h2 id=\"如何正确引用并使用微信小程序的原生UI库\"><a href=\"#如何正确引用并使用微信小程序的原生UI库\" class=\"headerlink\" title=\"如何正确引用并使用微信小程序的原生UI库?\"></a>如何正确引用并使用微信小程序的原生UI库?</h2><p>利用npm安装，或者git clone后将dist目录移到相关目录后，在根目录下的<code>app.json</code>文件中，对<code>usingComponents</code>进行相关配置对应对路径即可。以<a href=\"https://youzan.github.io/vant-weapp/#/home\">vant-weapp</a> 中的van-button组件为例</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  ...<span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"usingComponents\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"van-button\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/static/vant/button/index\"</span><span class=\"token punctuation\">,</span>\n    ...\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  ...\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在使用时，需要对组件进行双向绑定对时候，须遵守mpvue的相关语法，此处用van-field为例，代码如下</p>\n<blockquote>\n<p>官方示例</p>\n</blockquote>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>van-field</span>\n    <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123; value &#125;&#125;<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入用户名<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">border</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123; false &#125;&#125;<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>change</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onChange<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        value<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>实际使用</p>\n</blockquote>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>van-field</span>\n    <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入用户名<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">:border</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value=$event.mp.detail<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">&#123;</span>\n            value<span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>很显然，我们需要做的就是将微信小程序中双向绑定的语法改为mpvue的双向绑定语法，在微信小程序中，attribute的风格为mustache style，既<code>&#123;&#123;value&#125;&#125;</code>的形式，进行修改时，不需要带<code>&#123;&#123;&#125;&#125;</code>，并且如果是绑定的是属性，需要在属性前加上<code>:</code>，如果绑定的是监听DOM事件，需要加上<code>@</code>，例如</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123;value&#125;&#125;<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n//需改为\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tapTest<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tapName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> Click me! <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span>\n//需改为\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tapTest<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tapName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span> Click me! <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>注意！监听DOM事件的修改方式需按下表进行修改</p>\n</blockquote>\n<p>这是事件映射表，修改时需对照此表进行修改，左侧为 WEB 事件，右侧为 小程序 对应事件</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"click\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tap\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"touchstart\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"touchstart\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"touchmove\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"touchmove\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"touchcancel\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"touchcancel\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"touchend\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"touchend\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"tap\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tap\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"longtap\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"longtap\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"input\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"input\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"change\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"change\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"submit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"submit\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"blur\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"blur\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"focus\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"focus\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"reset\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"reset\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"confirm\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"confirm\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"columnchange\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"columnchange\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"linechange\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"linechange\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"error\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"scrolltoupper\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"scrolltoupper\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"scrolltolower\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"scrolltolower\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"scroll\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"scroll\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"生命周期的区别\"><a href=\"#生命周期的区别\" class=\"headerlink\" title=\"生命周期的区别\"></a>生命周期的区别</h2><p>总所周知，Vue的生命周期是精髓所在，下图为mpvue的生命周期图示<br><img src=\"http://mpvue.com/assets/img/lifecycle.a8762770.jpg\" alt=\"mpvue\"><br>详细的解释请看<a href=\"http://mpvue.com/mpvue/\">mpvue使用手册</a> 和 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page.html\">微信小程序生命周期</a><br>这里要注意的是，如无特殊需求，请不要使用小程序的生命周期钩子，善用好生命周期会对项目有极大的帮助！</p>\n<h2 id=\"踩过的一些坑\"><a href=\"#踩过的一些坑\" class=\"headerlink\" title=\"踩过的一些坑\"></a>踩过的一些坑</h2><h3 id=\"click事件捕捉问题\"><a href=\"#click事件捕捉问题\" class=\"headerlink\" title=\"click事件捕捉问题\"></a>click事件捕捉问题</h3><p><a href=\"https://github.com/Rychou/mpvue-vant/issues/47\">van-tabs组件@click事件捕捉问题</a>  </p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 修改前</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 修改后</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span><span class=\"token string\">'vclick'</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>van-tabs</span> <span class=\"token attr-name\">:active</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>active<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@vclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleClick<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">handleClick</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">&#123;</span> mp <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mp<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>使用van-tabs组件时，事件捕获的信息丢失，经过一番查找后才发现是mpvue的问题,这里引用一位开发者的回答</p>\n<blockquote>\n<p><code>detail</code>信息被封装到<code>e.mp.detail</code>中去了。这种<code>vant</code>组件库用原生写的组件是可以捕获到<code>click</code>这种事件的。文档中指的是<code>vue</code>组件在引用时无法使用<code>@click</code>。  </p>\n</blockquote>\n<p>因此，如果遇到click事件出现问题，请参照上面的方法对组件进行修改</p>\n<h3 id=\"background-color在main-json配置没有生效\"><a href=\"#background-color在main-json配置没有生效\" class=\"headerlink\" title=\"background-color在main.json配置没有生效\"></a>background-color在<code>main.json</code>配置没有生效</h3><p>一般来说，<code>style tag</code>会自动加上<code>scoped</code>属性，<code>scoped</code>是为了解决全局css冲突的问题，因此，你的css selector是会被带上hash的，因此无法生效，例如</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/*你的代码*/</span>\n<span class=\"token selector\">page</span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/*编译结果*/</span>\n<span class=\"token selector\">page.data-v-fe19b4ea</span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>最好不要去掉<code>style tag</code>里的<code>scoped</code>属性，我是这样解决的</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token comment\">/*最外层的div加上一个class cover*/</span>\n<span class=\"token selector\">.cover</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #e5e5e5<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overscroll-behavior-y</span><span class=\"token punctuation\">:</span> contain<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>或者</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylus<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet/stylus<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scoped</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n@import <span class=\"token string\">\"../../../static/stylus/mixin.styl\"</span>\nbody\n  background-color #fff\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"一些建议\"><a href=\"#一些建议\" class=\"headerlink\" title=\"一些建议\"></a>一些建议</h3><h4 id=\"request\"><a href=\"#request\" class=\"headerlink\" title=\"request\"></a>request</h4><p>在微信小程序中，建议对request函数进行封装，不仅提升开发时的效率，代码也会更容易理解，将<code>wx.request</code>函数进行配置后封装，返回<code>Promise</code>对象。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//我是这样封装的，进行开发时需根据实际需求进行修改</span>\n<span class=\"token keyword\">import</span> Config <span class=\"token keyword\">from</span> <span class=\"token string\">'./config'</span>\n<span class=\"token keyword\">import</span> Token <span class=\"token keyword\">from</span> <span class=\"token string\">'./token'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">request</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> header <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> noRefetch <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  wx<span class=\"token punctuation\">.</span><span class=\"token function\">showLoading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    title<span class=\"token operator\">:</span> <span class=\"token string\">'加载中'</span> <span class=\"token comment\">//  数据请求前loading</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    wx<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      url<span class=\"token operator\">:</span> Config<span class=\"token punctuation\">.</span>baseUrl <span class=\"token operator\">+</span> url<span class=\"token punctuation\">,</span>\n      method<span class=\"token operator\">:</span> method<span class=\"token punctuation\">,</span>\n      data<span class=\"token operator\">:</span> data<span class=\"token punctuation\">,</span>\n      header<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token string\">'token'</span><span class=\"token operator\">:</span> wx<span class=\"token punctuation\">.</span><span class=\"token function\">getStorageSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'token'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'content-type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">let</span> code <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>statusCode<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">let</span> startChar <span class=\"token operator\">=</span> code<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>startChar <span class=\"token operator\">===</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">===</span> <span class=\"token string\">'401'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>noRefetch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              Token<span class=\"token punctuation\">.</span><span class=\"token function\">getTokenFromServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">token</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">//  获取token之后重新发送请求</span>\n                <span class=\"token function\">request</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                  <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">fail</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">complete</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        wx<span class=\"token punctuation\">.</span><span class=\"token function\">hideLoading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">get</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">post</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  request<span class=\"token punctuation\">,</span>\n  get<span class=\"token punctuation\">,</span>\n  post\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"promisify\"><a href=\"#promisify\" class=\"headerlink\" title=\"promisify\"></a>promisify</h4><p>将微信小程序的api进行封装，转化为promise</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n * 用于把微信原生callback的api，转换为promise\n *\n * 示例：\n *     import &#123;promisify&#125; from '...' // 这一部可以在全局引入或挂载\n *     const res= await promisify(wx.showModal,&#123;content:'确认删除？'&#125;)\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">api<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>params</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">api</span><span class=\"token punctuation\">(</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>  options<span class=\"token punctuation\">,</span>  <span class=\"token punctuation\">&#123;</span>\n      success<span class=\"token operator\">:</span> resolve<span class=\"token punctuation\">,</span>\n      fail<span class=\"token operator\">:</span> reject\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>params <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span> <span class=\"token parameter\">err</span><span class=\"token operator\">=></span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 暴露的是一个对象</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  promisify\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n"},{"title":"在mpvue中使用vant-weapp组件库","date":"2021-04-15T13:30:00.000Z","author":"Marshall","img":"https://unsplash.it/1920/1080?random","top":false,"cover":false,"toc":true,"mathjax":false,"summary":"mpvue可，vant-weapp可，两者在一起嘛...","reprintPolicy":"cc_by","_content":"\n前言：因为在开发一个小程序，又正好想学学前端，于是用了mpvue框架来进行开发，思来想去又想引入一些css框架来美化页面，找了半天，一开始想用tailwind的，但是导入了半天都没办法正常使用，后面看到别人推荐[Vant Weapp](https://vant-contrib.gitee.io/vant-weapp/#/home) 。虽然过程不是很顺利，但是经过不懈摸索，还是整出来了。\n\n## 如何在mpvue中使用Vant Weapp？\n\n### 1.安装组件库\n> 以下两种安装方式没有区别，都是将组件库复制到static目录下。 \n\n#### npm安装\n``` bash\n$ npm i @vant/weapp -S --production\n```\n安装完后，将 `node_modules/vant-weapp/dist` 目录下的所有文件，copy 至 `static/vant` 目录下。\n#### git clone\n在任意非项目目录中，执行以下命令\n```bash\n$ git clone https://github.com/youzan/vant-weapp.git\n```\n克隆到本地后，将 `dist` 目录下的所有文件复制到你项目的 `/static/vant/` 目录下。\n### 2.使用\n#### 2.1 引入组件\n##### 全局引入\n在`src\\app.json`下如下示例引入。\n```json\n\"usingComponents\": {\n\"van-button\": \"/static/vant/button/index\",\n}\n```\n###### 局部引入\n在需要引入组件的页面目录下的 `main.json` 文件中，引入对应组件，引入方式同上。\n\n#### 2.2 修改 project.config.json\n需要手动在 `project.config.json` 内添加如下配置，使开发者工具可以正确索引到 npm 依赖的位置。\n```json\n{\n  ...\n  \"setting\": {\n    ...\n    \"packNpmManually\": true,\n    \"packNpmRelationList\": [\n      {\n        \"packageJsonPath\": \"./package.json\",\n        \"miniprogramNpmDistDir\": \"./miniprogram/\"\n      }\n    ]\n  }\n}\n```\n\n#### 2.3 组件使用\n直接在.vue页面中写相应标签即可。\n\n### 注意事项\n具体组件 api 文档参考[Vant Weapp](https://vant-contrib.gitee.io/vant-weapp/#/home)\n#### 使用方式\n因mpvue和微信小程序的方式有所不同，所以写的时候也要看[mpvue](http://mpvue.com/)的文档\n##### 1.数据绑定\n原生小程序使用方式为\n###### 按钮\n```html\n<button value=\"{{value}}\">按钮</button>\n```\nmpvue 使用方式\n```html\n<button v-bind:value=\"value\">按钮</button>\n<button :value=\"value\">按钮</button> \n```\n###### van-field 双向绑定\n示例：绑定输入框完成注册功能\n```html\n<van-field :value=\"registerform.username\" label=\"用户名\" name=\"username\" placeholder=\"在此处填写\" @input=\"registerform.username=$event.mp.detail\"></van-field>\n<button type=\"primary\" @click=\"register\">微信登录</button>\n```\n```js\nexport default{\n    ...,\n    data(){\n        return{\n            registerform:{\n                username:'',\n                ...\n            }\n            \n        }\n    },methods:{\n        async register(){\n            let{\n                username,\n                ...\n            }={\n                username:this.$data.registerform.username,\n                ...\n            }\n                ...;\n        }\n        \n    }\n        \n}\n```\n\n##### 2.事件绑定\n原生小程序使用方式\n```vue\nbind:click=\"onClick\"\n```\nmpvue 使用方式\n```vue\n@click=\"onClick\"\n```\n\n##### 3.获取 event 事件对象中值\n值得注意的是，mpvue中获取event值与原生小程序有所不同。举例：\n```javascript\nonChange(event) { // 获取表单组件filed的值\n  console.log(event.mp.detail) // 注意加入mp\n}\n```\n\n","source":"_posts/vantWeappInMpvue.md","raw":"---\ntitle: 在mpvue中使用vant-weapp组件库\ndate: 2021-4-15 21:30:00\nauthor: Marshall\nimg: https://unsplash.it/1920/1080?random\ntop: false\ncover: false\ntoc: true\nmathjax: false\nsummary: mpvue可，vant-weapp可，两者在一起嘛...\ncategories: mpvue\nreprintPolicy: cc_by\ntags:\n- mpvue\n---\n\n前言：因为在开发一个小程序，又正好想学学前端，于是用了mpvue框架来进行开发，思来想去又想引入一些css框架来美化页面，找了半天，一开始想用tailwind的，但是导入了半天都没办法正常使用，后面看到别人推荐[Vant Weapp](https://vant-contrib.gitee.io/vant-weapp/#/home) 。虽然过程不是很顺利，但是经过不懈摸索，还是整出来了。\n\n## 如何在mpvue中使用Vant Weapp？\n\n### 1.安装组件库\n> 以下两种安装方式没有区别，都是将组件库复制到static目录下。 \n\n#### npm安装\n``` bash\n$ npm i @vant/weapp -S --production\n```\n安装完后，将 `node_modules/vant-weapp/dist` 目录下的所有文件，copy 至 `static/vant` 目录下。\n#### git clone\n在任意非项目目录中，执行以下命令\n```bash\n$ git clone https://github.com/youzan/vant-weapp.git\n```\n克隆到本地后，将 `dist` 目录下的所有文件复制到你项目的 `/static/vant/` 目录下。\n### 2.使用\n#### 2.1 引入组件\n##### 全局引入\n在`src\\app.json`下如下示例引入。\n```json\n\"usingComponents\": {\n\"van-button\": \"/static/vant/button/index\",\n}\n```\n###### 局部引入\n在需要引入组件的页面目录下的 `main.json` 文件中，引入对应组件，引入方式同上。\n\n#### 2.2 修改 project.config.json\n需要手动在 `project.config.json` 内添加如下配置，使开发者工具可以正确索引到 npm 依赖的位置。\n```json\n{\n  ...\n  \"setting\": {\n    ...\n    \"packNpmManually\": true,\n    \"packNpmRelationList\": [\n      {\n        \"packageJsonPath\": \"./package.json\",\n        \"miniprogramNpmDistDir\": \"./miniprogram/\"\n      }\n    ]\n  }\n}\n```\n\n#### 2.3 组件使用\n直接在.vue页面中写相应标签即可。\n\n### 注意事项\n具体组件 api 文档参考[Vant Weapp](https://vant-contrib.gitee.io/vant-weapp/#/home)\n#### 使用方式\n因mpvue和微信小程序的方式有所不同，所以写的时候也要看[mpvue](http://mpvue.com/)的文档\n##### 1.数据绑定\n原生小程序使用方式为\n###### 按钮\n```html\n<button value=\"{{value}}\">按钮</button>\n```\nmpvue 使用方式\n```html\n<button v-bind:value=\"value\">按钮</button>\n<button :value=\"value\">按钮</button> \n```\n###### van-field 双向绑定\n示例：绑定输入框完成注册功能\n```html\n<van-field :value=\"registerform.username\" label=\"用户名\" name=\"username\" placeholder=\"在此处填写\" @input=\"registerform.username=$event.mp.detail\"></van-field>\n<button type=\"primary\" @click=\"register\">微信登录</button>\n```\n```js\nexport default{\n    ...,\n    data(){\n        return{\n            registerform:{\n                username:'',\n                ...\n            }\n            \n        }\n    },methods:{\n        async register(){\n            let{\n                username,\n                ...\n            }={\n                username:this.$data.registerform.username,\n                ...\n            }\n                ...;\n        }\n        \n    }\n        \n}\n```\n\n##### 2.事件绑定\n原生小程序使用方式\n```vue\nbind:click=\"onClick\"\n```\nmpvue 使用方式\n```vue\n@click=\"onClick\"\n```\n\n##### 3.获取 event 事件对象中值\n值得注意的是，mpvue中获取event值与原生小程序有所不同。举例：\n```javascript\nonChange(event) { // 获取表单组件filed的值\n  console.log(event.mp.detail) // 注意加入mp\n}\n```\n\n","slug":"vantWeappInMpvue","published":1,"updated":"2022-05-09T12:23:27.422Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4brvxsk000bkg7e10651f6u","content":"<p>前言：因为在开发一个小程序，又正好想学学前端，于是用了mpvue框架来进行开发，思来想去又想引入一些css框架来美化页面，找了半天，一开始想用tailwind的，但是导入了半天都没办法正常使用，后面看到别人推荐<a href=\"https://vant-contrib.gitee.io/vant-weapp/#/home\">Vant Weapp</a> 。虽然过程不是很顺利，但是经过不懈摸索，还是整出来了。</p>\n<h2 id=\"如何在mpvue中使用Vant-Weapp？\"><a href=\"#如何在mpvue中使用Vant-Weapp？\" class=\"headerlink\" title=\"如何在mpvue中使用Vant Weapp？\"></a>如何在mpvue中使用Vant Weapp？</h2><h3 id=\"1-安装组件库\"><a href=\"#1-安装组件库\" class=\"headerlink\" title=\"1.安装组件库\"></a>1.安装组件库</h3><blockquote>\n<p>以下两种安装方式没有区别，都是将组件库复制到static目录下。 </p>\n</blockquote>\n<h4 id=\"npm安装\"><a href=\"#npm安装\" class=\"headerlink\" title=\"npm安装\"></a>npm安装</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i @vant/weapp -S --production<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>安装完后，将 <code>node_modules/vant-weapp/dist</code> 目录下的所有文件，copy 至 <code>static/vant</code> 目录下。</p>\n<h4 id=\"git-clone\"><a href=\"#git-clone\" class=\"headerlink\" title=\"git clone\"></a>git clone</h4><p>在任意非项目目录中，执行以下命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> clone https://github.com/youzan/vant-weapp.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>克隆到本地后，将 <code>dist</code> 目录下的所有文件复制到你项目的 <code>/static/vant/</code> 目录下。</p>\n<h3 id=\"2-使用\"><a href=\"#2-使用\" class=\"headerlink\" title=\"2.使用\"></a>2.使用</h3><h4 id=\"2-1-引入组件\"><a href=\"#2-1-引入组件\" class=\"headerlink\" title=\"2.1 引入组件\"></a>2.1 引入组件</h4><h5 id=\"全局引入\"><a href=\"#全局引入\" class=\"headerlink\" title=\"全局引入\"></a>全局引入</h5><p>在<code>src\\app.json</code>下如下示例引入。</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token property\">\"usingComponents\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token property\">\"van-button\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/static/vant/button/index\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h6 id=\"局部引入\"><a href=\"#局部引入\" class=\"headerlink\" title=\"局部引入\"></a>局部引入</h6><p>在需要引入组件的页面目录下的 <code>main.json</code> 文件中，引入对应组件，引入方式同上。</p>\n<h4 id=\"2-2-修改-project-config-json\"><a href=\"#2-2-修改-project-config-json\" class=\"headerlink\" title=\"2.2 修改 project.config.json\"></a>2.2 修改 project.config.json</h4><p>需要手动在 <code>project.config.json</code> 内添加如下配置，使开发者工具可以正确索引到 npm 依赖的位置。</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  ...\n  <span class=\"token property\">\"setting\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    ...\n    <span class=\"token property\">\"packNpmManually\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"packNpmRelationList\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">\"packageJsonPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./package.json\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"miniprogramNpmDistDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./miniprogram/\"</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-3-组件使用\"><a href=\"#2-3-组件使用\" class=\"headerlink\" title=\"2.3 组件使用\"></a>2.3 组件使用</h4><p>直接在.vue页面中写相应标签即可。</p>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>具体组件 api 文档参考<a href=\"https://vant-contrib.gitee.io/vant-weapp/#/home\">Vant Weapp</a></p>\n<h4 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><p>因mpvue和微信小程序的方式有所不同，所以写的时候也要看<a href=\"http://mpvue.com/\">mpvue</a>的文档</p>\n<h5 id=\"1-数据绑定\"><a href=\"#1-数据绑定\" class=\"headerlink\" title=\"1.数据绑定\"></a>1.数据绑定</h5><p>原生小程序使用方式为</p>\n<h6 id=\"按钮\"><a href=\"#按钮\" class=\"headerlink\" title=\"按钮\"></a>按钮</h6><pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123;value&#125;&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>mpvue 使用方式</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-bind:</span>value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h6 id=\"van-field-双向绑定\"><a href=\"#van-field-双向绑定\" class=\"headerlink\" title=\"van-field 双向绑定\"></a>van-field 双向绑定</h6><p>示例：绑定输入框完成注册功能</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>van-field</span> <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>registerform.username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>用户名<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>在此处填写<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>registerform.username=$event.mp.detail<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>van-field</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>register<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>微信登录<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">&#123;</span>\n            registerform<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n                username<span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">...</span>\n            <span class=\"token punctuation\">&#125;</span>\n            \n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>methods<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">async</span> <span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">let</span><span class=\"token punctuation\">&#123;</span>\n                username<span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">...</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n                username<span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$data<span class=\"token punctuation\">.</span>registerform<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">...</span>\n            <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token operator\">...</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        \n    <span class=\"token punctuation\">&#125;</span>\n        \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"2-事件绑定\"><a href=\"#2-事件绑定\" class=\"headerlink\" title=\"2.事件绑定\"></a>2.事件绑定</h5><p>原生小程序使用方式</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">bind:click&#x3D;&quot;onClick&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>mpvue 使用方式</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">@click&#x3D;&quot;onClick&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"3-获取-event-事件对象中值\"><a href=\"#3-获取-event-事件对象中值\" class=\"headerlink\" title=\"3.获取 event 事件对象中值\"></a>3.获取 event 事件对象中值</h5><p>值得注意的是，mpvue中获取event值与原生小程序有所不同。举例：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 获取表单组件filed的值</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>mp<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 注意加入mp</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n","site":{"data":{"friends":[{"avatar":"https://www.naiquoy.com/imgs/twain.jpeg","name":"Twain","introduction":"永远滴神","url":"https://blog.2333.ink/","title":"前去膜拜"},{"avatar":"https://noechou.cn/wp-content/uploads/2021/01/Cache_-6619600f913cdc0c..jpg","name":"第七纵队","introduction":"里歪是个戆卵","url":"https://noechou.cn/","title":"前去学习"},{"avatar":"https://www.scery.com/images/avatar.png","name":"Anthony","introduction":"As you look around","url":"https://www.scery.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1587892058-wechat_pic_20200406225459.jpg","name":"Taoidle","introduction":"秋深し 隣はなにも しない人","url":"https://www.taoidle.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1588039248-photo_2019-02-14_18-47-31.jpg","name":"johnpoint","introduction":"折腾是第一生产力（不是","url":"https://blog.lvcshu.com/","title":"前去学习"},{"avatar":"https://img.imgdb.cn/item/603750c35f4313ce25f92a35.jpg","name":"SolitudeAlma","introduction":"都懂一点，不是很懂的小捞仔。","url":"https://blog.yt1209.com/","title":"前去学习"},{"avatar":"https://jniantic.cn/logo.jpg","name":"经年思维","introduction":"有一份光，发一份热","url":"https://jniantic.cn","title":"前去学习"}]}},"excerpt":"","more":"<p>前言：因为在开发一个小程序，又正好想学学前端，于是用了mpvue框架来进行开发，思来想去又想引入一些css框架来美化页面，找了半天，一开始想用tailwind的，但是导入了半天都没办法正常使用，后面看到别人推荐<a href=\"https://vant-contrib.gitee.io/vant-weapp/#/home\">Vant Weapp</a> 。虽然过程不是很顺利，但是经过不懈摸索，还是整出来了。</p>\n<h2 id=\"如何在mpvue中使用Vant-Weapp？\"><a href=\"#如何在mpvue中使用Vant-Weapp？\" class=\"headerlink\" title=\"如何在mpvue中使用Vant Weapp？\"></a>如何在mpvue中使用Vant Weapp？</h2><h3 id=\"1-安装组件库\"><a href=\"#1-安装组件库\" class=\"headerlink\" title=\"1.安装组件库\"></a>1.安装组件库</h3><blockquote>\n<p>以下两种安装方式没有区别，都是将组件库复制到static目录下。 </p>\n</blockquote>\n<h4 id=\"npm安装\"><a href=\"#npm安装\" class=\"headerlink\" title=\"npm安装\"></a>npm安装</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> i @vant/weapp -S --production<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>安装完后，将 <code>node_modules/vant-weapp/dist</code> 目录下的所有文件，copy 至 <code>static/vant</code> 目录下。</p>\n<h4 id=\"git-clone\"><a href=\"#git-clone\" class=\"headerlink\" title=\"git clone\"></a>git clone</h4><p>在任意非项目目录中，执行以下命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> clone https://github.com/youzan/vant-weapp.git<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>克隆到本地后，将 <code>dist</code> 目录下的所有文件复制到你项目的 <code>/static/vant/</code> 目录下。</p>\n<h3 id=\"2-使用\"><a href=\"#2-使用\" class=\"headerlink\" title=\"2.使用\"></a>2.使用</h3><h4 id=\"2-1-引入组件\"><a href=\"#2-1-引入组件\" class=\"headerlink\" title=\"2.1 引入组件\"></a>2.1 引入组件</h4><h5 id=\"全局引入\"><a href=\"#全局引入\" class=\"headerlink\" title=\"全局引入\"></a>全局引入</h5><p>在<code>src\\app.json</code>下如下示例引入。</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token property\">\"usingComponents\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token property\">\"van-button\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/static/vant/button/index\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h6 id=\"局部引入\"><a href=\"#局部引入\" class=\"headerlink\" title=\"局部引入\"></a>局部引入</h6><p>在需要引入组件的页面目录下的 <code>main.json</code> 文件中，引入对应组件，引入方式同上。</p>\n<h4 id=\"2-2-修改-project-config-json\"><a href=\"#2-2-修改-project-config-json\" class=\"headerlink\" title=\"2.2 修改 project.config.json\"></a>2.2 修改 project.config.json</h4><p>需要手动在 <code>project.config.json</code> 内添加如下配置，使开发者工具可以正确索引到 npm 依赖的位置。</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  ...\n  <span class=\"token property\">\"setting\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    ...\n    <span class=\"token property\">\"packNpmManually\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"packNpmRelationList\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">\"packageJsonPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./package.json\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"miniprogramNpmDistDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./miniprogram/\"</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-3-组件使用\"><a href=\"#2-3-组件使用\" class=\"headerlink\" title=\"2.3 组件使用\"></a>2.3 组件使用</h4><p>直接在.vue页面中写相应标签即可。</p>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>具体组件 api 文档参考<a href=\"https://vant-contrib.gitee.io/vant-weapp/#/home\">Vant Weapp</a></p>\n<h4 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h4><p>因mpvue和微信小程序的方式有所不同，所以写的时候也要看<a href=\"http://mpvue.com/\">mpvue</a>的文档</p>\n<h5 id=\"1-数据绑定\"><a href=\"#1-数据绑定\" class=\"headerlink\" title=\"1.数据绑定\"></a>1.数据绑定</h5><p>原生小程序使用方式为</p>\n<h6 id=\"按钮\"><a href=\"#按钮\" class=\"headerlink\" title=\"按钮\"></a>按钮</h6><pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123;value&#125;&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>mpvue 使用方式</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-bind:</span>value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h6 id=\"van-field-双向绑定\"><a href=\"#van-field-双向绑定\" class=\"headerlink\" title=\"van-field 双向绑定\"></a>van-field 双向绑定</h6><p>示例：绑定输入框完成注册功能</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>van-field</span> <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>registerform.username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>用户名<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>在此处填写<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>registerform.username=$event.mp.detail<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>van-field</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>register<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>微信登录<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">&#123;</span>\n            registerform<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n                username<span class=\"token operator\">:</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">...</span>\n            <span class=\"token punctuation\">&#125;</span>\n            \n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>methods<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">async</span> <span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">let</span><span class=\"token punctuation\">&#123;</span>\n                username<span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">...</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n                username<span class=\"token operator\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$data<span class=\"token punctuation\">.</span>registerform<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">...</span>\n            <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token operator\">...</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        \n    <span class=\"token punctuation\">&#125;</span>\n        \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"2-事件绑定\"><a href=\"#2-事件绑定\" class=\"headerlink\" title=\"2.事件绑定\"></a>2.事件绑定</h5><p>原生小程序使用方式</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">bind:click&#x3D;&quot;onClick&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>mpvue 使用方式</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">@click&#x3D;&quot;onClick&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"3-获取-event-事件对象中值\"><a href=\"#3-获取-event-事件对象中值\" class=\"headerlink\" title=\"3.获取 event 事件对象中值\"></a>3.获取 event 事件对象中值</h5><p>值得注意的是，mpvue中获取event值与原生小程序有所不同。举例：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 获取表单组件filed的值</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>mp<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 注意加入mp</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n"},{"title":"JavaScript基础题集合","date":"2022-05-09T17:30:00.000Z","author":"Marshall","img":"https://unsplash.it/1920/1080?random9","top":false,"cover":false,"toc":true,"mathjax":false,"summary":"刷面经时碰到到一些有趣的JavaScript题目","reprintPolicy":"cc0","_content":"\n## 原型链\n[MDN原型链介绍](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain)  \n\n>  每个实例对象（`object`）都有一个私有属性（称之为 `__proto__` ）指向它的构造函数的原型对象（`prototype`）。该原型对象也有一个自己的原型对象（`__proto__`），层层向上直到一个对象的原型对象为 `null`。根据定义，`null` 没有原型，并作为这个原型链中的最后一个环节。 \n\n![关系图 ](https://camo.githubusercontent.com/9a69b0f03116884e80cf566f8542cf014a4dd043fce6ce030d615040461f4e5a/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f6d717971696e6766656e672f426c6f672f496d616765732f70726f746f74797065352e706e67)  \n\n### 手写bind\n```javascript\nFunction.prototype.bind1 = function() {\n    // 将参数拆解为数组\n    const args = Array.prototype.slice.call(arguments) // 变成数组\n    \n    // 获取 this（数组第一项）\n    const t = args.shift()\n    \n    // fn1.bind(...) 中的 fn1\n    const self = this\n    \n    // 返回一个函数\n    return function() {\n        return self.apply(t, args)\n    }\n}\nfunction fn1(a, b, c){\n    console.log('this', this)\n    console.log(a, b, c)\n    return 'this is fn1'\n}\nconst fn2 = fn1.bind1({x: 100}, 10, 20, 30)\nconst res = fn2()\nconsole.log(res)\n```\n### 手写new\n```javascript\nfunction funcNew(obj, ...args) {\n    const newObj = Object.create(obj.prototype);\n    const result = obj.apply(newObj, args);\n    return (typeof result === 'object' && result !== null) ? result : newObj;\n}\n```\n### 手写instanceof\n```javascript\nfunction newInstanceOf (leftValue, rightValue) {\n    if (typeof leftValue !== 'object' || rightValue == null) { \n        return false;\n    }\n    \n    let rightProto = rightValue.prototype;\n    leftValue = leftValue.__proto__;\n    \n    while (true) {\n        if (leftValue === null) return false;\n        if (leftValue === rightProto) return true;\n        leftValue = leftValue.__proto__;\n    }\n}\n\n/*\n * --- 验证 ---\n */\n\nconst a = [];\nconst b = {};\n\nfunction Foo () {}\n\nvar c = new Foo()\nfunction Child () {}\nfunction Father() {}\nChild.prototype = new Father()\nvar d = new Child()\n\nconsole.log(newInstanceOf(a, Array)) // true\nconsole.log(newInstanceOf(b, Object)) // true\nconsole.log(newInstanceOf(b, Array)) // false\nconsole.log(newInstanceOf(a, Object)) // true\nconsole.log(newInstanceOf(c, Foo)) // true\nconsole.log(newInstanceOf(d, Child)) // true\nconsole.log(newInstanceOf(d, Father)) // true\nconsole.log(newInstanceOf(123, Object)) // false \nconsole.log(123 instanceof Object) // false\n```\n### 测验题\n```javascript\nfunction Animal(){ \n  this.type = \"animal\"\n}\n   \nfunction Dog(){ \n  this.name = \"dog\"\n}\n \nDog.prototype = new Animal()\n \nvar PavlovPet = new Dog(); \n \nconsole.log(PavlovPet.__proto__ === Dog.prototype) //true\nconsole.log(Dog.prototype.__proto__ === Animal.prototype) //true\n\n```\n\n## 变量\n\n[MDN变量](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Variables)  \n[MDN变量提升](https://developer.mozilla.org/zh-CN/docs/Glossary/Hoisting)  \n\n### 每隔一秒输出一个数字\n```javascript\nfor (let i = 0; i < 10; i++) {\n    setTimeout(() => {\n        console.log(i);\n    }, 1000 * i)\n}\n```\n```javascript\n// 闭包\nfor (var i = 0; i < 10; i++) {\n    (function(j) {\n        setTimeout(() => {\n            console.log(j);\n        }, 1000 * j)\n    })(i)\n}\n```\n### 测验题\n```javascript\nvar a = 1\nfunction output () {\n    console.log(a)\n    var a = 2\n    console.log(a)\n}\nconsole.log(a)\noutput()\nconsole.log(a)\n\n// 1 undefined 2 1\n// 第一个输出：全局的 var a\n// 第二个输出：output 函数中声明的 var a变量提升，还未赋值\n// 第三个输出：output 函数局部作用域的 a 已赋值\n// 第四输出：全局的 var a 没有变\n```\n\n```javascript\nfunction foo() {\n    let a = b = 0\n    a++\n    return a\n}\n \nfoo()\nconsole.log(typeof a)\nconsole.log(typeof b)\n// undefined number\n// let a 是一个局部变量。typeof a 检查的是未声明的变量。\n// b 是个全局变量，它在 foo 函数中被赋值。\n```\n\n## 数据类型\n[MDN数据类型](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Data_structures)\n```javascript\nconsole.log(+true)\nconsole.log(!\"ConardLi\")\n// 1 false\n// + 运算符首先会尝试将 boolean 类型转换为数字类型，true 被转换为 1，false 被转换为 0。\n// 字符串 'ConardLi' 是一个真值，所以 !'ConardLi' 为 false。\n```\n\n## 异步\n[MDN异步](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Asynchronous)  \n[MDN事件循环](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/EventLoop)\n\n```javascript\nfor (let i = 0; i < 3; i++) {\n  const log = () => {\n    console.log(i)\n  }\n  setTimeout(log, 100)\n}\n\n// 0 1 2\n//定时器是异步执行，浏览器会优先执行同步任务，在遇到定时器时会先把它们暂存在一个宏任务队列中，待当前宏任务队列的所有任务执行完毕后才会去执行队列中的任务，此时循环已执行完毕，i 已经是 3。\n\n```\n\n## 数组 (Array)\n[MDN数组](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Arrays)  \n### 数组扁平化\n```javascript\n// 递归\nvar arr = [1, [2, [3, 4]]];\n\nfunction flatten(arr) {\n    var result = [];\n    for (var i = 0, len = arr.length; i < len; i++) {\n        if (Array.isArray(arr[i])) {\n            result = result.concat(flatten(arr[i]))\n        }\n        else {\n            result.push(arr[i])\n        }\n    }\n    return result;\n}\n\n\nconsole.log(flatten(arr))\n```\n\n```javascript\n// 拓展运算符(es6)\nvar arr = [1, [2, [3, 4]]];\n\nfunction flatten(arr) {\n\n    while (arr.some(item => Array.isArray(item))) {\n        arr = [].concat(...arr);\n    }\n    return arr;\n}\n\nconsole.log(flatten(arr))\n```\n\n### 测验题\n```javascript\nconst clothes = ['shirt', 'socks', 'jacket', 'pants', 'hat']\nclothes.length = 0\n \nconsole.log(clothes[3])\n// undefined\n// 将数组的长度赋值为 0 就相当于从数组中删除所有元素。\n```\n\n```javascript\nvar arr = [5, 22, 14, 9];\n\nconsole.log(arr.sort());\n\n// [14, 22, 5, 9]\n// sort() 方法用于对数组的元素进行排序,并返回数组。默认排序顺序是根据字符串Unicode码点。\n// 详情请见V8引擎Array源码710行处 https://github.com/v8/v8/blob/ad82a40509c5b5b4680d4299c8f08d6c6d31af3c/src/js/array.js\n```\n\n## 对象(Object)\n\n[MDN对象](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects)  \n\n### 深拷贝\n```javascript\nfunction deepClone(obj = {}) {\n    if (typeof obj !== 'object' || obj == null) {\n        // obj 是 null 或者不是对象和数组，直接返回\n        return obj;\n    }\n    let res;\n    if (obj instanceof Array) {\n        res = [];\n    } else {\n        res = {};\n    }\n\n    for (let key in obj) {\n        // 判断自身中是否包含自身属性\n        if (obj.hasOwnProperty(key)) {\n            res[key] = deepClone(obj[key])\n        }\n    }\n    return res;\n}\n// 验证\no = {a: 1, d: {c: '4'}};\nres = deepClone(o);\nconsole.log(res);\nconsole.log(res == o);\n```\n\n### 浅拷贝\n```javascript\nconst hero = {\n  name: 'Batman',\n  city: 'Gotham'\n};\n// **********************方法一**********************\nconst heroEnhancedClone = {\n  ...hero,\n  name: 'Batman Clone',\n  realName: 'Bruce Wayne'\n};\n\n// 验证\nheroEnhancedClone;  // { name: 'Batman Clone', city: 'Gotham', realName: 'Bruce Wayne' }\n\n// **********************方法二**********************\nconst { ...heroClone } = hero;\n\n// 验证\nheroClone; // { name: 'Batman', city: 'Gotham' }\nhero === heroClone; // => false\n\n// **********************方法三**********************\nconst hero = {\n  name: 'Batman',\n  city: 'Gotham'\n};\n\n// 验证\nconst heroClone = Object.assign({}, hero);\nheroClone; // { name: 'Batman', city: 'Gotham' }\nhero === heroClone; // => false\n```\n\n### 测验题\n```javascript\nconst a = {};\nconst b = { key: \"b\" };\nconst c = { key: \"c\" };\n\na[b] = 123;\na[c] = 456;\n\nconsole.log(a[b]);\n\n// 456\n// 对象不能做对象的 key，实际上是:\n// a[\"Object object\"] = 123;\n// a[\"Object object\"] = 456;\n```\n\n## 应用问题\n\n### 防抖\n```javascript\nfunction debounce(func, wait) {\n  let timer = null;\n\n  return function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n\n    let self = this;\n    let args = arguments;\n\n    timer = setTimeout(function () {\n      func.apply(self, args);\n      timer = null;\n    }, wait);\n  };\n}\n```\n\n### 节流\n```javascript\nfunction throttle(func, wait) {\n  let lastTime = 0;\n  let timer = null;\n\n  return function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n\n    let self = this;\n    let args = arguments;\n    let nowTime = +new Date();\n\n    const remainWaitTime = wait - (nowTime - lastTime);\n\n    if (remainWaitTime <= 0) {\n      lastTime = nowTime;\n      func.apply(self, args);\n    } else {\n      timer = setTimeout(function () {\n        lastTime = +new Date();\n        func.apply(self, args);\n        timer = null;\n      }, remainWaitTime);\n    }\n  };\n}\n```\n\n### 实现ajax的post\n```javascript\nfunction ajax_post(url, data) {\n    // 1. 异步对象 ajax\n    var ajax = new XMLHttpRequest();\n    \n    // 2. url 方法\n    ajax.open('post', url);\n    \n    // 3. 设置请求报文\n    ajax.setRequestHeader('Content-type', 'text/plain');\n    \n    // 4. 发送\n    if (data) {\n        ajax.send(data);\n    } else {\n        ajax.send();\n    }\n    \n    // 5. 注册事件\n    ajax.onreadystatechange = function () {\n        if (ajax.readyState === 4 && ajax.status === 200) {\n            console.log(ajax.respenseText);\n        }\n    }\n}\n```\n","source":"_posts/javascriptBasicQuestions.md","raw":"---\ntitle: JavaScript基础题集合  \ndate: 2022-05-10 01:30:00  \nauthor: Marshall  \nimg: https://unsplash.it/1920/1080?random9 \ntop: false  \ncover: false  \ntoc: true  \nmathjax: false  \nsummary: 刷面经时碰到到一些有趣的JavaScript题目 \ncategories: JavaScript  \nreprintPolicy: cc0  \ntags:\n- JavaScript\n---\n\n## 原型链\n[MDN原型链介绍](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain)  \n\n>  每个实例对象（`object`）都有一个私有属性（称之为 `__proto__` ）指向它的构造函数的原型对象（`prototype`）。该原型对象也有一个自己的原型对象（`__proto__`），层层向上直到一个对象的原型对象为 `null`。根据定义，`null` 没有原型，并作为这个原型链中的最后一个环节。 \n\n![关系图 ](https://camo.githubusercontent.com/9a69b0f03116884e80cf566f8542cf014a4dd043fce6ce030d615040461f4e5a/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f6d717971696e6766656e672f426c6f672f496d616765732f70726f746f74797065352e706e67)  \n\n### 手写bind\n```javascript\nFunction.prototype.bind1 = function() {\n    // 将参数拆解为数组\n    const args = Array.prototype.slice.call(arguments) // 变成数组\n    \n    // 获取 this（数组第一项）\n    const t = args.shift()\n    \n    // fn1.bind(...) 中的 fn1\n    const self = this\n    \n    // 返回一个函数\n    return function() {\n        return self.apply(t, args)\n    }\n}\nfunction fn1(a, b, c){\n    console.log('this', this)\n    console.log(a, b, c)\n    return 'this is fn1'\n}\nconst fn2 = fn1.bind1({x: 100}, 10, 20, 30)\nconst res = fn2()\nconsole.log(res)\n```\n### 手写new\n```javascript\nfunction funcNew(obj, ...args) {\n    const newObj = Object.create(obj.prototype);\n    const result = obj.apply(newObj, args);\n    return (typeof result === 'object' && result !== null) ? result : newObj;\n}\n```\n### 手写instanceof\n```javascript\nfunction newInstanceOf (leftValue, rightValue) {\n    if (typeof leftValue !== 'object' || rightValue == null) { \n        return false;\n    }\n    \n    let rightProto = rightValue.prototype;\n    leftValue = leftValue.__proto__;\n    \n    while (true) {\n        if (leftValue === null) return false;\n        if (leftValue === rightProto) return true;\n        leftValue = leftValue.__proto__;\n    }\n}\n\n/*\n * --- 验证 ---\n */\n\nconst a = [];\nconst b = {};\n\nfunction Foo () {}\n\nvar c = new Foo()\nfunction Child () {}\nfunction Father() {}\nChild.prototype = new Father()\nvar d = new Child()\n\nconsole.log(newInstanceOf(a, Array)) // true\nconsole.log(newInstanceOf(b, Object)) // true\nconsole.log(newInstanceOf(b, Array)) // false\nconsole.log(newInstanceOf(a, Object)) // true\nconsole.log(newInstanceOf(c, Foo)) // true\nconsole.log(newInstanceOf(d, Child)) // true\nconsole.log(newInstanceOf(d, Father)) // true\nconsole.log(newInstanceOf(123, Object)) // false \nconsole.log(123 instanceof Object) // false\n```\n### 测验题\n```javascript\nfunction Animal(){ \n  this.type = \"animal\"\n}\n   \nfunction Dog(){ \n  this.name = \"dog\"\n}\n \nDog.prototype = new Animal()\n \nvar PavlovPet = new Dog(); \n \nconsole.log(PavlovPet.__proto__ === Dog.prototype) //true\nconsole.log(Dog.prototype.__proto__ === Animal.prototype) //true\n\n```\n\n## 变量\n\n[MDN变量](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Variables)  \n[MDN变量提升](https://developer.mozilla.org/zh-CN/docs/Glossary/Hoisting)  \n\n### 每隔一秒输出一个数字\n```javascript\nfor (let i = 0; i < 10; i++) {\n    setTimeout(() => {\n        console.log(i);\n    }, 1000 * i)\n}\n```\n```javascript\n// 闭包\nfor (var i = 0; i < 10; i++) {\n    (function(j) {\n        setTimeout(() => {\n            console.log(j);\n        }, 1000 * j)\n    })(i)\n}\n```\n### 测验题\n```javascript\nvar a = 1\nfunction output () {\n    console.log(a)\n    var a = 2\n    console.log(a)\n}\nconsole.log(a)\noutput()\nconsole.log(a)\n\n// 1 undefined 2 1\n// 第一个输出：全局的 var a\n// 第二个输出：output 函数中声明的 var a变量提升，还未赋值\n// 第三个输出：output 函数局部作用域的 a 已赋值\n// 第四输出：全局的 var a 没有变\n```\n\n```javascript\nfunction foo() {\n    let a = b = 0\n    a++\n    return a\n}\n \nfoo()\nconsole.log(typeof a)\nconsole.log(typeof b)\n// undefined number\n// let a 是一个局部变量。typeof a 检查的是未声明的变量。\n// b 是个全局变量，它在 foo 函数中被赋值。\n```\n\n## 数据类型\n[MDN数据类型](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Data_structures)\n```javascript\nconsole.log(+true)\nconsole.log(!\"ConardLi\")\n// 1 false\n// + 运算符首先会尝试将 boolean 类型转换为数字类型，true 被转换为 1，false 被转换为 0。\n// 字符串 'ConardLi' 是一个真值，所以 !'ConardLi' 为 false。\n```\n\n## 异步\n[MDN异步](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Asynchronous)  \n[MDN事件循环](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/EventLoop)\n\n```javascript\nfor (let i = 0; i < 3; i++) {\n  const log = () => {\n    console.log(i)\n  }\n  setTimeout(log, 100)\n}\n\n// 0 1 2\n//定时器是异步执行，浏览器会优先执行同步任务，在遇到定时器时会先把它们暂存在一个宏任务队列中，待当前宏任务队列的所有任务执行完毕后才会去执行队列中的任务，此时循环已执行完毕，i 已经是 3。\n\n```\n\n## 数组 (Array)\n[MDN数组](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Arrays)  \n### 数组扁平化\n```javascript\n// 递归\nvar arr = [1, [2, [3, 4]]];\n\nfunction flatten(arr) {\n    var result = [];\n    for (var i = 0, len = arr.length; i < len; i++) {\n        if (Array.isArray(arr[i])) {\n            result = result.concat(flatten(arr[i]))\n        }\n        else {\n            result.push(arr[i])\n        }\n    }\n    return result;\n}\n\n\nconsole.log(flatten(arr))\n```\n\n```javascript\n// 拓展运算符(es6)\nvar arr = [1, [2, [3, 4]]];\n\nfunction flatten(arr) {\n\n    while (arr.some(item => Array.isArray(item))) {\n        arr = [].concat(...arr);\n    }\n    return arr;\n}\n\nconsole.log(flatten(arr))\n```\n\n### 测验题\n```javascript\nconst clothes = ['shirt', 'socks', 'jacket', 'pants', 'hat']\nclothes.length = 0\n \nconsole.log(clothes[3])\n// undefined\n// 将数组的长度赋值为 0 就相当于从数组中删除所有元素。\n```\n\n```javascript\nvar arr = [5, 22, 14, 9];\n\nconsole.log(arr.sort());\n\n// [14, 22, 5, 9]\n// sort() 方法用于对数组的元素进行排序,并返回数组。默认排序顺序是根据字符串Unicode码点。\n// 详情请见V8引擎Array源码710行处 https://github.com/v8/v8/blob/ad82a40509c5b5b4680d4299c8f08d6c6d31af3c/src/js/array.js\n```\n\n## 对象(Object)\n\n[MDN对象](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects)  \n\n### 深拷贝\n```javascript\nfunction deepClone(obj = {}) {\n    if (typeof obj !== 'object' || obj == null) {\n        // obj 是 null 或者不是对象和数组，直接返回\n        return obj;\n    }\n    let res;\n    if (obj instanceof Array) {\n        res = [];\n    } else {\n        res = {};\n    }\n\n    for (let key in obj) {\n        // 判断自身中是否包含自身属性\n        if (obj.hasOwnProperty(key)) {\n            res[key] = deepClone(obj[key])\n        }\n    }\n    return res;\n}\n// 验证\no = {a: 1, d: {c: '4'}};\nres = deepClone(o);\nconsole.log(res);\nconsole.log(res == o);\n```\n\n### 浅拷贝\n```javascript\nconst hero = {\n  name: 'Batman',\n  city: 'Gotham'\n};\n// **********************方法一**********************\nconst heroEnhancedClone = {\n  ...hero,\n  name: 'Batman Clone',\n  realName: 'Bruce Wayne'\n};\n\n// 验证\nheroEnhancedClone;  // { name: 'Batman Clone', city: 'Gotham', realName: 'Bruce Wayne' }\n\n// **********************方法二**********************\nconst { ...heroClone } = hero;\n\n// 验证\nheroClone; // { name: 'Batman', city: 'Gotham' }\nhero === heroClone; // => false\n\n// **********************方法三**********************\nconst hero = {\n  name: 'Batman',\n  city: 'Gotham'\n};\n\n// 验证\nconst heroClone = Object.assign({}, hero);\nheroClone; // { name: 'Batman', city: 'Gotham' }\nhero === heroClone; // => false\n```\n\n### 测验题\n```javascript\nconst a = {};\nconst b = { key: \"b\" };\nconst c = { key: \"c\" };\n\na[b] = 123;\na[c] = 456;\n\nconsole.log(a[b]);\n\n// 456\n// 对象不能做对象的 key，实际上是:\n// a[\"Object object\"] = 123;\n// a[\"Object object\"] = 456;\n```\n\n## 应用问题\n\n### 防抖\n```javascript\nfunction debounce(func, wait) {\n  let timer = null;\n\n  return function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n\n    let self = this;\n    let args = arguments;\n\n    timer = setTimeout(function () {\n      func.apply(self, args);\n      timer = null;\n    }, wait);\n  };\n}\n```\n\n### 节流\n```javascript\nfunction throttle(func, wait) {\n  let lastTime = 0;\n  let timer = null;\n\n  return function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n\n    let self = this;\n    let args = arguments;\n    let nowTime = +new Date();\n\n    const remainWaitTime = wait - (nowTime - lastTime);\n\n    if (remainWaitTime <= 0) {\n      lastTime = nowTime;\n      func.apply(self, args);\n    } else {\n      timer = setTimeout(function () {\n        lastTime = +new Date();\n        func.apply(self, args);\n        timer = null;\n      }, remainWaitTime);\n    }\n  };\n}\n```\n\n### 实现ajax的post\n```javascript\nfunction ajax_post(url, data) {\n    // 1. 异步对象 ajax\n    var ajax = new XMLHttpRequest();\n    \n    // 2. url 方法\n    ajax.open('post', url);\n    \n    // 3. 设置请求报文\n    ajax.setRequestHeader('Content-type', 'text/plain');\n    \n    // 4. 发送\n    if (data) {\n        ajax.send(data);\n    } else {\n        ajax.send();\n    }\n    \n    // 5. 注册事件\n    ajax.onreadystatechange = function () {\n        if (ajax.readyState === 4 && ajax.status === 200) {\n            console.log(ajax.respenseText);\n        }\n    }\n}\n```\n","slug":"javascriptBasicQuestions","published":1,"updated":"2022-05-09T18:52:07.213Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4brvxsk000gkg7efv1g219i","content":"<h2 id=\"原型链\"><a href=\"#原型链\" class=\"headerlink\" title=\"原型链\"></a>原型链</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">MDN原型链介绍</a>  </p>\n<blockquote>\n<p> 每个实例对象（<code>object</code>）都有一个私有属性（称之为 <code>__proto__</code> ）指向它的构造函数的原型对象（<code>prototype</code>）。该原型对象也有一个自己的原型对象（<code>__proto__</code>），层层向上直到一个对象的原型对象为 <code>null</code>。根据定义，<code>null</code> 没有原型，并作为这个原型链中的最后一个环节。 </p>\n</blockquote>\n<p><img src=\"https://camo.githubusercontent.com/9a69b0f03116884e80cf566f8542cf014a4dd043fce6ce030d615040461f4e5a/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f6d717971696e6766656e672f426c6f672f496d616765732f70726f746f74797065352e706e67\" alt=\"关系图 \">  </p>\n<h3 id=\"手写bind\"><a href=\"#手写bind\" class=\"headerlink\" title=\"手写bind\"></a>手写bind</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">bind1</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 将参数拆解为数组</span>\n    <span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 变成数组</span>\n    \n    <span class=\"token comment\">// 获取 this（数组第一项）</span>\n    <span class=\"token keyword\">const</span> t <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">// fn1.bind(...) 中的 fn1</span>\n    <span class=\"token keyword\">const</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n    \n    <span class=\"token comment\">// 返回一个函数</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">self</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'this is fn1'</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> fn2 <span class=\"token operator\">=</span> fn1<span class=\"token punctuation\">.</span><span class=\"token function\">bind1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>x<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"手写new\"><a href=\"#手写new\" class=\"headerlink\" title=\"手写new\"></a>手写new</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">funcNew</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> newObj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">obj</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>newObj<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> result <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">&amp;&amp;</span> result <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> result <span class=\"token operator\">:</span> newObj<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"手写instanceof\"><a href=\"#手写instanceof\" class=\"headerlink\" title=\"手写instanceof\"></a>手写instanceof</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">newInstanceOf</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">leftValue<span class=\"token punctuation\">,</span> rightValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> leftValue <span class=\"token operator\">!==</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">||</span> rightValue <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> \n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">let</span> rightProto <span class=\"token operator\">=</span> rightValue<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span>\n    leftValue <span class=\"token operator\">=</span> leftValue<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>leftValue <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>leftValue <span class=\"token operator\">===</span> rightProto<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        leftValue <span class=\"token operator\">=</span> leftValue<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/*\n * --- 验证 ---\n */</span>\n\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Foo</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Child</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Father</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token class-name\">Child</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Father</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Child</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newInstanceOf</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> Array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newInstanceOf</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newInstanceOf</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> Array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newInstanceOf</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newInstanceOf</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> Foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newInstanceOf</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> Child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newInstanceOf</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> Father<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newInstanceOf</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false </span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"测验题\"><a href=\"#测验题\" class=\"headerlink\" title=\"测验题\"></a>测验题</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> \n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"animal\"</span>\n<span class=\"token punctuation\">&#125;</span>\n   \n<span class=\"token keyword\">function</span> <span class=\"token function\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> \n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"dog\"</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token class-name\">Dog</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n \n<span class=\"token keyword\">var</span> PavlovPet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>PavlovPet<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Dog</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Variables\">MDN变量</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Hoisting\">MDN变量提升</a>  </p>\n<h3 id=\"每隔一秒输出一个数字\"><a href=\"#每隔一秒输出一个数字\" class=\"headerlink\" title=\"每隔一秒输出一个数字\"></a>每隔一秒输出一个数字</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 闭包</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">j</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"测验题-1\"><a href=\"#测验题-1\" class=\"headerlink\" title=\"测验题\"></a>测验题</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">output</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 1 undefined 2 1</span>\n<span class=\"token comment\">// 第一个输出：全局的 var a</span>\n<span class=\"token comment\">// 第二个输出：output 函数中声明的 var a变量提升，还未赋值</span>\n<span class=\"token comment\">// 第三个输出：output 函数局部作用域的 a 已赋值</span>\n<span class=\"token comment\">// 第四输出：全局的 var a 没有变</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> b <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    a<span class=\"token operator\">++</span>\n    <span class=\"token keyword\">return</span> a\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> a<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> b<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// undefined number</span>\n<span class=\"token comment\">// let a 是一个局部变量。typeof a 检查的是未声明的变量。</span>\n<span class=\"token comment\">// b 是个全局变量，它在 foo 函数中被赋值。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Data_structures\">MDN数据类型</a></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token string\">\"ConardLi\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 1 false</span>\n<span class=\"token comment\">// + 运算符首先会尝试将 boolean 类型转换为数字类型，true 被转换为 1，false 被转换为 0。</span>\n<span class=\"token comment\">// 字符串 'ConardLi' 是一个真值，所以 !'ConardLi' 为 false。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"异步\"><a href=\"#异步\" class=\"headerlink\" title=\"异步\"></a>异步</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Asynchronous\">MDN异步</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/EventLoop\">MDN事件循环</a></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">log</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 0 1 2</span>\n<span class=\"token comment\">//定时器是异步执行，浏览器会优先执行同步任务，在遇到定时器时会先把它们暂存在一个宏任务队列中，待当前宏任务队列的所有任务执行完毕后才会去执行队列中的任务，此时循环已执行完毕，i 已经是 3。</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"数组-Array\"><a href=\"#数组-Array\" class=\"headerlink\" title=\"数组 (Array)\"></a>数组 (Array)</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Arrays\">MDN数组</a>  </p>\n<h3 id=\"数组扁平化\"><a href=\"#数组扁平化\" class=\"headerlink\" title=\"数组扁平化\"></a>数组扁平化</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 递归</span>\n<span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> len <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            result <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 拓展运算符(es6)</span>\n<span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"测验题-2\"><a href=\"#测验题-2\" class=\"headerlink\" title=\"测验题\"></a>测验题</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> clothes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'shirt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'socks'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'jacket'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pants'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hat'</span><span class=\"token punctuation\">]</span>\nclothes<span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>clothes<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// undefined</span>\n<span class=\"token comment\">// 将数组的长度赋值为 0 就相当于从数组中删除所有元素。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// [14, 22, 5, 9]</span>\n<span class=\"token comment\">// sort() 方法用于对数组的元素进行排序,并返回数组。默认排序顺序是根据字符串Unicode码点。</span>\n<span class=\"token comment\">// 详情请见V8引擎Array源码710行处 https://github.com/v8/v8/blob/ad82a40509c5b5b4680d4299c8f08d6c6d31af3c/src/js/array.js</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"对象-Object\"><a href=\"#对象-Object\" class=\"headerlink\" title=\"对象(Object)\"></a>对象(Object)</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects\">MDN对象</a>  </p>\n<h3 id=\"深拷贝\"><a href=\"#深拷贝\" class=\"headerlink\" title=\"深拷贝\"></a>深拷贝</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">deepClone</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> obj <span class=\"token operator\">!==</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">||</span> obj <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// obj 是 null 或者不是对象和数组，直接返回</span>\n        <span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">let</span> res<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        res <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 判断自身中是否包含自身属性</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            res<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">deepClone</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 验证</span>\no <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> d<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>c<span class=\"token operator\">:</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\nres <span class=\"token operator\">=</span> <span class=\"token function\">deepClone</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res <span class=\"token operator\">==</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"浅拷贝\"><a href=\"#浅拷贝\" class=\"headerlink\" title=\"浅拷贝\"></a>浅拷贝</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> hero <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Batman'</span><span class=\"token punctuation\">,</span>\n  city<span class=\"token operator\">:</span> <span class=\"token string\">'Gotham'</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// **********************方法一**********************</span>\n<span class=\"token keyword\">const</span> heroEnhancedClone <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token operator\">...</span>hero<span class=\"token punctuation\">,</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Batman Clone'</span><span class=\"token punctuation\">,</span>\n  realName<span class=\"token operator\">:</span> <span class=\"token string\">'Bruce Wayne'</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 验证</span>\nheroEnhancedClone<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// &#123; name: 'Batman Clone', city: 'Gotham', realName: 'Bruce Wayne' &#125;</span>\n\n<span class=\"token comment\">// **********************方法二**********************</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token operator\">...</span>heroClone <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> hero<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 验证</span>\nheroClone<span class=\"token punctuation\">;</span> <span class=\"token comment\">// &#123; name: 'Batman', city: 'Gotham' &#125;</span>\nhero <span class=\"token operator\">===</span> heroClone<span class=\"token punctuation\">;</span> <span class=\"token comment\">// => false</span>\n\n<span class=\"token comment\">// **********************方法三**********************</span>\n<span class=\"token keyword\">const</span> hero <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Batman'</span><span class=\"token punctuation\">,</span>\n  city<span class=\"token operator\">:</span> <span class=\"token string\">'Gotham'</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 验证</span>\n<span class=\"token keyword\">const</span> heroClone <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> hero<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nheroClone<span class=\"token punctuation\">;</span> <span class=\"token comment\">// &#123; name: 'Batman', city: 'Gotham' &#125;</span>\nhero <span class=\"token operator\">===</span> heroClone<span class=\"token punctuation\">;</span> <span class=\"token comment\">// => false</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"测验题-3\"><a href=\"#测验题-3\" class=\"headerlink\" title=\"测验题\"></a>测验题</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> key<span class=\"token operator\">:</span> <span class=\"token string\">\"b\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> c <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> key<span class=\"token operator\">:</span> <span class=\"token string\">\"c\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\na<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">456</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 456</span>\n<span class=\"token comment\">// 对象不能做对象的 key，实际上是:</span>\n<span class=\"token comment\">// a[\"Object object\"] = 123;</span>\n<span class=\"token comment\">// a[\"Object object\"] = 456;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"应用问题\"><a href=\"#应用问题\" class=\"headerlink\" title=\"应用问题\"></a>应用问题</h2><h3 id=\"防抖\"><a href=\"#防抖\" class=\"headerlink\" title=\"防抖\"></a>防抖</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">func<span class=\"token punctuation\">,</span> wait</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">let</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">;</span>\n\n    timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">func</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> wait<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"节流\"><a href=\"#节流\" class=\"headerlink\" title=\"节流\"></a>节流</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">func<span class=\"token punctuation\">,</span> wait</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> lastTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">let</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> nowTime <span class=\"token operator\">=</span> <span class=\"token operator\">+</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> remainWaitTime <span class=\"token operator\">=</span> wait <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>nowTime <span class=\"token operator\">-</span> lastTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>remainWaitTime <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      lastTime <span class=\"token operator\">=</span> nowTime<span class=\"token punctuation\">;</span>\n      <span class=\"token function\">func</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        lastTime <span class=\"token operator\">=</span> <span class=\"token operator\">+</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">func</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> remainWaitTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"实现ajax的post\"><a href=\"#实现ajax的post\" class=\"headerlink\" title=\"实现ajax的post\"></a>实现ajax的post</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ajax_post</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token punctuation\">,</span> data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 1. 异步对象 ajax</span>\n    <span class=\"token keyword\">var</span> ajax <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// 2. url 方法</span>\n    ajax<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// 3. 设置请求报文</span>\n    ajax<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'text/plain'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// 4. 发送</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        ajax<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        ajax<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token comment\">// 5. 注册事件</span>\n    ajax<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ajax<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">===</span> <span class=\"token number\">4</span> <span class=\"token operator\">&amp;&amp;</span> ajax<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ajax<span class=\"token punctuation\">.</span>respenseText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{"friends":[{"avatar":"https://www.naiquoy.com/imgs/twain.jpeg","name":"Twain","introduction":"永远滴神","url":"https://blog.2333.ink/","title":"前去膜拜"},{"avatar":"https://noechou.cn/wp-content/uploads/2021/01/Cache_-6619600f913cdc0c..jpg","name":"第七纵队","introduction":"里歪是个戆卵","url":"https://noechou.cn/","title":"前去学习"},{"avatar":"https://www.scery.com/images/avatar.png","name":"Anthony","introduction":"As you look around","url":"https://www.scery.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1587892058-wechat_pic_20200406225459.jpg","name":"Taoidle","introduction":"秋深し 隣はなにも しない人","url":"https://www.taoidle.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1588039248-photo_2019-02-14_18-47-31.jpg","name":"johnpoint","introduction":"折腾是第一生产力（不是","url":"https://blog.lvcshu.com/","title":"前去学习"},{"avatar":"https://img.imgdb.cn/item/603750c35f4313ce25f92a35.jpg","name":"SolitudeAlma","introduction":"都懂一点，不是很懂的小捞仔。","url":"https://blog.yt1209.com/","title":"前去学习"},{"avatar":"https://jniantic.cn/logo.jpg","name":"经年思维","introduction":"有一份光，发一份热","url":"https://jniantic.cn","title":"前去学习"}]}},"excerpt":"","more":"<h2 id=\"原型链\"><a href=\"#原型链\" class=\"headerlink\" title=\"原型链\"></a>原型链</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\">MDN原型链介绍</a>  </p>\n<blockquote>\n<p> 每个实例对象（<code>object</code>）都有一个私有属性（称之为 <code>__proto__</code> ）指向它的构造函数的原型对象（<code>prototype</code>）。该原型对象也有一个自己的原型对象（<code>__proto__</code>），层层向上直到一个对象的原型对象为 <code>null</code>。根据定义，<code>null</code> 没有原型，并作为这个原型链中的最后一个环节。 </p>\n</blockquote>\n<p><img src=\"https://camo.githubusercontent.com/9a69b0f03116884e80cf566f8542cf014a4dd043fce6ce030d615040461f4e5a/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f6d717971696e6766656e672f426c6f672f496d616765732f70726f746f74797065352e706e67\" alt=\"关系图 \">  </p>\n<h3 id=\"手写bind\"><a href=\"#手写bind\" class=\"headerlink\" title=\"手写bind\"></a>手写bind</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">bind1</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 将参数拆解为数组</span>\n    <span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 变成数组</span>\n    \n    <span class=\"token comment\">// 获取 this（数组第一项）</span>\n    <span class=\"token keyword\">const</span> t <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">// fn1.bind(...) 中的 fn1</span>\n    <span class=\"token keyword\">const</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n    \n    <span class=\"token comment\">// 返回一个函数</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">self</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'this is fn1'</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">const</span> fn2 <span class=\"token operator\">=</span> fn1<span class=\"token punctuation\">.</span><span class=\"token function\">bind1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>x<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"手写new\"><a href=\"#手写new\" class=\"headerlink\" title=\"手写new\"></a>手写new</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">funcNew</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> newObj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">obj</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>newObj<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> result <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">&amp;&amp;</span> result <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> result <span class=\"token operator\">:</span> newObj<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"手写instanceof\"><a href=\"#手写instanceof\" class=\"headerlink\" title=\"手写instanceof\"></a>手写instanceof</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">newInstanceOf</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">leftValue<span class=\"token punctuation\">,</span> rightValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> leftValue <span class=\"token operator\">!==</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">||</span> rightValue <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> \n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">let</span> rightProto <span class=\"token operator\">=</span> rightValue<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">;</span>\n    leftValue <span class=\"token operator\">=</span> leftValue<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>leftValue <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>leftValue <span class=\"token operator\">===</span> rightProto<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        leftValue <span class=\"token operator\">=</span> leftValue<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/*\n * --- 验证 ---\n */</span>\n\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Foo</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Child</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Father</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token class-name\">Child</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Father</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Child</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newInstanceOf</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> Array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newInstanceOf</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newInstanceOf</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> Array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newInstanceOf</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newInstanceOf</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> Foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newInstanceOf</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> Child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newInstanceOf</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> Father<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">newInstanceOf</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false </span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"测验题\"><a href=\"#测验题\" class=\"headerlink\" title=\"测验题\"></a>测验题</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> \n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">\"animal\"</span>\n<span class=\"token punctuation\">&#125;</span>\n   \n<span class=\"token keyword\">function</span> <span class=\"token function\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> \n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"dog\"</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token class-name\">Dog</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n \n<span class=\"token keyword\">var</span> PavlovPet <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>PavlovPet<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token class-name\">Dog</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Dog</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Variables\">MDN变量</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Hoisting\">MDN变量提升</a>  </p>\n<h3 id=\"每隔一秒输出一个数字\"><a href=\"#每隔一秒输出一个数字\" class=\"headerlink\" title=\"每隔一秒输出一个数字\"></a>每隔一秒输出一个数字</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 闭包</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">j</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"测验题-1\"><a href=\"#测验题-1\" class=\"headerlink\" title=\"测验题\"></a>测验题</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">output</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token function\">output</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 1 undefined 2 1</span>\n<span class=\"token comment\">// 第一个输出：全局的 var a</span>\n<span class=\"token comment\">// 第二个输出：output 函数中声明的 var a变量提升，还未赋值</span>\n<span class=\"token comment\">// 第三个输出：output 函数局部作用域的 a 已赋值</span>\n<span class=\"token comment\">// 第四输出：全局的 var a 没有变</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> b <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    a<span class=\"token operator\">++</span>\n    <span class=\"token keyword\">return</span> a\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> a<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> b<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// undefined number</span>\n<span class=\"token comment\">// let a 是一个局部变量。typeof a 检查的是未声明的变量。</span>\n<span class=\"token comment\">// b 是个全局变量，它在 foo 函数中被赋值。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Data_structures\">MDN数据类型</a></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token string\">\"ConardLi\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 1 false</span>\n<span class=\"token comment\">// + 运算符首先会尝试将 boolean 类型转换为数字类型，true 被转换为 1，false 被转换为 0。</span>\n<span class=\"token comment\">// 字符串 'ConardLi' 是一个真值，所以 !'ConardLi' 为 false。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"异步\"><a href=\"#异步\" class=\"headerlink\" title=\"异步\"></a>异步</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Asynchronous\">MDN异步</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/EventLoop\">MDN事件循环</a></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">log</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 0 1 2</span>\n<span class=\"token comment\">//定时器是异步执行，浏览器会优先执行同步任务，在遇到定时器时会先把它们暂存在一个宏任务队列中，待当前宏任务队列的所有任务执行完毕后才会去执行队列中的任务，此时循环已执行完毕，i 已经是 3。</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"数组-Array\"><a href=\"#数组-Array\" class=\"headerlink\" title=\"数组 (Array)\"></a>数组 (Array)</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Arrays\">MDN数组</a>  </p>\n<h3 id=\"数组扁平化\"><a href=\"#数组扁平化\" class=\"headerlink\" title=\"数组扁平化\"></a>数组扁平化</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 递归</span>\n<span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> len <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            result <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 拓展运算符(es6)</span>\n<span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"测验题-2\"><a href=\"#测验题-2\" class=\"headerlink\" title=\"测验题\"></a>测验题</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> clothes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'shirt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'socks'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'jacket'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pants'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hat'</span><span class=\"token punctuation\">]</span>\nclothes<span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>clothes<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// undefined</span>\n<span class=\"token comment\">// 将数组的长度赋值为 0 就相当于从数组中删除所有元素。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// [14, 22, 5, 9]</span>\n<span class=\"token comment\">// sort() 方法用于对数组的元素进行排序,并返回数组。默认排序顺序是根据字符串Unicode码点。</span>\n<span class=\"token comment\">// 详情请见V8引擎Array源码710行处 https://github.com/v8/v8/blob/ad82a40509c5b5b4680d4299c8f08d6c6d31af3c/src/js/array.js</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"对象-Object\"><a href=\"#对象-Object\" class=\"headerlink\" title=\"对象(Object)\"></a>对象(Object)</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects\">MDN对象</a>  </p>\n<h3 id=\"深拷贝\"><a href=\"#深拷贝\" class=\"headerlink\" title=\"深拷贝\"></a>深拷贝</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">deepClone</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> obj <span class=\"token operator\">!==</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">||</span> obj <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// obj 是 null 或者不是对象和数组，直接返回</span>\n        <span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">let</span> res<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        res <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 判断自身中是否包含自身属性</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            res<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">deepClone</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 验证</span>\no <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> d<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>c<span class=\"token operator\">:</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\nres <span class=\"token operator\">=</span> <span class=\"token function\">deepClone</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res <span class=\"token operator\">==</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"浅拷贝\"><a href=\"#浅拷贝\" class=\"headerlink\" title=\"浅拷贝\"></a>浅拷贝</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> hero <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Batman'</span><span class=\"token punctuation\">,</span>\n  city<span class=\"token operator\">:</span> <span class=\"token string\">'Gotham'</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// **********************方法一**********************</span>\n<span class=\"token keyword\">const</span> heroEnhancedClone <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token operator\">...</span>hero<span class=\"token punctuation\">,</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Batman Clone'</span><span class=\"token punctuation\">,</span>\n  realName<span class=\"token operator\">:</span> <span class=\"token string\">'Bruce Wayne'</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 验证</span>\nheroEnhancedClone<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// &#123; name: 'Batman Clone', city: 'Gotham', realName: 'Bruce Wayne' &#125;</span>\n\n<span class=\"token comment\">// **********************方法二**********************</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token operator\">...</span>heroClone <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> hero<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 验证</span>\nheroClone<span class=\"token punctuation\">;</span> <span class=\"token comment\">// &#123; name: 'Batman', city: 'Gotham' &#125;</span>\nhero <span class=\"token operator\">===</span> heroClone<span class=\"token punctuation\">;</span> <span class=\"token comment\">// => false</span>\n\n<span class=\"token comment\">// **********************方法三**********************</span>\n<span class=\"token keyword\">const</span> hero <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Batman'</span><span class=\"token punctuation\">,</span>\n  city<span class=\"token operator\">:</span> <span class=\"token string\">'Gotham'</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 验证</span>\n<span class=\"token keyword\">const</span> heroClone <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> hero<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nheroClone<span class=\"token punctuation\">;</span> <span class=\"token comment\">// &#123; name: 'Batman', city: 'Gotham' &#125;</span>\nhero <span class=\"token operator\">===</span> heroClone<span class=\"token punctuation\">;</span> <span class=\"token comment\">// => false</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"测验题-3\"><a href=\"#测验题-3\" class=\"headerlink\" title=\"测验题\"></a>测验题</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> key<span class=\"token operator\">:</span> <span class=\"token string\">\"b\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> c <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> key<span class=\"token operator\">:</span> <span class=\"token string\">\"c\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\na<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">456</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 456</span>\n<span class=\"token comment\">// 对象不能做对象的 key，实际上是:</span>\n<span class=\"token comment\">// a[\"Object object\"] = 123;</span>\n<span class=\"token comment\">// a[\"Object object\"] = 456;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"应用问题\"><a href=\"#应用问题\" class=\"headerlink\" title=\"应用问题\"></a>应用问题</h2><h3 id=\"防抖\"><a href=\"#防抖\" class=\"headerlink\" title=\"防抖\"></a>防抖</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">func<span class=\"token punctuation\">,</span> wait</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">let</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">;</span>\n\n    timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">func</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> wait<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"节流\"><a href=\"#节流\" class=\"headerlink\" title=\"节流\"></a>节流</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">func<span class=\"token punctuation\">,</span> wait</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> lastTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">let</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> nowTime <span class=\"token operator\">=</span> <span class=\"token operator\">+</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> remainWaitTime <span class=\"token operator\">=</span> wait <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>nowTime <span class=\"token operator\">-</span> lastTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>remainWaitTime <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      lastTime <span class=\"token operator\">=</span> nowTime<span class=\"token punctuation\">;</span>\n      <span class=\"token function\">func</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        lastTime <span class=\"token operator\">=</span> <span class=\"token operator\">+</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">func</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        timer <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> remainWaitTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"实现ajax的post\"><a href=\"#实现ajax的post\" class=\"headerlink\" title=\"实现ajax的post\"></a>实现ajax的post</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ajax_post</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token punctuation\">,</span> data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 1. 异步对象 ajax</span>\n    <span class=\"token keyword\">var</span> ajax <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// 2. url 方法</span>\n    ajax<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// 3. 设置请求报文</span>\n    ajax<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'text/plain'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// 4. 发送</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        ajax<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        ajax<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token comment\">// 5. 注册事件</span>\n    ajax<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ajax<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">===</span> <span class=\"token number\">4</span> <span class=\"token operator\">&amp;&amp;</span> ajax<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ajax<span class=\"token punctuation\">.</span>respenseText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n"},{"title":"基于Three.js的插件-PhotoSphereViewer的基础教程","date":"2021-05-20T16:00:00.000Z","author":"Marshall","img":"https://unsplash.it/1920/1080?random3","top":true,"cover":true,"toc":true,"mathjax":false,"summary":"一个JavaScript库，用于显示Photo Sphere全景照片","reprintPolicy":"cc_by","_content":"\n前言：学校想开发一个全景地图，最后找到我这个工具人来做，无奈之下只好去学Three.js爆肝，本来是用Three.js直接开发的，做到一半发现了[Photo Sphere Viewer](https://photo-sphere-viewer.js.org/)这个基于Three.js的插件，于是研究完它的文档后，重构了这个项目\n\n# 安装Photo Sphere Viewer\n\n## 用npm或yarn\n\n```sh\nnpm install photo-sphere-viewer\n\nyarn add photo-sphere-viewer\n```\n\n## 通过CDN\n[jsDelivr](https://www.jsdelivr.com/package/npm/photo-sphere-viewer)\n\n# 依赖关系\n\n## 必选项\n\n- [Three.js](https://threejs.org/) (使用`build/three.min.js`文件)\n- [uEvent 2](https://github.com/mistic100/uEvent)(使用`browser.js`文件)\n\n## 可选项\n\n- [promise-polyfill](https://github.com/taylorhakes/promise-polyfill) 与IE兼容 (使用`dist/polyfill.min.js`文件)\n\n# 创建第一个全景图\n\n```html\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/photo-sphere-viewer@4/dist/photo-sphere-viewer.min.css\"/>\n\n<script src=\"https://cdn.jsdelivr.net/npm/three/build/three.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/uevent@2/browser.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/photo-sphere-viewer@4/dist/photo-sphere-viewer.min.js\"></script>\n\n<div id=\"viewer\"></div>\n\n<style>\n    /* the viewer container must have a defined size */\n    #viewer {\n        width: 100vw;\n        height: 50vh;\n    }\n</style>\n\n<script>\n    var viewer = new PhotoSphereViewer.Viewer({\n        container: document.querySelector('#viewer'),\n        panorama: 'path/to/panorama.jpg'\n    });\n</script>\n```\n\n其中的`panorama`必须是方形的图片，但是官方给出了多种适配器以进行不同方式的加载\n\n\n\n# 适配器\n\n## 默认适配器\n\npanorama为默认方形全景图片\n\n## 立方体贴图适配器\n\nPhoto Sphere Viewer支持将立方体贴图作为六个不同的图像文件。这些文件可以作为对象或数组提供。使用立方体贴图时，完全支持Photo Sphere Viewer的所有功能。\n\n例子\n\n```js\nnew PhotoSphereViewer.Viewer({\n  adapter: PhotoSphereViewer.CubemapAdapter,\n  panorama: {\n    left:   'path/to/left.jpg',\n    front:  'path/to/front.jpg',\n    right:  'path/to/right.jpg',\n    back:   'path/to/back.jpg',\n    top:    'path/to/top.jpg',\n    bottom: 'path/to/bottom.jpg',\n  },\n});\n// 也可以以数组形式导入\npanorama: [\n  'path/to/left.jpg',\n  'path/to/front.jpg',\n  'path/to/right.jpg',\n  'path/to/back.jpg',\n  'path/to/top.jpg',\n  'path/to/bottom.jpg',\n]\n\n```\n\n\n\n## 等矩形瓷砖适配器(直译)\n\n> 通过将大全景图切成许多小图块，可以减少初始加载时间和使用的带宽。\n\n```js\nnew PhotoSphereViewer.Viewer({\n  adapter: PhotoSphereViewer.EquirectangularTilesAdapter,\n  panorama: {\n    width: 6000,\n    cols: 16,\n    rows: 8,\n    baseUrl: 'low_res.jpg',\n    tileUrl: (col, row) => {\n      return `tile_${col}x${row}.jpg`;\n    },\n  },\n});\n```\n\n### 配置\n\n`width`(必选项)\n\n- 类型:`number`\n\n全景图的总宽度，高度始终为宽度/ 2。\n\n`cols`(必选项)\n\n- 类型:`number`\n\n列数必须是2的幂（4、6、16、32、64），最大值是64。\n\n`rows`(必选项)\n\n- 类型:`number`\n\n行数必须是2的幂（2、4、6、16、32），最大值是32。\n\n`tileUrl`(必选项)\n\n- 类型:`function: (col, row) => string`\n\n用于构建图块URL的函数。\n\n`baseUrl`(可选项)\n\n- 类型:`string`\n\n在加载图块时显示的低分辨率完整全景图的URL。\n\n### 准备全景图\n\n使用[ImageMagick](https://imagemagick.org)可以轻松生成图块\n\n假设有一个分辨率为8192x4096像素的图片，要切割成32行和16列，计算可以得出8192/32=256,4096/32=256。命令如下\n\n```bash\nmagick panorama.jpg -crop 256x256 tile_%04d.jpg\n```\n\n\n\n导入的代码为\n\n```js\n    let pano={\n        desc: 'example',\n        minFov: 30,\n        base: `./img/lowQualityImg/example_low.JPG`,\n        position: {longitude: 0, latitude: 0, zoom: 50,},\n        config: {\n            width: 8192,\n            cols: 32,\n            rows: 16,\n            tileUrl: (col, row) => {\n                const num = row * 32 + col\n                return `./img/example/tile_${('000' + num).slice(-4)}.jpg`;\n            },\n        },\n    }\n```\n\n## 个人觉得更为模块化的写法\n\n将加载场景的一系列api打包为一个函数，每个场景作为数组存储，在需要切换场景时，只需要一个函数即可完成，下面是加载场景的函数(以等矩形瓷砖适配器为例)\n\n\n\n```js\nfunction loadPanorama(pano) {\n    const loader = new THREE.ImageLoader();\n\n    viewer.loader.show();\n\n    return new Promise((resolve, reject) => loader.load(pano.base, resolve, undefined, reject))\n        .then(image => {\n            const canvas = document.createElement('canvas');\n            canvas.width = image.width;\n            canvas.height = image.height;\n\n            const ctx = canvas.getContext('2d');\n            ctx.drawImage(image, 0, 0);\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.3)';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n            return canvas.toDataURL('image/png');\n        })\n        .then(baseUrl => {\n            return viewer.setPanorama({\n                ...pano.config,\n                baseUrl: baseUrl,\n            }, pano.position);\n        })\n        .then(() => {\n            viewer.navbar.setCaption(pano.desc);\n            viewer.setOption('minFov', pano.minFov);\n        });\n}\n```\n\n定义场景\n\n```js\nvar panos=[\n        {\n        desc: 'viewer1',\n        minFov: 30,\n        base: `./assets/img/lowQualityImg/viewer_low.JPG`,\n        position: {longitude: 0, latitude: 0, zoom: 50,},\n        config: {\n            width: 8192,\n            cols: 32,\n            rows: 16,\n            tileUrl: (col, row) => {\n                const num = row * 32 + col\n                return `./assets/img/viewer1/tile_${('000' + num).slice(-4)}.jpg`;\n            },\n        },\n    },\n    {\n        desc: 'viewer2',\n        minFov: 30,\n        base: `./assets/img/lowQualityImg/viewer2_low.JPG`,\n        position: {longitude: 1.8939487733283173, latitude: 0.03337838088394118, zoom: 50},\n        config: {\n            width: 8192,\n            cols: 32,\n            rows: 16,\n            tileUrl: (col, row) => {\n                const num = row * 32 + col\n                return `./assets/img/viewer2/tile_${('000' + num).slice(-4)}.jpg`;\n            },\n        },\n    }\n]\n```\n\n切换场景时\n\n```js\nloadPanorama(panos[1])\n```\n\n","source":"_posts/PhotoSphereViewer.md","raw":"---\ntitle: 基于Three.js的插件-PhotoSphereViewer的基础教程\ndate: 2021-5-21 00:00:00\nauthor: Marshall\nimg: https://unsplash.it/1920/1080?random3\ntop: true\ncover: true\ntoc: true\nmathjax: false\nsummary: 一个JavaScript库，用于显示Photo Sphere全景照片\ncategories: Three.js\nreprintPolicy: cc_by\ntags:\n- Three.js\n- PhotoSphereViewer\n---\n\n前言：学校想开发一个全景地图，最后找到我这个工具人来做，无奈之下只好去学Three.js爆肝，本来是用Three.js直接开发的，做到一半发现了[Photo Sphere Viewer](https://photo-sphere-viewer.js.org/)这个基于Three.js的插件，于是研究完它的文档后，重构了这个项目\n\n# 安装Photo Sphere Viewer\n\n## 用npm或yarn\n\n```sh\nnpm install photo-sphere-viewer\n\nyarn add photo-sphere-viewer\n```\n\n## 通过CDN\n[jsDelivr](https://www.jsdelivr.com/package/npm/photo-sphere-viewer)\n\n# 依赖关系\n\n## 必选项\n\n- [Three.js](https://threejs.org/) (使用`build/three.min.js`文件)\n- [uEvent 2](https://github.com/mistic100/uEvent)(使用`browser.js`文件)\n\n## 可选项\n\n- [promise-polyfill](https://github.com/taylorhakes/promise-polyfill) 与IE兼容 (使用`dist/polyfill.min.js`文件)\n\n# 创建第一个全景图\n\n```html\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/photo-sphere-viewer@4/dist/photo-sphere-viewer.min.css\"/>\n\n<script src=\"https://cdn.jsdelivr.net/npm/three/build/three.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/uevent@2/browser.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/photo-sphere-viewer@4/dist/photo-sphere-viewer.min.js\"></script>\n\n<div id=\"viewer\"></div>\n\n<style>\n    /* the viewer container must have a defined size */\n    #viewer {\n        width: 100vw;\n        height: 50vh;\n    }\n</style>\n\n<script>\n    var viewer = new PhotoSphereViewer.Viewer({\n        container: document.querySelector('#viewer'),\n        panorama: 'path/to/panorama.jpg'\n    });\n</script>\n```\n\n其中的`panorama`必须是方形的图片，但是官方给出了多种适配器以进行不同方式的加载\n\n\n\n# 适配器\n\n## 默认适配器\n\npanorama为默认方形全景图片\n\n## 立方体贴图适配器\n\nPhoto Sphere Viewer支持将立方体贴图作为六个不同的图像文件。这些文件可以作为对象或数组提供。使用立方体贴图时，完全支持Photo Sphere Viewer的所有功能。\n\n例子\n\n```js\nnew PhotoSphereViewer.Viewer({\n  adapter: PhotoSphereViewer.CubemapAdapter,\n  panorama: {\n    left:   'path/to/left.jpg',\n    front:  'path/to/front.jpg',\n    right:  'path/to/right.jpg',\n    back:   'path/to/back.jpg',\n    top:    'path/to/top.jpg',\n    bottom: 'path/to/bottom.jpg',\n  },\n});\n// 也可以以数组形式导入\npanorama: [\n  'path/to/left.jpg',\n  'path/to/front.jpg',\n  'path/to/right.jpg',\n  'path/to/back.jpg',\n  'path/to/top.jpg',\n  'path/to/bottom.jpg',\n]\n\n```\n\n\n\n## 等矩形瓷砖适配器(直译)\n\n> 通过将大全景图切成许多小图块，可以减少初始加载时间和使用的带宽。\n\n```js\nnew PhotoSphereViewer.Viewer({\n  adapter: PhotoSphereViewer.EquirectangularTilesAdapter,\n  panorama: {\n    width: 6000,\n    cols: 16,\n    rows: 8,\n    baseUrl: 'low_res.jpg',\n    tileUrl: (col, row) => {\n      return `tile_${col}x${row}.jpg`;\n    },\n  },\n});\n```\n\n### 配置\n\n`width`(必选项)\n\n- 类型:`number`\n\n全景图的总宽度，高度始终为宽度/ 2。\n\n`cols`(必选项)\n\n- 类型:`number`\n\n列数必须是2的幂（4、6、16、32、64），最大值是64。\n\n`rows`(必选项)\n\n- 类型:`number`\n\n行数必须是2的幂（2、4、6、16、32），最大值是32。\n\n`tileUrl`(必选项)\n\n- 类型:`function: (col, row) => string`\n\n用于构建图块URL的函数。\n\n`baseUrl`(可选项)\n\n- 类型:`string`\n\n在加载图块时显示的低分辨率完整全景图的URL。\n\n### 准备全景图\n\n使用[ImageMagick](https://imagemagick.org)可以轻松生成图块\n\n假设有一个分辨率为8192x4096像素的图片，要切割成32行和16列，计算可以得出8192/32=256,4096/32=256。命令如下\n\n```bash\nmagick panorama.jpg -crop 256x256 tile_%04d.jpg\n```\n\n\n\n导入的代码为\n\n```js\n    let pano={\n        desc: 'example',\n        minFov: 30,\n        base: `./img/lowQualityImg/example_low.JPG`,\n        position: {longitude: 0, latitude: 0, zoom: 50,},\n        config: {\n            width: 8192,\n            cols: 32,\n            rows: 16,\n            tileUrl: (col, row) => {\n                const num = row * 32 + col\n                return `./img/example/tile_${('000' + num).slice(-4)}.jpg`;\n            },\n        },\n    }\n```\n\n## 个人觉得更为模块化的写法\n\n将加载场景的一系列api打包为一个函数，每个场景作为数组存储，在需要切换场景时，只需要一个函数即可完成，下面是加载场景的函数(以等矩形瓷砖适配器为例)\n\n\n\n```js\nfunction loadPanorama(pano) {\n    const loader = new THREE.ImageLoader();\n\n    viewer.loader.show();\n\n    return new Promise((resolve, reject) => loader.load(pano.base, resolve, undefined, reject))\n        .then(image => {\n            const canvas = document.createElement('canvas');\n            canvas.width = image.width;\n            canvas.height = image.height;\n\n            const ctx = canvas.getContext('2d');\n            ctx.drawImage(image, 0, 0);\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.3)';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n            return canvas.toDataURL('image/png');\n        })\n        .then(baseUrl => {\n            return viewer.setPanorama({\n                ...pano.config,\n                baseUrl: baseUrl,\n            }, pano.position);\n        })\n        .then(() => {\n            viewer.navbar.setCaption(pano.desc);\n            viewer.setOption('minFov', pano.minFov);\n        });\n}\n```\n\n定义场景\n\n```js\nvar panos=[\n        {\n        desc: 'viewer1',\n        minFov: 30,\n        base: `./assets/img/lowQualityImg/viewer_low.JPG`,\n        position: {longitude: 0, latitude: 0, zoom: 50,},\n        config: {\n            width: 8192,\n            cols: 32,\n            rows: 16,\n            tileUrl: (col, row) => {\n                const num = row * 32 + col\n                return `./assets/img/viewer1/tile_${('000' + num).slice(-4)}.jpg`;\n            },\n        },\n    },\n    {\n        desc: 'viewer2',\n        minFov: 30,\n        base: `./assets/img/lowQualityImg/viewer2_low.JPG`,\n        position: {longitude: 1.8939487733283173, latitude: 0.03337838088394118, zoom: 50},\n        config: {\n            width: 8192,\n            cols: 32,\n            rows: 16,\n            tileUrl: (col, row) => {\n                const num = row * 32 + col\n                return `./assets/img/viewer2/tile_${('000' + num).slice(-4)}.jpg`;\n            },\n        },\n    }\n]\n```\n\n切换场景时\n\n```js\nloadPanorama(panos[1])\n```\n\n","slug":"PhotoSphereViewer","published":1,"updated":"2022-05-09T12:23:27.426Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4brvxsl000hkg7ean619uvw","content":"<p>前言：学校想开发一个全景地图，最后找到我这个工具人来做，无奈之下只好去学Three.js爆肝，本来是用Three.js直接开发的，做到一半发现了<a href=\"https://photo-sphere-viewer.js.org/\">Photo Sphere Viewer</a>这个基于Three.js的插件，于是研究完它的文档后，重构了这个项目</p>\n<h1 id=\"安装Photo-Sphere-Viewer\"><a href=\"#安装Photo-Sphere-Viewer\" class=\"headerlink\" title=\"安装Photo Sphere Viewer\"></a>安装Photo Sphere Viewer</h1><h2 id=\"用npm或yarn\"><a href=\"#用npm或yarn\" class=\"headerlink\" title=\"用npm或yarn\"></a>用npm或yarn</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">npm install photo-sphere-viewer\n\nyarn add photo-sphere-viewer<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"通过CDN\"><a href=\"#通过CDN\" class=\"headerlink\" title=\"通过CDN\"></a>通过CDN</h2><p><a href=\"https://www.jsdelivr.com/package/npm/photo-sphere-viewer\">jsDelivr</a></p>\n<h1 id=\"依赖关系\"><a href=\"#依赖关系\" class=\"headerlink\" title=\"依赖关系\"></a>依赖关系</h1><h2 id=\"必选项\"><a href=\"#必选项\" class=\"headerlink\" title=\"必选项\"></a>必选项</h2><ul>\n<li><a href=\"https://threejs.org/\">Three.js</a> (使用<code>build/three.min.js</code>文件)</li>\n<li><a href=\"https://github.com/mistic100/uEvent\">uEvent 2</a>(使用<code>browser.js</code>文件)</li>\n</ul>\n<h2 id=\"可选项\"><a href=\"#可选项\" class=\"headerlink\" title=\"可选项\"></a>可选项</h2><ul>\n<li><a href=\"https://github.com/taylorhakes/promise-polyfill\">promise-polyfill</a> 与IE兼容 (使用<code>dist/polyfill.min.js</code>文件)</li>\n</ul>\n<h1 id=\"创建第一个全景图\"><a href=\"#创建第一个全景图\" class=\"headerlink\" title=\"创建第一个全景图\"></a>创建第一个全景图</h1><pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/photo-sphere-viewer@4/dist/photo-sphere-viewer.min.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/three/build/three.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/uevent@2/browser.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/photo-sphere-viewer@4/dist/photo-sphere-viewer.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n    <span class=\"token comment\">/* the viewer container must have a defined size */</span>\n    <span class=\"token selector\">#viewer</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100vw<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50vh<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">var</span> viewer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PhotoSphereViewer<span class=\"token punctuation\">.</span>Viewer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        container<span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#viewer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        panorama<span class=\"token operator\">:</span> <span class=\"token string\">'path/to/panorama.jpg'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>其中的<code>panorama</code>必须是方形的图片，但是官方给出了多种适配器以进行不同方式的加载</p>\n<h1 id=\"适配器\"><a href=\"#适配器\" class=\"headerlink\" title=\"适配器\"></a>适配器</h1><h2 id=\"默认适配器\"><a href=\"#默认适配器\" class=\"headerlink\" title=\"默认适配器\"></a>默认适配器</h2><p>panorama为默认方形全景图片</p>\n<h2 id=\"立方体贴图适配器\"><a href=\"#立方体贴图适配器\" class=\"headerlink\" title=\"立方体贴图适配器\"></a>立方体贴图适配器</h2><p>Photo Sphere Viewer支持将立方体贴图作为六个不同的图像文件。这些文件可以作为对象或数组提供。使用立方体贴图时，完全支持Photo Sphere Viewer的所有功能。</p>\n<p>例子</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">PhotoSphereViewer<span class=\"token punctuation\">.</span>Viewer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  adapter<span class=\"token operator\">:</span> PhotoSphereViewer<span class=\"token punctuation\">.</span>CubemapAdapter<span class=\"token punctuation\">,</span>\n  panorama<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    left<span class=\"token operator\">:</span>   <span class=\"token string\">'path/to/left.jpg'</span><span class=\"token punctuation\">,</span>\n    front<span class=\"token operator\">:</span>  <span class=\"token string\">'path/to/front.jpg'</span><span class=\"token punctuation\">,</span>\n    right<span class=\"token operator\">:</span>  <span class=\"token string\">'path/to/right.jpg'</span><span class=\"token punctuation\">,</span>\n    back<span class=\"token operator\">:</span>   <span class=\"token string\">'path/to/back.jpg'</span><span class=\"token punctuation\">,</span>\n    top<span class=\"token operator\">:</span>    <span class=\"token string\">'path/to/top.jpg'</span><span class=\"token punctuation\">,</span>\n    bottom<span class=\"token operator\">:</span> <span class=\"token string\">'path/to/bottom.jpg'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 也可以以数组形式导入</span>\npanorama<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'path/to/left.jpg'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'path/to/front.jpg'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'path/to/right.jpg'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'path/to/back.jpg'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'path/to/top.jpg'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'path/to/bottom.jpg'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"等矩形瓷砖适配器-直译\"><a href=\"#等矩形瓷砖适配器-直译\" class=\"headerlink\" title=\"等矩形瓷砖适配器(直译)\"></a>等矩形瓷砖适配器(直译)</h2><blockquote>\n<p>通过将大全景图切成许多小图块，可以减少初始加载时间和使用的带宽。</p>\n</blockquote>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">PhotoSphereViewer<span class=\"token punctuation\">.</span>Viewer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  adapter<span class=\"token operator\">:</span> PhotoSphereViewer<span class=\"token punctuation\">.</span>EquirectangularTilesAdapter<span class=\"token punctuation\">,</span>\n  panorama<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    width<span class=\"token operator\">:</span> <span class=\"token number\">6000</span><span class=\"token punctuation\">,</span>\n    cols<span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n    rows<span class=\"token operator\">:</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    baseUrl<span class=\"token operator\">:</span> <span class=\"token string\">'low_res.jpg'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">tileUrl</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">col<span class=\"token punctuation\">,</span> row</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">tile_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>col<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">x</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>row<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.jpg</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p><code>width</code>(必选项)</p>\n<ul>\n<li>类型:<code>number</code></li>\n</ul>\n<p>全景图的总宽度，高度始终为宽度/ 2。</p>\n<p><code>cols</code>(必选项)</p>\n<ul>\n<li>类型:<code>number</code></li>\n</ul>\n<p>列数必须是2的幂（4、6、16、32、64），最大值是64。</p>\n<p><code>rows</code>(必选项)</p>\n<ul>\n<li>类型:<code>number</code></li>\n</ul>\n<p>行数必须是2的幂（2、4、6、16、32），最大值是32。</p>\n<p><code>tileUrl</code>(必选项)</p>\n<ul>\n<li>类型:<code>function: (col, row) =&gt; string</code></li>\n</ul>\n<p>用于构建图块URL的函数。</p>\n<p><code>baseUrl</code>(可选项)</p>\n<ul>\n<li>类型:<code>string</code></li>\n</ul>\n<p>在加载图块时显示的低分辨率完整全景图的URL。</p>\n<h3 id=\"准备全景图\"><a href=\"#准备全景图\" class=\"headerlink\" title=\"准备全景图\"></a>准备全景图</h3><p>使用<a href=\"https://imagemagick.org/\">ImageMagick</a>可以轻松生成图块</p>\n<p>假设有一个分辨率为8192x4096像素的图片，要切割成32行和16列，计算可以得出8192/32=256,4096/32=256。命令如下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">magick panorama.jpg -crop 256x256 tile_%04d.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<p>导入的代码为</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> pano<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n    desc<span class=\"token operator\">:</span> <span class=\"token string\">'example'</span><span class=\"token punctuation\">,</span>\n    minFov<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    base<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./img/lowQualityImg/example_low.JPG</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    position<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>longitude<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> latitude<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> zoom<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    config<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        width<span class=\"token operator\">:</span> <span class=\"token number\">8192</span><span class=\"token punctuation\">,</span>\n        cols<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n        rows<span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">tileUrl</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">col<span class=\"token punctuation\">,</span> row</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> row <span class=\"token operator\">*</span> <span class=\"token number\">32</span> <span class=\"token operator\">+</span> col\n            <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./img/example/tile_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token punctuation\">(</span><span class=\"token string\">'000'</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.jpg</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"个人觉得更为模块化的写法\"><a href=\"#个人觉得更为模块化的写法\" class=\"headerlink\" title=\"个人觉得更为模块化的写法\"></a>个人觉得更为模块化的写法</h2><p>将加载场景的一系列api打包为一个函数，每个场景作为数组存储，在需要切换场景时，只需要一个函数即可完成，下面是加载场景的函数(以等矩形瓷砖适配器为例)</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadPanorama</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pano</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> loader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>ImageLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    viewer<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> loader<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>pano<span class=\"token punctuation\">.</span>base<span class=\"token punctuation\">,</span> resolve<span class=\"token punctuation\">,</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">image</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n            canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgba(255, 255, 255, 0.3)'</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">toDataURL</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image/png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">baseUrl</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> viewer<span class=\"token punctuation\">.</span><span class=\"token function\">setPanorama</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token operator\">...</span>pano<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">,</span>\n                baseUrl<span class=\"token operator\">:</span> baseUrl<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> pano<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            viewer<span class=\"token punctuation\">.</span>navbar<span class=\"token punctuation\">.</span><span class=\"token function\">setCaption</span><span class=\"token punctuation\">(</span>pano<span class=\"token punctuation\">.</span>desc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            viewer<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span><span class=\"token string\">'minFov'</span><span class=\"token punctuation\">,</span> pano<span class=\"token punctuation\">.</span>minFov<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>定义场景</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> panos<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span>\n        desc<span class=\"token operator\">:</span> <span class=\"token string\">'viewer1'</span><span class=\"token punctuation\">,</span>\n        minFov<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n        base<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./assets/img/lowQualityImg/viewer_low.JPG</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        position<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>longitude<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> latitude<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> zoom<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        config<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            width<span class=\"token operator\">:</span> <span class=\"token number\">8192</span><span class=\"token punctuation\">,</span>\n            cols<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n            rows<span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">tileUrl</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">col<span class=\"token punctuation\">,</span> row</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> row <span class=\"token operator\">*</span> <span class=\"token number\">32</span> <span class=\"token operator\">+</span> col\n                <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./assets/img/viewer1/tile_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token punctuation\">(</span><span class=\"token string\">'000'</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.jpg</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n        desc<span class=\"token operator\">:</span> <span class=\"token string\">'viewer2'</span><span class=\"token punctuation\">,</span>\n        minFov<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n        base<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./assets/img/lowQualityImg/viewer2_low.JPG</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        position<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>longitude<span class=\"token operator\">:</span> <span class=\"token number\">1.8939487733283173</span><span class=\"token punctuation\">,</span> latitude<span class=\"token operator\">:</span> <span class=\"token number\">0.03337838088394118</span><span class=\"token punctuation\">,</span> zoom<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        config<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            width<span class=\"token operator\">:</span> <span class=\"token number\">8192</span><span class=\"token punctuation\">,</span>\n            cols<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n            rows<span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">tileUrl</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">col<span class=\"token punctuation\">,</span> row</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> row <span class=\"token operator\">*</span> <span class=\"token number\">32</span> <span class=\"token operator\">+</span> col\n                <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./assets/img/viewer2/tile_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token punctuation\">(</span><span class=\"token string\">'000'</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.jpg</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>切换场景时</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token function\">loadPanorama</span><span class=\"token punctuation\">(</span>panos<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n","site":{"data":{"friends":[{"avatar":"https://www.naiquoy.com/imgs/twain.jpeg","name":"Twain","introduction":"永远滴神","url":"https://blog.2333.ink/","title":"前去膜拜"},{"avatar":"https://noechou.cn/wp-content/uploads/2021/01/Cache_-6619600f913cdc0c..jpg","name":"第七纵队","introduction":"里歪是个戆卵","url":"https://noechou.cn/","title":"前去学习"},{"avatar":"https://www.scery.com/images/avatar.png","name":"Anthony","introduction":"As you look around","url":"https://www.scery.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1587892058-wechat_pic_20200406225459.jpg","name":"Taoidle","introduction":"秋深し 隣はなにも しない人","url":"https://www.taoidle.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1588039248-photo_2019-02-14_18-47-31.jpg","name":"johnpoint","introduction":"折腾是第一生产力（不是","url":"https://blog.lvcshu.com/","title":"前去学习"},{"avatar":"https://img.imgdb.cn/item/603750c35f4313ce25f92a35.jpg","name":"SolitudeAlma","introduction":"都懂一点，不是很懂的小捞仔。","url":"https://blog.yt1209.com/","title":"前去学习"},{"avatar":"https://jniantic.cn/logo.jpg","name":"经年思维","introduction":"有一份光，发一份热","url":"https://jniantic.cn","title":"前去学习"}]}},"excerpt":"","more":"<p>前言：学校想开发一个全景地图，最后找到我这个工具人来做，无奈之下只好去学Three.js爆肝，本来是用Three.js直接开发的，做到一半发现了<a href=\"https://photo-sphere-viewer.js.org/\">Photo Sphere Viewer</a>这个基于Three.js的插件，于是研究完它的文档后，重构了这个项目</p>\n<h1 id=\"安装Photo-Sphere-Viewer\"><a href=\"#安装Photo-Sphere-Viewer\" class=\"headerlink\" title=\"安装Photo Sphere Viewer\"></a>安装Photo Sphere Viewer</h1><h2 id=\"用npm或yarn\"><a href=\"#用npm或yarn\" class=\"headerlink\" title=\"用npm或yarn\"></a>用npm或yarn</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">npm install photo-sphere-viewer\n\nyarn add photo-sphere-viewer<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"通过CDN\"><a href=\"#通过CDN\" class=\"headerlink\" title=\"通过CDN\"></a>通过CDN</h2><p><a href=\"https://www.jsdelivr.com/package/npm/photo-sphere-viewer\">jsDelivr</a></p>\n<h1 id=\"依赖关系\"><a href=\"#依赖关系\" class=\"headerlink\" title=\"依赖关系\"></a>依赖关系</h1><h2 id=\"必选项\"><a href=\"#必选项\" class=\"headerlink\" title=\"必选项\"></a>必选项</h2><ul>\n<li><a href=\"https://threejs.org/\">Three.js</a> (使用<code>build/three.min.js</code>文件)</li>\n<li><a href=\"https://github.com/mistic100/uEvent\">uEvent 2</a>(使用<code>browser.js</code>文件)</li>\n</ul>\n<h2 id=\"可选项\"><a href=\"#可选项\" class=\"headerlink\" title=\"可选项\"></a>可选项</h2><ul>\n<li><a href=\"https://github.com/taylorhakes/promise-polyfill\">promise-polyfill</a> 与IE兼容 (使用<code>dist/polyfill.min.js</code>文件)</li>\n</ul>\n<h1 id=\"创建第一个全景图\"><a href=\"#创建第一个全景图\" class=\"headerlink\" title=\"创建第一个全景图\"></a>创建第一个全景图</h1><pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/photo-sphere-viewer@4/dist/photo-sphere-viewer.min.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/three/build/three.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/uevent@2/browser.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/photo-sphere-viewer@4/dist/photo-sphere-viewer.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n    <span class=\"token comment\">/* the viewer container must have a defined size */</span>\n    <span class=\"token selector\">#viewer</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100vw<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50vh<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">var</span> viewer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PhotoSphereViewer<span class=\"token punctuation\">.</span>Viewer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        container<span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#viewer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        panorama<span class=\"token operator\">:</span> <span class=\"token string\">'path/to/panorama.jpg'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>其中的<code>panorama</code>必须是方形的图片，但是官方给出了多种适配器以进行不同方式的加载</p>\n<h1 id=\"适配器\"><a href=\"#适配器\" class=\"headerlink\" title=\"适配器\"></a>适配器</h1><h2 id=\"默认适配器\"><a href=\"#默认适配器\" class=\"headerlink\" title=\"默认适配器\"></a>默认适配器</h2><p>panorama为默认方形全景图片</p>\n<h2 id=\"立方体贴图适配器\"><a href=\"#立方体贴图适配器\" class=\"headerlink\" title=\"立方体贴图适配器\"></a>立方体贴图适配器</h2><p>Photo Sphere Viewer支持将立方体贴图作为六个不同的图像文件。这些文件可以作为对象或数组提供。使用立方体贴图时，完全支持Photo Sphere Viewer的所有功能。</p>\n<p>例子</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">PhotoSphereViewer<span class=\"token punctuation\">.</span>Viewer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  adapter<span class=\"token operator\">:</span> PhotoSphereViewer<span class=\"token punctuation\">.</span>CubemapAdapter<span class=\"token punctuation\">,</span>\n  panorama<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    left<span class=\"token operator\">:</span>   <span class=\"token string\">'path/to/left.jpg'</span><span class=\"token punctuation\">,</span>\n    front<span class=\"token operator\">:</span>  <span class=\"token string\">'path/to/front.jpg'</span><span class=\"token punctuation\">,</span>\n    right<span class=\"token operator\">:</span>  <span class=\"token string\">'path/to/right.jpg'</span><span class=\"token punctuation\">,</span>\n    back<span class=\"token operator\">:</span>   <span class=\"token string\">'path/to/back.jpg'</span><span class=\"token punctuation\">,</span>\n    top<span class=\"token operator\">:</span>    <span class=\"token string\">'path/to/top.jpg'</span><span class=\"token punctuation\">,</span>\n    bottom<span class=\"token operator\">:</span> <span class=\"token string\">'path/to/bottom.jpg'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 也可以以数组形式导入</span>\npanorama<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'path/to/left.jpg'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'path/to/front.jpg'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'path/to/right.jpg'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'path/to/back.jpg'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'path/to/top.jpg'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'path/to/bottom.jpg'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"等矩形瓷砖适配器-直译\"><a href=\"#等矩形瓷砖适配器-直译\" class=\"headerlink\" title=\"等矩形瓷砖适配器(直译)\"></a>等矩形瓷砖适配器(直译)</h2><blockquote>\n<p>通过将大全景图切成许多小图块，可以减少初始加载时间和使用的带宽。</p>\n</blockquote>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">PhotoSphereViewer<span class=\"token punctuation\">.</span>Viewer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  adapter<span class=\"token operator\">:</span> PhotoSphereViewer<span class=\"token punctuation\">.</span>EquirectangularTilesAdapter<span class=\"token punctuation\">,</span>\n  panorama<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    width<span class=\"token operator\">:</span> <span class=\"token number\">6000</span><span class=\"token punctuation\">,</span>\n    cols<span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n    rows<span class=\"token operator\">:</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    baseUrl<span class=\"token operator\">:</span> <span class=\"token string\">'low_res.jpg'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">tileUrl</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">col<span class=\"token punctuation\">,</span> row</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">tile_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>col<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">x</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>row<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.jpg</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p><code>width</code>(必选项)</p>\n<ul>\n<li>类型:<code>number</code></li>\n</ul>\n<p>全景图的总宽度，高度始终为宽度/ 2。</p>\n<p><code>cols</code>(必选项)</p>\n<ul>\n<li>类型:<code>number</code></li>\n</ul>\n<p>列数必须是2的幂（4、6、16、32、64），最大值是64。</p>\n<p><code>rows</code>(必选项)</p>\n<ul>\n<li>类型:<code>number</code></li>\n</ul>\n<p>行数必须是2的幂（2、4、6、16、32），最大值是32。</p>\n<p><code>tileUrl</code>(必选项)</p>\n<ul>\n<li>类型:<code>function: (col, row) =&gt; string</code></li>\n</ul>\n<p>用于构建图块URL的函数。</p>\n<p><code>baseUrl</code>(可选项)</p>\n<ul>\n<li>类型:<code>string</code></li>\n</ul>\n<p>在加载图块时显示的低分辨率完整全景图的URL。</p>\n<h3 id=\"准备全景图\"><a href=\"#准备全景图\" class=\"headerlink\" title=\"准备全景图\"></a>准备全景图</h3><p>使用<a href=\"https://imagemagick.org/\">ImageMagick</a>可以轻松生成图块</p>\n<p>假设有一个分辨率为8192x4096像素的图片，要切割成32行和16列，计算可以得出8192/32=256,4096/32=256。命令如下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">magick panorama.jpg -crop 256x256 tile_%04d.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<p>导入的代码为</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> pano<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n    desc<span class=\"token operator\">:</span> <span class=\"token string\">'example'</span><span class=\"token punctuation\">,</span>\n    minFov<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    base<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./img/lowQualityImg/example_low.JPG</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    position<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>longitude<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> latitude<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> zoom<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    config<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        width<span class=\"token operator\">:</span> <span class=\"token number\">8192</span><span class=\"token punctuation\">,</span>\n        cols<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n        rows<span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">tileUrl</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">col<span class=\"token punctuation\">,</span> row</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> row <span class=\"token operator\">*</span> <span class=\"token number\">32</span> <span class=\"token operator\">+</span> col\n            <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./img/example/tile_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token punctuation\">(</span><span class=\"token string\">'000'</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.jpg</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"个人觉得更为模块化的写法\"><a href=\"#个人觉得更为模块化的写法\" class=\"headerlink\" title=\"个人觉得更为模块化的写法\"></a>个人觉得更为模块化的写法</h2><p>将加载场景的一系列api打包为一个函数，每个场景作为数组存储，在需要切换场景时，只需要一个函数即可完成，下面是加载场景的函数(以等矩形瓷砖适配器为例)</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadPanorama</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pano</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> loader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">THREE<span class=\"token punctuation\">.</span>ImageLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    viewer<span class=\"token punctuation\">.</span>loader<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> loader<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>pano<span class=\"token punctuation\">.</span>base<span class=\"token punctuation\">,</span> resolve<span class=\"token punctuation\">,</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">image</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n            canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'rgba(255, 255, 255, 0.3)'</span><span class=\"token punctuation\">;</span>\n            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">toDataURL</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image/png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">baseUrl</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> viewer<span class=\"token punctuation\">.</span><span class=\"token function\">setPanorama</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token operator\">...</span>pano<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">,</span>\n                baseUrl<span class=\"token operator\">:</span> baseUrl<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> pano<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            viewer<span class=\"token punctuation\">.</span>navbar<span class=\"token punctuation\">.</span><span class=\"token function\">setCaption</span><span class=\"token punctuation\">(</span>pano<span class=\"token punctuation\">.</span>desc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            viewer<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span><span class=\"token string\">'minFov'</span><span class=\"token punctuation\">,</span> pano<span class=\"token punctuation\">.</span>minFov<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>定义场景</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> panos<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span>\n        desc<span class=\"token operator\">:</span> <span class=\"token string\">'viewer1'</span><span class=\"token punctuation\">,</span>\n        minFov<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n        base<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./assets/img/lowQualityImg/viewer_low.JPG</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        position<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>longitude<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> latitude<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> zoom<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        config<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            width<span class=\"token operator\">:</span> <span class=\"token number\">8192</span><span class=\"token punctuation\">,</span>\n            cols<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n            rows<span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">tileUrl</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">col<span class=\"token punctuation\">,</span> row</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> row <span class=\"token operator\">*</span> <span class=\"token number\">32</span> <span class=\"token operator\">+</span> col\n                <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./assets/img/viewer1/tile_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token punctuation\">(</span><span class=\"token string\">'000'</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.jpg</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span>\n        desc<span class=\"token operator\">:</span> <span class=\"token string\">'viewer2'</span><span class=\"token punctuation\">,</span>\n        minFov<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n        base<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./assets/img/lowQualityImg/viewer2_low.JPG</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        position<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>longitude<span class=\"token operator\">:</span> <span class=\"token number\">1.8939487733283173</span><span class=\"token punctuation\">,</span> latitude<span class=\"token operator\">:</span> <span class=\"token number\">0.03337838088394118</span><span class=\"token punctuation\">,</span> zoom<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        config<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            width<span class=\"token operator\">:</span> <span class=\"token number\">8192</span><span class=\"token punctuation\">,</span>\n            cols<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n            rows<span class=\"token operator\">:</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">tileUrl</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">col<span class=\"token punctuation\">,</span> row</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> row <span class=\"token operator\">*</span> <span class=\"token number\">32</span> <span class=\"token operator\">+</span> col\n                <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./assets/img/viewer2/tile_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token punctuation\">(</span><span class=\"token string\">'000'</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">.jpg</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>切换场景时</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token function\">loadPanorama</span><span class=\"token punctuation\">(</span>panos<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n"},{"title":"Vue和Electron的所有坑总结","date":"2021-06-09T16:00:00.000Z","author":"Marshall","img":"https://unsplash.it/1920/1080?random4","top":false,"cover":true,"toc":true,"mathjax":false,"summary":"将Vue与Electron相结合,快速构建桌面级应用","reprintPolicy":"cc_by","_content":"\n\n# Electron\n[Electron](https://www.electronjs.org/) 相当于一个浏览器的外壳，可以把网页程序嵌入到壳里面，可以运行在桌面上的一个程序，可以把网页打包成一个在桌面运行的程序，通俗来说就是软件，比如像QQ、优酷、网易音乐等等。功能的强大超出你的想象，可以构建跨平台桌面程序，本身支持node.js，可以使用node.js的一些模块。\n\n## 一、项目搭建\n### 1. 安装electron\n```bash\nvue add electron-builder\n```\n\n> 安装完成后，查看项目的目录结构，会自动在src目录下生成`background.js`并且修改`package.json`\n\n### 2.运行\n\n```bash\nnpm run electron:serve\n```\n\n在进行此步骤时，有很大的几率会报错`Error: post install error, please remove node_modules before retry!` ，此时需要将node_modules全部删掉，然后重新执行npm install。又有很大的几率会报错，内容大致是提示叫你重新安装electron，此时只需要将node_modules下的electron文件夹删除，然后执行npm install electron就可以了。在安装electron时的相关npm包时，官方推荐使用yarn，但是因为个人习惯原因，使用npm来进行安装。\n\n### 3.打包\n\n```bash\nnpm run electron:build\n```\n\n上述三个步骤看上去十分简单，但是实际进行操作时，出现了一堆错误，下面的内容就是总结所有踩过的坑。\n\n## 二、总结遇到的坑\n\n### 1. Vuex\n\n#### 1.Vuex的安装\n\n在开发时，我当时直接使用了`npm install vuex`来使用vuex，一切问题都没有，非常的正常，但是build后再打开，发现vuex失效了，后面经过查找才发现，在electron使用vuex时，应该使用下面的命令安装。\n\n```bash\nnpm install vuex-electron --save\n```\n\n#### 2.Vuex的配置\n\n第一步，先在`src`目录下新建一个文件夹`store`，然后在这个文件夹内创建文件`index.js`\n\n根据官方的样例[Vuex Electron](https://github.com/vue-electron/vuex-electron-example)，`index.js`的内容如下\n\n```javascript\nimport Vue from \"vue\"\nimport Vuex from \"vuex\"\n\nimport { createPersistedState, createSharedMutations } from \"vuex-electron\"\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    count: 0\n  },\n\n  actions: {\n    increment(store) {\n      store.commit(\"increment\")\n    },\n    decrement(store) {\n      store.commit(\"decrement\")\n    }\n  },\n\n  mutations: {\n    increment(state) {\n      state.count++\n    },\n    decrement(state) {\n      state.count--\n    }\n  },\n\n  plugins: [createPersistedState(), createSharedMutations()],\n  strict: process.env.NODE_ENV !== \"production\"\n})\n```\n\n但是这会引发一个问题，如果你的项目里的代码全都是`this.$sotre.commit`，会发现执行相关代码时根本没有反应，并且控制台会报错`Please, don't use direct commit's, use dispatch instead of this.`，这是因为在import时，将`createSharedMutations`也一并引入了。\n\n如果你用不上多进程共享数据的话，可以选择不导入`createSharedMutations`，注释或者删除相关代码，或者使用dispatch来进行相关操作。\n\n### 2. 构建遇到的问题\n\n#### 1.在`.vue`文件中无法使用electronApi的问题\n\n在`src/main.js`添加下面两行代码\n\n```javascript\nimport electron from 'electron'\nVue.prototype.$electron = electron;\n```\n\n`vue.config.js`配置防止浏览器报错`'__dirname' is not defind`\n\n```javascript\nmodule.exports = {\n    pluginOptions: {\n        electronBuilder: {\n            nodeIntegration: true\n        }\n    }\n}\n```\n\n#### 2.在`.vue`文件中使用`this.$electron.remote`字段为`undefined`\n\n需要“显”式的申明 enableRemoteModule: true\n在项目目录`src`下的`background.js`中修改\n\n```javascript\nconst win = new BrowserWindow({\n        width: 400,\n        height: 400,\n        frame: false,\n        resizable: false,\n        webPreferences: {\n            // Use pluginOptions.nodeIntegration, leave this alone\n            // See nklayman.github.io/vue-cli-plugin-electron-builder/guide/security.html#node-integration for more info\n            nodeIntegration: process.env.ELECTRON_NODE_INTEGRATION,\n            enableRemoteModule: process.env.ELECTRON_NODE_INTEGRATION\n        }\n    });\n```\n\n在`vue.config.js`中添加\n\n```javascript\nmodule.exports = {\n    pluginOptions: {\n        electronBuilder: {\n            nodeIntegration: true,\n            enableRemoteModule: true\n        }\n    }\n}\n```\n\n\n\n\n#### 3.构建好的项目想让别人也使用，因此想取消顶部工具栏\n\n在`background.js`里，修改最上方的代码，将Menu也引入进来\n\n```javascript\nimport {app, protocol, BrowserWindow, Menu, dialog} from 'electron'\n```\n\n然后修改 `createWindow()`\n\n```javascript\n  const win = new BrowserWindow({\n    width: 1294,\n    height: 800,\n    webPreferences: {\n\n      // Use pluginOptions.nodeIntegration, leave this alone\n      // See nklayman.github.io/vue-cli-plugin-electron-builder/guide/security.html#node-integration for more info\n      nodeIntegration: process.env.ELECTRON_NODE_INTEGRATION,\n      contextIsolation: !process.env.ELECTRON_NODE_INTEGRATION,\n      enableRemoteModule: process.env.ELECTRON_NODE_INTEGRATION\n    }\n  })\n  Menu.setApplicationMenu(null)\n```\n\n#### 4.需要自定义build出来的exe等安装程序\n\n在根目录下创建文件`vue.config.js`，然后进行相关配置，代码如下\n\n```javascript\nmodule.exports = {\n    publicPath: process.env.NODE_ENV === 'production' ? './' : '/',\n    pluginOptions: {\n        electronBuilder: {\n            nodeIntegration: true,\n            builderOptions: {\n                'appId': 'example',\n                'productName': 'example', // 项目名，也是生成的安装文件名，即mzDemo.exe\n                'copyright': 'Marshall Copyright © 2021', // 版权信息\n                'files': [\n                    './**/*'\n                ],\n                'directories': {\n                    'output': './app_dist' // 输出文件路径\n                },\n                'win': { // win相关配置\n                    'icon': './public/favicon.ico', // 图标，当前图标在根目录下，注意这里有两个坑\n                    \"requestedExecutionLevel\": \"requireAdministrator\", //获取管理员权限\n                    'target': [{\n                        'target': 'nsis', // 利用nsis制作安装程序\n                        'arch': [\n                            'x64', // 64位\n                            'ia32'\n                        ]\n                    }]\n                },\n                artifactName: '${productName}_Setup_${version}_${platform}.${ext}',\n                'nsis': {\n                    include: './installer.nsh',//默认安装路径\n                    'oneClick': false, // 是否一键安装\n                    'allowElevation': true, // 允许请求提升。 如果为false，则用户必须使用提升的权限重新启动安装程序。\n                    'allowToChangeInstallationDirectory': true, // 允许修改安装目录\n                    'installerIcon': './favicon.ico', // 安装图标\n                    'uninstallerIcon': './favicon.ico', // 卸载图标\n                    'installerHeaderIcon': './favicon.ico', // 安装时头部图标\n                    'createDesktopShortcut': true, // 创建桌面图标\n                    'createStartMenuShortcut': true, // 创建开始菜单图标\n                    'shortcutName': 'nfuEcampusUtils' // 图标名称(项目名称)\n                }\n            }\n        }\n    }\n}\n```\n\n在上面代码里,`nsis`的配置里出现了一个`include : './installer.nsh'` 这个文件是用来配置默认安装路径的。同样，在根目录创建文件`installer.nsh`，我是这样写的:\n\n```nsis\n!macro preInit\n  SetRegView 64\n  WriteRegExpandStr HKLM \"${INSTALL_REGISTRY_KEY}\" InstallLocation \"C:\\Program Files\\${PRODUCT_NAME}\"\n  WriteRegExpandStr HKCU \"${INSTALL_REGISTRY_KEY}\" InstallLocation \"C:\\Program Files\\${PRODUCT_NAME}\"\n  SetRegView 32\n  WriteRegExpandStr HKLM \"${INSTALL_REGISTRY_KEY}\" InstallLocation \"C:\\Program Files (x86)\\${PRODUCT_NAME}\"\n  WriteRegExpandStr HKCU \"${INSTALL_REGISTRY_KEY}\" InstallLocation \"C:\\Program Files (x86)\\${PRODUCT_NAME}\"\n!macroend\n\n```\n\n#### 5.我想让我的项目能持续迭代更新，并且让使用者也能在使用时收到更新通知\n\n本方法的使用条件是：你开发的是一个私有的 Electron 应用程序，或者你没有在 GitHub Releases 中公开发布。官方给了几种方法[部署更新服务器](https://www.electronjs.org/docs/tutorial/updates#%E9%83%A8%E7%BD%B2%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8)\n\n但我觉得都太麻烦了，想直接将新版放到oss里面，并且速度也更客观，于是我进行查找后，得到了有效的方案。\n\n先修改`vue.config.js`里的`builderOptions`\n\n```javascript\nmodule.exports={\n    ...,\n    pluginOptions:{\n    \telectronBuilder：{\n    \t\t···，\n    \t\tbuilderOptions:{\n    \t\t\t...,\n    \t\t\tpublish:[{provider: 'generic',url:'https://yourdomain.com/app'}],\n                 ...\n\t\t\t}\t\t\n\t\t}\n\t}\n}\n```\n\n安装依赖并且修改`background.js`\n\n```bash\nnpm install electron-updater\n```\n\n```javascript\nconst {autoUpdater} = require('electron-updater')\nasync function createWindow() {\n\tconst win = new BrowserWindow({\n        ...,\n        if (process.env.WEBPACK_DEV_SERVER_URL) {\n        await win.loadURL(process.env.WEBPACK_DEV_SERVER_URL)\n        if (!process.env.IS_TEST) win.webContents.openDevTools()\n    }else{\n        createProtocol('app')\n        win.loadURL('app://./index.html')\n        autoUpdater.checkForUpdates()\n    }\n    })\n}\n```\n\n```javascript\n// ======================================================================\n// 更新模块\n// ======================================================================\nif (!process.env.WEBPACK_DEV_SERVER_URL) {\n  autoUpdater.autoDownload = false\n\n  // autoUpdater.signals.updateDownloaded(() => {})\n  autoUpdater.on('error', (error) => {\n    log.warn('检查更新失败: ' + error == null ? 'unknown' : (error.stack || error).toString())\n    dialog.showErrorBox('Error: ', error == null ? 'unknown' : (error.stack || error).toString())\n  })\n\n  autoUpdater.on('update-available', (info) => {\n    // var appInfo = {\n    //   info: info.version,\n    //   files: info.files,\n    //   path: info.path,\n    //   sha512: info.sha512,\n    //   releaseDate: info.releaseDate\n    // }\n    console.log(info)\n    dialog.showMessageBox({\n      type: 'info',\n      title: '更新提示',\n      message: '软件需要更新，您是否立即更新？',\n      buttons: ['推迟', '立即更新']\n    }).then((res) => {\n      log.warn('index:' + res.response)\n      if (res.response === 1) {\n        log.warn('选择升级')\n        autoUpdater.downloadUpdate()\n      } else {\n        log.warn('选择不升级:')\n      }\n    })\n  })\n\n  // 检查更新时触发\n  autoUpdater.on('update-available', (res) => {\n    log.warn('检查更新时触发')\n    log.warn(res)\n    // dialog.showMessageBox({\n    //   title: '检查更新',\n    //   message: '正在检查更新'\n    // })\n  })\n\n  // 没有可用更新\n  autoUpdater.on('update-not-available', () => {\n    log.warn('没有可用更新')\n    // dialog.showMessageBox({\n    //   title: '已是最新版',\n    //   message: '当前版本是最新版本。'\n    // })\n  })\n\n  // 安装更新\n  autoUpdater.on('update-downloaded', (res) => {\n    log.warn(res)\n    // console.log(res)\n    log.warn('下载完毕！提示安装更新')\n    dialog.showMessageBox({\n      title: '升级提示！',\n      message: '已自动升级为最新版，请重启应用！'\n    }, () => {\n      log.warn('确认安装')\n      setImmediate(() => autoUpdater.quitAndInstall(true, true))\n    })\n  })\n\n  //下载进度\n  autoUpdater.on('download-progress', (event) => {\n    log.warn(event.percent)\n  })\n}\n```\n\n用build打包第一个版本(1.0.0)\n\n打包后 `dist_electron` 目录中有 `*.blockmap` 格式的文件;\n\n将文件复制到 ‘更新服务器’ (http://yourdomain.com/app/) 目录下;\n\n然后再打包一个升级版(1.1.0)\n\n打包后 `dist_electron` 有如下三个文件：\n\n- `新版本安装包.exe`\n- `新版本_v1.1.0.blockmap`，\n- `latest.yml`\n\n将上面三个文件复制到 ‘更新服务器’ (http://yourdomain.com/app/) 目录下;\n\n以后每次有更新就复制这三个文件至 ‘更新服务器’，保留旧版本的 `*.blockmap` 文件，旧版本的应用的执行文件(`.exe`)可以删除。\n\n","source":"_posts/vueElectron.md","raw":"---\ntitle: Vue和Electron的所有坑总结\ndate: 2021-6-10 00:00:00\nauthor: Marshall\nimg: https://unsplash.it/1920/1080?random4\ntop: false\ncover: true\ntoc: true\nmathjax: false\nsummary: 将Vue与Electron相结合,快速构建桌面级应用\ncategories: Vue\nreprintPolicy: cc_by\ntags:\n- Electron\n- Vue\n---\n\n\n# Electron\n[Electron](https://www.electronjs.org/) 相当于一个浏览器的外壳，可以把网页程序嵌入到壳里面，可以运行在桌面上的一个程序，可以把网页打包成一个在桌面运行的程序，通俗来说就是软件，比如像QQ、优酷、网易音乐等等。功能的强大超出你的想象，可以构建跨平台桌面程序，本身支持node.js，可以使用node.js的一些模块。\n\n## 一、项目搭建\n### 1. 安装electron\n```bash\nvue add electron-builder\n```\n\n> 安装完成后，查看项目的目录结构，会自动在src目录下生成`background.js`并且修改`package.json`\n\n### 2.运行\n\n```bash\nnpm run electron:serve\n```\n\n在进行此步骤时，有很大的几率会报错`Error: post install error, please remove node_modules before retry!` ，此时需要将node_modules全部删掉，然后重新执行npm install。又有很大的几率会报错，内容大致是提示叫你重新安装electron，此时只需要将node_modules下的electron文件夹删除，然后执行npm install electron就可以了。在安装electron时的相关npm包时，官方推荐使用yarn，但是因为个人习惯原因，使用npm来进行安装。\n\n### 3.打包\n\n```bash\nnpm run electron:build\n```\n\n上述三个步骤看上去十分简单，但是实际进行操作时，出现了一堆错误，下面的内容就是总结所有踩过的坑。\n\n## 二、总结遇到的坑\n\n### 1. Vuex\n\n#### 1.Vuex的安装\n\n在开发时，我当时直接使用了`npm install vuex`来使用vuex，一切问题都没有，非常的正常，但是build后再打开，发现vuex失效了，后面经过查找才发现，在electron使用vuex时，应该使用下面的命令安装。\n\n```bash\nnpm install vuex-electron --save\n```\n\n#### 2.Vuex的配置\n\n第一步，先在`src`目录下新建一个文件夹`store`，然后在这个文件夹内创建文件`index.js`\n\n根据官方的样例[Vuex Electron](https://github.com/vue-electron/vuex-electron-example)，`index.js`的内容如下\n\n```javascript\nimport Vue from \"vue\"\nimport Vuex from \"vuex\"\n\nimport { createPersistedState, createSharedMutations } from \"vuex-electron\"\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    count: 0\n  },\n\n  actions: {\n    increment(store) {\n      store.commit(\"increment\")\n    },\n    decrement(store) {\n      store.commit(\"decrement\")\n    }\n  },\n\n  mutations: {\n    increment(state) {\n      state.count++\n    },\n    decrement(state) {\n      state.count--\n    }\n  },\n\n  plugins: [createPersistedState(), createSharedMutations()],\n  strict: process.env.NODE_ENV !== \"production\"\n})\n```\n\n但是这会引发一个问题，如果你的项目里的代码全都是`this.$sotre.commit`，会发现执行相关代码时根本没有反应，并且控制台会报错`Please, don't use direct commit's, use dispatch instead of this.`，这是因为在import时，将`createSharedMutations`也一并引入了。\n\n如果你用不上多进程共享数据的话，可以选择不导入`createSharedMutations`，注释或者删除相关代码，或者使用dispatch来进行相关操作。\n\n### 2. 构建遇到的问题\n\n#### 1.在`.vue`文件中无法使用electronApi的问题\n\n在`src/main.js`添加下面两行代码\n\n```javascript\nimport electron from 'electron'\nVue.prototype.$electron = electron;\n```\n\n`vue.config.js`配置防止浏览器报错`'__dirname' is not defind`\n\n```javascript\nmodule.exports = {\n    pluginOptions: {\n        electronBuilder: {\n            nodeIntegration: true\n        }\n    }\n}\n```\n\n#### 2.在`.vue`文件中使用`this.$electron.remote`字段为`undefined`\n\n需要“显”式的申明 enableRemoteModule: true\n在项目目录`src`下的`background.js`中修改\n\n```javascript\nconst win = new BrowserWindow({\n        width: 400,\n        height: 400,\n        frame: false,\n        resizable: false,\n        webPreferences: {\n            // Use pluginOptions.nodeIntegration, leave this alone\n            // See nklayman.github.io/vue-cli-plugin-electron-builder/guide/security.html#node-integration for more info\n            nodeIntegration: process.env.ELECTRON_NODE_INTEGRATION,\n            enableRemoteModule: process.env.ELECTRON_NODE_INTEGRATION\n        }\n    });\n```\n\n在`vue.config.js`中添加\n\n```javascript\nmodule.exports = {\n    pluginOptions: {\n        electronBuilder: {\n            nodeIntegration: true,\n            enableRemoteModule: true\n        }\n    }\n}\n```\n\n\n\n\n#### 3.构建好的项目想让别人也使用，因此想取消顶部工具栏\n\n在`background.js`里，修改最上方的代码，将Menu也引入进来\n\n```javascript\nimport {app, protocol, BrowserWindow, Menu, dialog} from 'electron'\n```\n\n然后修改 `createWindow()`\n\n```javascript\n  const win = new BrowserWindow({\n    width: 1294,\n    height: 800,\n    webPreferences: {\n\n      // Use pluginOptions.nodeIntegration, leave this alone\n      // See nklayman.github.io/vue-cli-plugin-electron-builder/guide/security.html#node-integration for more info\n      nodeIntegration: process.env.ELECTRON_NODE_INTEGRATION,\n      contextIsolation: !process.env.ELECTRON_NODE_INTEGRATION,\n      enableRemoteModule: process.env.ELECTRON_NODE_INTEGRATION\n    }\n  })\n  Menu.setApplicationMenu(null)\n```\n\n#### 4.需要自定义build出来的exe等安装程序\n\n在根目录下创建文件`vue.config.js`，然后进行相关配置，代码如下\n\n```javascript\nmodule.exports = {\n    publicPath: process.env.NODE_ENV === 'production' ? './' : '/',\n    pluginOptions: {\n        electronBuilder: {\n            nodeIntegration: true,\n            builderOptions: {\n                'appId': 'example',\n                'productName': 'example', // 项目名，也是生成的安装文件名，即mzDemo.exe\n                'copyright': 'Marshall Copyright © 2021', // 版权信息\n                'files': [\n                    './**/*'\n                ],\n                'directories': {\n                    'output': './app_dist' // 输出文件路径\n                },\n                'win': { // win相关配置\n                    'icon': './public/favicon.ico', // 图标，当前图标在根目录下，注意这里有两个坑\n                    \"requestedExecutionLevel\": \"requireAdministrator\", //获取管理员权限\n                    'target': [{\n                        'target': 'nsis', // 利用nsis制作安装程序\n                        'arch': [\n                            'x64', // 64位\n                            'ia32'\n                        ]\n                    }]\n                },\n                artifactName: '${productName}_Setup_${version}_${platform}.${ext}',\n                'nsis': {\n                    include: './installer.nsh',//默认安装路径\n                    'oneClick': false, // 是否一键安装\n                    'allowElevation': true, // 允许请求提升。 如果为false，则用户必须使用提升的权限重新启动安装程序。\n                    'allowToChangeInstallationDirectory': true, // 允许修改安装目录\n                    'installerIcon': './favicon.ico', // 安装图标\n                    'uninstallerIcon': './favicon.ico', // 卸载图标\n                    'installerHeaderIcon': './favicon.ico', // 安装时头部图标\n                    'createDesktopShortcut': true, // 创建桌面图标\n                    'createStartMenuShortcut': true, // 创建开始菜单图标\n                    'shortcutName': 'nfuEcampusUtils' // 图标名称(项目名称)\n                }\n            }\n        }\n    }\n}\n```\n\n在上面代码里,`nsis`的配置里出现了一个`include : './installer.nsh'` 这个文件是用来配置默认安装路径的。同样，在根目录创建文件`installer.nsh`，我是这样写的:\n\n```nsis\n!macro preInit\n  SetRegView 64\n  WriteRegExpandStr HKLM \"${INSTALL_REGISTRY_KEY}\" InstallLocation \"C:\\Program Files\\${PRODUCT_NAME}\"\n  WriteRegExpandStr HKCU \"${INSTALL_REGISTRY_KEY}\" InstallLocation \"C:\\Program Files\\${PRODUCT_NAME}\"\n  SetRegView 32\n  WriteRegExpandStr HKLM \"${INSTALL_REGISTRY_KEY}\" InstallLocation \"C:\\Program Files (x86)\\${PRODUCT_NAME}\"\n  WriteRegExpandStr HKCU \"${INSTALL_REGISTRY_KEY}\" InstallLocation \"C:\\Program Files (x86)\\${PRODUCT_NAME}\"\n!macroend\n\n```\n\n#### 5.我想让我的项目能持续迭代更新，并且让使用者也能在使用时收到更新通知\n\n本方法的使用条件是：你开发的是一个私有的 Electron 应用程序，或者你没有在 GitHub Releases 中公开发布。官方给了几种方法[部署更新服务器](https://www.electronjs.org/docs/tutorial/updates#%E9%83%A8%E7%BD%B2%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8)\n\n但我觉得都太麻烦了，想直接将新版放到oss里面，并且速度也更客观，于是我进行查找后，得到了有效的方案。\n\n先修改`vue.config.js`里的`builderOptions`\n\n```javascript\nmodule.exports={\n    ...,\n    pluginOptions:{\n    \telectronBuilder：{\n    \t\t···，\n    \t\tbuilderOptions:{\n    \t\t\t...,\n    \t\t\tpublish:[{provider: 'generic',url:'https://yourdomain.com/app'}],\n                 ...\n\t\t\t}\t\t\n\t\t}\n\t}\n}\n```\n\n安装依赖并且修改`background.js`\n\n```bash\nnpm install electron-updater\n```\n\n```javascript\nconst {autoUpdater} = require('electron-updater')\nasync function createWindow() {\n\tconst win = new BrowserWindow({\n        ...,\n        if (process.env.WEBPACK_DEV_SERVER_URL) {\n        await win.loadURL(process.env.WEBPACK_DEV_SERVER_URL)\n        if (!process.env.IS_TEST) win.webContents.openDevTools()\n    }else{\n        createProtocol('app')\n        win.loadURL('app://./index.html')\n        autoUpdater.checkForUpdates()\n    }\n    })\n}\n```\n\n```javascript\n// ======================================================================\n// 更新模块\n// ======================================================================\nif (!process.env.WEBPACK_DEV_SERVER_URL) {\n  autoUpdater.autoDownload = false\n\n  // autoUpdater.signals.updateDownloaded(() => {})\n  autoUpdater.on('error', (error) => {\n    log.warn('检查更新失败: ' + error == null ? 'unknown' : (error.stack || error).toString())\n    dialog.showErrorBox('Error: ', error == null ? 'unknown' : (error.stack || error).toString())\n  })\n\n  autoUpdater.on('update-available', (info) => {\n    // var appInfo = {\n    //   info: info.version,\n    //   files: info.files,\n    //   path: info.path,\n    //   sha512: info.sha512,\n    //   releaseDate: info.releaseDate\n    // }\n    console.log(info)\n    dialog.showMessageBox({\n      type: 'info',\n      title: '更新提示',\n      message: '软件需要更新，您是否立即更新？',\n      buttons: ['推迟', '立即更新']\n    }).then((res) => {\n      log.warn('index:' + res.response)\n      if (res.response === 1) {\n        log.warn('选择升级')\n        autoUpdater.downloadUpdate()\n      } else {\n        log.warn('选择不升级:')\n      }\n    })\n  })\n\n  // 检查更新时触发\n  autoUpdater.on('update-available', (res) => {\n    log.warn('检查更新时触发')\n    log.warn(res)\n    // dialog.showMessageBox({\n    //   title: '检查更新',\n    //   message: '正在检查更新'\n    // })\n  })\n\n  // 没有可用更新\n  autoUpdater.on('update-not-available', () => {\n    log.warn('没有可用更新')\n    // dialog.showMessageBox({\n    //   title: '已是最新版',\n    //   message: '当前版本是最新版本。'\n    // })\n  })\n\n  // 安装更新\n  autoUpdater.on('update-downloaded', (res) => {\n    log.warn(res)\n    // console.log(res)\n    log.warn('下载完毕！提示安装更新')\n    dialog.showMessageBox({\n      title: '升级提示！',\n      message: '已自动升级为最新版，请重启应用！'\n    }, () => {\n      log.warn('确认安装')\n      setImmediate(() => autoUpdater.quitAndInstall(true, true))\n    })\n  })\n\n  //下载进度\n  autoUpdater.on('download-progress', (event) => {\n    log.warn(event.percent)\n  })\n}\n```\n\n用build打包第一个版本(1.0.0)\n\n打包后 `dist_electron` 目录中有 `*.blockmap` 格式的文件;\n\n将文件复制到 ‘更新服务器’ (http://yourdomain.com/app/) 目录下;\n\n然后再打包一个升级版(1.1.0)\n\n打包后 `dist_electron` 有如下三个文件：\n\n- `新版本安装包.exe`\n- `新版本_v1.1.0.blockmap`，\n- `latest.yml`\n\n将上面三个文件复制到 ‘更新服务器’ (http://yourdomain.com/app/) 目录下;\n\n以后每次有更新就复制这三个文件至 ‘更新服务器’，保留旧版本的 `*.blockmap` 文件，旧版本的应用的执行文件(`.exe`)可以删除。\n\n","slug":"vueElectron","published":1,"updated":"2022-05-09T17:53:27.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4brvxsm000lkg7e9jw5fmal","content":"<h1 id=\"Electron\"><a href=\"#Electron\" class=\"headerlink\" title=\"Electron\"></a>Electron</h1><p><a href=\"https://www.electronjs.org/\">Electron</a> 相当于一个浏览器的外壳，可以把网页程序嵌入到壳里面，可以运行在桌面上的一个程序，可以把网页打包成一个在桌面运行的程序，通俗来说就是软件，比如像QQ、优酷、网易音乐等等。功能的强大超出你的想象，可以构建跨平台桌面程序，本身支持node.js，可以使用node.js的一些模块。</p>\n<h2 id=\"一、项目搭建\"><a href=\"#一、项目搭建\" class=\"headerlink\" title=\"一、项目搭建\"></a>一、项目搭建</h2><h3 id=\"1-安装electron\"><a href=\"#1-安装electron\" class=\"headerlink\" title=\"1. 安装electron\"></a>1. 安装electron</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vue <span class=\"token function\">add</span> electron-builder<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>安装完成后，查看项目的目录结构，会自动在src目录下生成<code>background.js</code>并且修改<code>package.json</code></p>\n</blockquote>\n<h3 id=\"2-运行\"><a href=\"#2-运行\" class=\"headerlink\" title=\"2.运行\"></a>2.运行</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run electron:serve<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在进行此步骤时，有很大的几率会报错<code>Error: post install error, please remove node_modules before retry!</code> ，此时需要将node_modules全部删掉，然后重新执行npm install。又有很大的几率会报错，内容大致是提示叫你重新安装electron，此时只需要将node_modules下的electron文件夹删除，然后执行npm install electron就可以了。在安装electron时的相关npm包时，官方推荐使用yarn，但是因为个人习惯原因，使用npm来进行安装。</p>\n<h3 id=\"3-打包\"><a href=\"#3-打包\" class=\"headerlink\" title=\"3.打包\"></a>3.打包</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run electron:build<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>上述三个步骤看上去十分简单，但是实际进行操作时，出现了一堆错误，下面的内容就是总结所有踩过的坑。</p>\n<h2 id=\"二、总结遇到的坑\"><a href=\"#二、总结遇到的坑\" class=\"headerlink\" title=\"二、总结遇到的坑\"></a>二、总结遇到的坑</h2><h3 id=\"1-Vuex\"><a href=\"#1-Vuex\" class=\"headerlink\" title=\"1. Vuex\"></a>1. Vuex</h3><h4 id=\"1-Vuex的安装\"><a href=\"#1-Vuex的安装\" class=\"headerlink\" title=\"1.Vuex的安装\"></a>1.Vuex的安装</h4><p>在开发时，我当时直接使用了<code>npm install vuex</code>来使用vuex，一切问题都没有，非常的正常，但是build后再打开，发现vuex失效了，后面经过查找才发现，在electron使用vuex时，应该使用下面的命令安装。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> vuex-electron --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"2-Vuex的配置\"><a href=\"#2-Vuex的配置\" class=\"headerlink\" title=\"2.Vuex的配置\"></a>2.Vuex的配置</h4><p>第一步，先在<code>src</code>目录下新建一个文件夹<code>store</code>，然后在这个文件夹内创建文件<code>index.js</code></p>\n<p>根据官方的样例<a href=\"https://github.com/vue-electron/vuex-electron-example\">Vuex Electron</a>，<code>index.js</code>的内容如下</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span>\n<span class=\"token keyword\">import</span> Vuex <span class=\"token keyword\">from</span> <span class=\"token string\">\"vuex\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createPersistedState<span class=\"token punctuation\">,</span> createSharedMutations <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vuex-electron\"</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuex<span class=\"token punctuation\">.</span>Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  state<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    count<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n  actions<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">store</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"increment\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">decrement</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">store</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"decrement\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n  mutations<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      state<span class=\"token punctuation\">.</span>count<span class=\"token operator\">++</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">decrement</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      state<span class=\"token punctuation\">.</span>count<span class=\"token operator\">--</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">createPersistedState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">createSharedMutations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  strict<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">!==</span> <span class=\"token string\">\"production\"</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>但是这会引发一个问题，如果你的项目里的代码全都是<code>this.$sotre.commit</code>，会发现执行相关代码时根本没有反应，并且控制台会报错<code>Please, don&#39;t use direct commit&#39;s, use dispatch instead of this.</code>，这是因为在import时，将<code>createSharedMutations</code>也一并引入了。</p>\n<p>如果你用不上多进程共享数据的话，可以选择不导入<code>createSharedMutations</code>，注释或者删除相关代码，或者使用dispatch来进行相关操作。</p>\n<h3 id=\"2-构建遇到的问题\"><a href=\"#2-构建遇到的问题\" class=\"headerlink\" title=\"2. 构建遇到的问题\"></a>2. 构建遇到的问题</h3><h4 id=\"1-在-vue文件中无法使用electronApi的问题\"><a href=\"#1-在-vue文件中无法使用electronApi的问题\" class=\"headerlink\" title=\"1.在.vue文件中无法使用electronApi的问题\"></a>1.在<code>.vue</code>文件中无法使用electronApi的问题</h4><p>在<code>src/main.js</code>添加下面两行代码</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> electron <span class=\"token keyword\">from</span> <span class=\"token string\">'electron'</span>\n<span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$electron <span class=\"token operator\">=</span> electron<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><code>vue.config.js</code>配置防止浏览器报错<code>&#39;__dirname&#39; is not defind</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    pluginOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        electronBuilder<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            nodeIntegration<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-在-vue文件中使用this-electron-remote字段为undefined\"><a href=\"#2-在-vue文件中使用this-electron-remote字段为undefined\" class=\"headerlink\" title=\"2.在.vue文件中使用this.$electron.remote字段为undefined\"></a>2.在<code>.vue</code>文件中使用<code>this.$electron.remote</code>字段为<code>undefined</code></h4><p>需要“显”式的申明 enableRemoteModule: true<br>在项目目录<code>src</code>下的<code>background.js</code>中修改</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> win <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BrowserWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        width<span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>\n        height<span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>\n        frame<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        resizable<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        webPreferences<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// Use pluginOptions.nodeIntegration, leave this alone</span>\n            <span class=\"token comment\">// See nklayman.github.io/vue-cli-plugin-electron-builder/guide/security.html#node-integration for more info</span>\n            nodeIntegration<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">ELECTRON_NODE_INTEGRATION</span><span class=\"token punctuation\">,</span>\n            enableRemoteModule<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">ELECTRON_NODE_INTEGRATION</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在<code>vue.config.js</code>中添加</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    pluginOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        electronBuilder<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            nodeIntegration<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            enableRemoteModule<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n<h4 id=\"3-构建好的项目想让别人也使用，因此想取消顶部工具栏\"><a href=\"#3-构建好的项目想让别人也使用，因此想取消顶部工具栏\" class=\"headerlink\" title=\"3.构建好的项目想让别人也使用，因此想取消顶部工具栏\"></a>3.构建好的项目想让别人也使用，因此想取消顶部工具栏</h4><p>在<code>background.js</code>里，修改最上方的代码，将Menu也引入进来</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>app<span class=\"token punctuation\">,</span> protocol<span class=\"token punctuation\">,</span> BrowserWindow<span class=\"token punctuation\">,</span> Menu<span class=\"token punctuation\">,</span> dialog<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'electron'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后修改 <code>createWindow()</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> win <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BrowserWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  width<span class=\"token operator\">:</span> <span class=\"token number\">1294</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token operator\">:</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span>\n  webPreferences<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">// Use pluginOptions.nodeIntegration, leave this alone</span>\n    <span class=\"token comment\">// See nklayman.github.io/vue-cli-plugin-electron-builder/guide/security.html#node-integration for more info</span>\n    nodeIntegration<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">ELECTRON_NODE_INTEGRATION</span><span class=\"token punctuation\">,</span>\n    contextIsolation<span class=\"token operator\">:</span> <span class=\"token operator\">!</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">ELECTRON_NODE_INTEGRATION</span><span class=\"token punctuation\">,</span>\n    enableRemoteModule<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">ELECTRON_NODE_INTEGRATION</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\nMenu<span class=\"token punctuation\">.</span><span class=\"token function\">setApplicationMenu</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"4-需要自定义build出来的exe等安装程序\"><a href=\"#4-需要自定义build出来的exe等安装程序\" class=\"headerlink\" title=\"4.需要自定义build出来的exe等安装程序\"></a>4.需要自定义build出来的exe等安装程序</h4><p>在根目录下创建文件<code>vue.config.js</code>，然后进行相关配置，代码如下</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    publicPath<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'./'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n    pluginOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        electronBuilder<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            nodeIntegration<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            builderOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token string\">'appId'</span><span class=\"token operator\">:</span> <span class=\"token string\">'example'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'productName'</span><span class=\"token operator\">:</span> <span class=\"token string\">'example'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 项目名，也是生成的安装文件名，即mzDemo.exe</span>\n                <span class=\"token string\">'copyright'</span><span class=\"token operator\">:</span> <span class=\"token string\">'Marshall Copyright © 2021'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 版权信息</span>\n                <span class=\"token string\">'files'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                    <span class=\"token string\">'./**/*'</span>\n                <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'directories'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token string\">'output'</span><span class=\"token operator\">:</span> <span class=\"token string\">'./app_dist'</span> <span class=\"token comment\">// 输出文件路径</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'win'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// win相关配置</span>\n                    <span class=\"token string\">'icon'</span><span class=\"token operator\">:</span> <span class=\"token string\">'./public/favicon.ico'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 图标，当前图标在根目录下，注意这里有两个坑</span>\n                    <span class=\"token string\">\"requestedExecutionLevel\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"requireAdministrator\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//获取管理员权限</span>\n                    <span class=\"token string\">'target'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token string\">'target'</span><span class=\"token operator\">:</span> <span class=\"token string\">'nsis'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 利用nsis制作安装程序</span>\n                        <span class=\"token string\">'arch'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                            <span class=\"token string\">'x64'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 64位</span>\n                            <span class=\"token string\">'ia32'</span>\n                        <span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n                artifactName<span class=\"token operator\">:</span> <span class=\"token string\">'$&#123;productName&#125;_Setup_$&#123;version&#125;_$&#123;platform&#125;.$&#123;ext&#125;'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'nsis'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                    include<span class=\"token operator\">:</span> <span class=\"token string\">'./installer.nsh'</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//默认安装路径</span>\n                    <span class=\"token string\">'oneClick'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否一键安装</span>\n                    <span class=\"token string\">'allowElevation'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 允许请求提升。 如果为false，则用户必须使用提升的权限重新启动安装程序。</span>\n                    <span class=\"token string\">'allowToChangeInstallationDirectory'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 允许修改安装目录</span>\n                    <span class=\"token string\">'installerIcon'</span><span class=\"token operator\">:</span> <span class=\"token string\">'./favicon.ico'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 安装图标</span>\n                    <span class=\"token string\">'uninstallerIcon'</span><span class=\"token operator\">:</span> <span class=\"token string\">'./favicon.ico'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 卸载图标</span>\n                    <span class=\"token string\">'installerHeaderIcon'</span><span class=\"token operator\">:</span> <span class=\"token string\">'./favicon.ico'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 安装时头部图标</span>\n                    <span class=\"token string\">'createDesktopShortcut'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 创建桌面图标</span>\n                    <span class=\"token string\">'createStartMenuShortcut'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 创建开始菜单图标</span>\n                    <span class=\"token string\">'shortcutName'</span><span class=\"token operator\">:</span> <span class=\"token string\">'nfuEcampusUtils'</span> <span class=\"token comment\">// 图标名称(项目名称)</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在上面代码里,<code>nsis</code>的配置里出现了一个<code>include : &#39;./installer.nsh&#39;</code> 这个文件是用来配置默认安装路径的。同样，在根目录创建文件<code>installer.nsh</code>，我是这样写的:</p>\n<pre class=\"line-numbers language-nsis\" data-language=\"nsis\"><code class=\"language-nsis\"><span class=\"token important\">!macro</span> preInit\n  <span class=\"token keyword\">SetRegView</span> <span class=\"token number\">64</span>\n  <span class=\"token keyword\">WriteRegExpandStr</span> <span class=\"token property\">HKLM</span> <span class=\"token string\">\"$&#123;INSTALL_REGISTRY_KEY&#125;\"</span> InstallLocation <span class=\"token string\">\"C:\\Program Files\\$&#123;PRODUCT_NAME&#125;\"</span>\n  <span class=\"token keyword\">WriteRegExpandStr</span> <span class=\"token property\">HKCU</span> <span class=\"token string\">\"$&#123;INSTALL_REGISTRY_KEY&#125;\"</span> InstallLocation <span class=\"token string\">\"C:\\Program Files\\$&#123;PRODUCT_NAME&#125;\"</span>\n  <span class=\"token keyword\">SetRegView</span> <span class=\"token number\">32</span>\n  <span class=\"token keyword\">WriteRegExpandStr</span> <span class=\"token property\">HKLM</span> <span class=\"token string\">\"$&#123;INSTALL_REGISTRY_KEY&#125;\"</span> InstallLocation <span class=\"token string\">\"C:\\Program Files (x86)\\$&#123;PRODUCT_NAME&#125;\"</span>\n  <span class=\"token keyword\">WriteRegExpandStr</span> <span class=\"token property\">HKCU</span> <span class=\"token string\">\"$&#123;INSTALL_REGISTRY_KEY&#125;\"</span> InstallLocation <span class=\"token string\">\"C:\\Program Files (x86)\\$&#123;PRODUCT_NAME&#125;\"</span>\n<span class=\"token important\">!macroend</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"5-我想让我的项目能持续迭代更新，并且让使用者也能在使用时收到更新通知\"><a href=\"#5-我想让我的项目能持续迭代更新，并且让使用者也能在使用时收到更新通知\" class=\"headerlink\" title=\"5.我想让我的项目能持续迭代更新，并且让使用者也能在使用时收到更新通知\"></a>5.我想让我的项目能持续迭代更新，并且让使用者也能在使用时收到更新通知</h4><p>本方法的使用条件是：你开发的是一个私有的 Electron 应用程序，或者你没有在 GitHub Releases 中公开发布。官方给了几种方法<a href=\"https://www.electronjs.org/docs/tutorial/updates#%E9%83%A8%E7%BD%B2%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8\">部署更新服务器</a></p>\n<p>但我觉得都太麻烦了，想直接将新版放到oss里面，并且速度也更客观，于是我进行查找后，得到了有效的方案。</p>\n<p>先修改<code>vue.config.js</code>里的<code>builderOptions</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n    pluginOptions<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n    \telectronBuilder：<span class=\"token punctuation\">&#123;</span>\n    \t\t···，\n    \t\tbuilderOptions<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n    \t\t\t<span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n    \t\t\tpublish<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>provider<span class=\"token operator\">:</span> <span class=\"token string\">'generic'</span><span class=\"token punctuation\">,</span>url<span class=\"token operator\">:</span><span class=\"token string\">'https://yourdomain.com/app'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                 <span class=\"token operator\">...</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\t\t\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>安装依赖并且修改<code>background.js</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> electron-updater<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>autoUpdater<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'electron-updater'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">createWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">const</span> win <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BrowserWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">WEBPACK_DEV_SERVER_URL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">await</span> win<span class=\"token punctuation\">.</span><span class=\"token function\">loadURL</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">WEBPACK_DEV_SERVER_URL</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">IS_TEST</span><span class=\"token punctuation\">)</span> win<span class=\"token punctuation\">.</span>webContents<span class=\"token punctuation\">.</span><span class=\"token function\">openDevTools</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">createProtocol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n        win<span class=\"token punctuation\">.</span><span class=\"token function\">loadURL</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app://./index.html'</span><span class=\"token punctuation\">)</span>\n        autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">checkForUpdates</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ======================================================================</span>\n<span class=\"token comment\">// 更新模块</span>\n<span class=\"token comment\">// ======================================================================</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">WEBPACK_DEV_SERVER_URL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  autoUpdater<span class=\"token punctuation\">.</span>autoDownload <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\n  <span class=\"token comment\">// autoUpdater.signals.updateDownloaded(() => &#123;&#125;)</span>\n  autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'检查更新失败: '</span> <span class=\"token operator\">+</span> error <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token string\">'unknown'</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>stack <span class=\"token operator\">||</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    dialog<span class=\"token punctuation\">.</span><span class=\"token function\">showErrorBox</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error: '</span><span class=\"token punctuation\">,</span> error <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token string\">'unknown'</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>stack <span class=\"token operator\">||</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'update-available'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">info</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// var appInfo = &#123;</span>\n    <span class=\"token comment\">//   info: info.version,</span>\n    <span class=\"token comment\">//   files: info.files,</span>\n    <span class=\"token comment\">//   path: info.path,</span>\n    <span class=\"token comment\">//   sha512: info.sha512,</span>\n    <span class=\"token comment\">//   releaseDate: info.releaseDate</span>\n    <span class=\"token comment\">// &#125;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span>\n    dialog<span class=\"token punctuation\">.</span><span class=\"token function\">showMessageBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'info'</span><span class=\"token punctuation\">,</span>\n      title<span class=\"token operator\">:</span> <span class=\"token string\">'更新提示'</span><span class=\"token punctuation\">,</span>\n      message<span class=\"token operator\">:</span> <span class=\"token string\">'软件需要更新，您是否立即更新？'</span><span class=\"token punctuation\">,</span>\n      buttons<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'推迟'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'立即更新'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'index:'</span> <span class=\"token operator\">+</span> res<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>response <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'选择升级'</span><span class=\"token punctuation\">)</span>\n        autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">downloadUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'选择不升级:'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 检查更新时触发</span>\n  autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'update-available'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'检查更新时触发'</span><span class=\"token punctuation\">)</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// dialog.showMessageBox(&#123;</span>\n    <span class=\"token comment\">//   title: '检查更新',</span>\n    <span class=\"token comment\">//   message: '正在检查更新'</span>\n    <span class=\"token comment\">// &#125;)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 没有可用更新</span>\n  autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'update-not-available'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'没有可用更新'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// dialog.showMessageBox(&#123;</span>\n    <span class=\"token comment\">//   title: '已是最新版',</span>\n    <span class=\"token comment\">//   message: '当前版本是最新版本。'</span>\n    <span class=\"token comment\">// &#125;)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 安装更新</span>\n  autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'update-downloaded'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// console.log(res)</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'下载完毕！提示安装更新'</span><span class=\"token punctuation\">)</span>\n    dialog<span class=\"token punctuation\">.</span><span class=\"token function\">showMessageBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      title<span class=\"token operator\">:</span> <span class=\"token string\">'升级提示！'</span><span class=\"token punctuation\">,</span>\n      message<span class=\"token operator\">:</span> <span class=\"token string\">'已自动升级为最新版，请重启应用！'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'确认安装'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">setImmediate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">quitAndInstall</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">//下载进度</span>\n  autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'download-progress'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>percent<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>用build打包第一个版本(1.0.0)</p>\n<p>打包后 <code>dist_electron</code> 目录中有 <code>*.blockmap</code> 格式的文件;</p>\n<p>将文件复制到 ‘更新服务器’ (<a href=\"http://yourdomain.com/app/\">http://yourdomain.com/app/</a>) 目录下;</p>\n<p>然后再打包一个升级版(1.1.0)</p>\n<p>打包后 <code>dist_electron</code> 有如下三个文件：</p>\n<ul>\n<li><code>新版本安装包.exe</code></li>\n<li><code>新版本_v1.1.0.blockmap</code>，</li>\n<li><code>latest.yml</code></li>\n</ul>\n<p>将上面三个文件复制到 ‘更新服务器’ (<a href=\"http://yourdomain.com/app/\">http://yourdomain.com/app/</a>) 目录下;</p>\n<p>以后每次有更新就复制这三个文件至 ‘更新服务器’，保留旧版本的 <code>*.blockmap</code> 文件，旧版本的应用的执行文件(<code>.exe</code>)可以删除。</p>\n","site":{"data":{"friends":[{"avatar":"https://www.naiquoy.com/imgs/twain.jpeg","name":"Twain","introduction":"永远滴神","url":"https://blog.2333.ink/","title":"前去膜拜"},{"avatar":"https://noechou.cn/wp-content/uploads/2021/01/Cache_-6619600f913cdc0c..jpg","name":"第七纵队","introduction":"里歪是个戆卵","url":"https://noechou.cn/","title":"前去学习"},{"avatar":"https://www.scery.com/images/avatar.png","name":"Anthony","introduction":"As you look around","url":"https://www.scery.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1587892058-wechat_pic_20200406225459.jpg","name":"Taoidle","introduction":"秋深し 隣はなにも しない人","url":"https://www.taoidle.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1588039248-photo_2019-02-14_18-47-31.jpg","name":"johnpoint","introduction":"折腾是第一生产力（不是","url":"https://blog.lvcshu.com/","title":"前去学习"},{"avatar":"https://img.imgdb.cn/item/603750c35f4313ce25f92a35.jpg","name":"SolitudeAlma","introduction":"都懂一点，不是很懂的小捞仔。","url":"https://blog.yt1209.com/","title":"前去学习"},{"avatar":"https://jniantic.cn/logo.jpg","name":"经年思维","introduction":"有一份光，发一份热","url":"https://jniantic.cn","title":"前去学习"}]}},"excerpt":"","more":"<h1 id=\"Electron\"><a href=\"#Electron\" class=\"headerlink\" title=\"Electron\"></a>Electron</h1><p><a href=\"https://www.electronjs.org/\">Electron</a> 相当于一个浏览器的外壳，可以把网页程序嵌入到壳里面，可以运行在桌面上的一个程序，可以把网页打包成一个在桌面运行的程序，通俗来说就是软件，比如像QQ、优酷、网易音乐等等。功能的强大超出你的想象，可以构建跨平台桌面程序，本身支持node.js，可以使用node.js的一些模块。</p>\n<h2 id=\"一、项目搭建\"><a href=\"#一、项目搭建\" class=\"headerlink\" title=\"一、项目搭建\"></a>一、项目搭建</h2><h3 id=\"1-安装electron\"><a href=\"#1-安装electron\" class=\"headerlink\" title=\"1. 安装electron\"></a>1. 安装electron</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vue <span class=\"token function\">add</span> electron-builder<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>安装完成后，查看项目的目录结构，会自动在src目录下生成<code>background.js</code>并且修改<code>package.json</code></p>\n</blockquote>\n<h3 id=\"2-运行\"><a href=\"#2-运行\" class=\"headerlink\" title=\"2.运行\"></a>2.运行</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run electron:serve<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在进行此步骤时，有很大的几率会报错<code>Error: post install error, please remove node_modules before retry!</code> ，此时需要将node_modules全部删掉，然后重新执行npm install。又有很大的几率会报错，内容大致是提示叫你重新安装electron，此时只需要将node_modules下的electron文件夹删除，然后执行npm install electron就可以了。在安装electron时的相关npm包时，官方推荐使用yarn，但是因为个人习惯原因，使用npm来进行安装。</p>\n<h3 id=\"3-打包\"><a href=\"#3-打包\" class=\"headerlink\" title=\"3.打包\"></a>3.打包</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run electron:build<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>上述三个步骤看上去十分简单，但是实际进行操作时，出现了一堆错误，下面的内容就是总结所有踩过的坑。</p>\n<h2 id=\"二、总结遇到的坑\"><a href=\"#二、总结遇到的坑\" class=\"headerlink\" title=\"二、总结遇到的坑\"></a>二、总结遇到的坑</h2><h3 id=\"1-Vuex\"><a href=\"#1-Vuex\" class=\"headerlink\" title=\"1. Vuex\"></a>1. Vuex</h3><h4 id=\"1-Vuex的安装\"><a href=\"#1-Vuex的安装\" class=\"headerlink\" title=\"1.Vuex的安装\"></a>1.Vuex的安装</h4><p>在开发时，我当时直接使用了<code>npm install vuex</code>来使用vuex，一切问题都没有，非常的正常，但是build后再打开，发现vuex失效了，后面经过查找才发现，在electron使用vuex时，应该使用下面的命令安装。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> vuex-electron --save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"2-Vuex的配置\"><a href=\"#2-Vuex的配置\" class=\"headerlink\" title=\"2.Vuex的配置\"></a>2.Vuex的配置</h4><p>第一步，先在<code>src</code>目录下新建一个文件夹<code>store</code>，然后在这个文件夹内创建文件<code>index.js</code></p>\n<p>根据官方的样例<a href=\"https://github.com/vue-electron/vuex-electron-example\">Vuex Electron</a>，<code>index.js</code>的内容如下</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span>\n<span class=\"token keyword\">import</span> Vuex <span class=\"token keyword\">from</span> <span class=\"token string\">\"vuex\"</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> createPersistedState<span class=\"token punctuation\">,</span> createSharedMutations <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vuex-electron\"</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuex<span class=\"token punctuation\">.</span>Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  state<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    count<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n  actions<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">store</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"increment\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">decrement</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">store</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"decrement\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n  mutations<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      state<span class=\"token punctuation\">.</span>count<span class=\"token operator\">++</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">decrement</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      state<span class=\"token punctuation\">.</span>count<span class=\"token operator\">--</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">createPersistedState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">createSharedMutations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  strict<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">!==</span> <span class=\"token string\">\"production\"</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>但是这会引发一个问题，如果你的项目里的代码全都是<code>this.$sotre.commit</code>，会发现执行相关代码时根本没有反应，并且控制台会报错<code>Please, don&#39;t use direct commit&#39;s, use dispatch instead of this.</code>，这是因为在import时，将<code>createSharedMutations</code>也一并引入了。</p>\n<p>如果你用不上多进程共享数据的话，可以选择不导入<code>createSharedMutations</code>，注释或者删除相关代码，或者使用dispatch来进行相关操作。</p>\n<h3 id=\"2-构建遇到的问题\"><a href=\"#2-构建遇到的问题\" class=\"headerlink\" title=\"2. 构建遇到的问题\"></a>2. 构建遇到的问题</h3><h4 id=\"1-在-vue文件中无法使用electronApi的问题\"><a href=\"#1-在-vue文件中无法使用electronApi的问题\" class=\"headerlink\" title=\"1.在.vue文件中无法使用electronApi的问题\"></a>1.在<code>.vue</code>文件中无法使用electronApi的问题</h4><p>在<code>src/main.js</code>添加下面两行代码</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> electron <span class=\"token keyword\">from</span> <span class=\"token string\">'electron'</span>\n<span class=\"token class-name\">Vue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$electron <span class=\"token operator\">=</span> electron<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><code>vue.config.js</code>配置防止浏览器报错<code>&#39;__dirname&#39; is not defind</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    pluginOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        electronBuilder<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            nodeIntegration<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-在-vue文件中使用this-electron-remote字段为undefined\"><a href=\"#2-在-vue文件中使用this-electron-remote字段为undefined\" class=\"headerlink\" title=\"2.在.vue文件中使用this.$electron.remote字段为undefined\"></a>2.在<code>.vue</code>文件中使用<code>this.$electron.remote</code>字段为<code>undefined</code></h4><p>需要“显”式的申明 enableRemoteModule: true<br>在项目目录<code>src</code>下的<code>background.js</code>中修改</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> win <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BrowserWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        width<span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>\n        height<span class=\"token operator\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>\n        frame<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        resizable<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        webPreferences<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// Use pluginOptions.nodeIntegration, leave this alone</span>\n            <span class=\"token comment\">// See nklayman.github.io/vue-cli-plugin-electron-builder/guide/security.html#node-integration for more info</span>\n            nodeIntegration<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">ELECTRON_NODE_INTEGRATION</span><span class=\"token punctuation\">,</span>\n            enableRemoteModule<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">ELECTRON_NODE_INTEGRATION</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在<code>vue.config.js</code>中添加</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    pluginOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        electronBuilder<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            nodeIntegration<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            enableRemoteModule<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n<h4 id=\"3-构建好的项目想让别人也使用，因此想取消顶部工具栏\"><a href=\"#3-构建好的项目想让别人也使用，因此想取消顶部工具栏\" class=\"headerlink\" title=\"3.构建好的项目想让别人也使用，因此想取消顶部工具栏\"></a>3.构建好的项目想让别人也使用，因此想取消顶部工具栏</h4><p>在<code>background.js</code>里，修改最上方的代码，将Menu也引入进来</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span>app<span class=\"token punctuation\">,</span> protocol<span class=\"token punctuation\">,</span> BrowserWindow<span class=\"token punctuation\">,</span> Menu<span class=\"token punctuation\">,</span> dialog<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'electron'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然后修改 <code>createWindow()</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> win <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BrowserWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  width<span class=\"token operator\">:</span> <span class=\"token number\">1294</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token operator\">:</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span>\n  webPreferences<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">// Use pluginOptions.nodeIntegration, leave this alone</span>\n    <span class=\"token comment\">// See nklayman.github.io/vue-cli-plugin-electron-builder/guide/security.html#node-integration for more info</span>\n    nodeIntegration<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">ELECTRON_NODE_INTEGRATION</span><span class=\"token punctuation\">,</span>\n    contextIsolation<span class=\"token operator\">:</span> <span class=\"token operator\">!</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">ELECTRON_NODE_INTEGRATION</span><span class=\"token punctuation\">,</span>\n    enableRemoteModule<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">ELECTRON_NODE_INTEGRATION</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\nMenu<span class=\"token punctuation\">.</span><span class=\"token function\">setApplicationMenu</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"4-需要自定义build出来的exe等安装程序\"><a href=\"#4-需要自定义build出来的exe等安装程序\" class=\"headerlink\" title=\"4.需要自定义build出来的exe等安装程序\"></a>4.需要自定义build出来的exe等安装程序</h4><p>在根目录下创建文件<code>vue.config.js</code>，然后进行相关配置，代码如下</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    publicPath<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'./'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n    pluginOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        electronBuilder<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n            nodeIntegration<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            builderOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token string\">'appId'</span><span class=\"token operator\">:</span> <span class=\"token string\">'example'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'productName'</span><span class=\"token operator\">:</span> <span class=\"token string\">'example'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 项目名，也是生成的安装文件名，即mzDemo.exe</span>\n                <span class=\"token string\">'copyright'</span><span class=\"token operator\">:</span> <span class=\"token string\">'Marshall Copyright © 2021'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 版权信息</span>\n                <span class=\"token string\">'files'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                    <span class=\"token string\">'./**/*'</span>\n                <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'directories'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token string\">'output'</span><span class=\"token operator\">:</span> <span class=\"token string\">'./app_dist'</span> <span class=\"token comment\">// 输出文件路径</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'win'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// win相关配置</span>\n                    <span class=\"token string\">'icon'</span><span class=\"token operator\">:</span> <span class=\"token string\">'./public/favicon.ico'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 图标，当前图标在根目录下，注意这里有两个坑</span>\n                    <span class=\"token string\">\"requestedExecutionLevel\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"requireAdministrator\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//获取管理员权限</span>\n                    <span class=\"token string\">'target'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token string\">'target'</span><span class=\"token operator\">:</span> <span class=\"token string\">'nsis'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 利用nsis制作安装程序</span>\n                        <span class=\"token string\">'arch'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                            <span class=\"token string\">'x64'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 64位</span>\n                            <span class=\"token string\">'ia32'</span>\n                        <span class=\"token punctuation\">]</span>\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n                artifactName<span class=\"token operator\">:</span> <span class=\"token string\">'$&#123;productName&#125;_Setup_$&#123;version&#125;_$&#123;platform&#125;.$&#123;ext&#125;'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'nsis'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n                    include<span class=\"token operator\">:</span> <span class=\"token string\">'./installer.nsh'</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//默认安装路径</span>\n                    <span class=\"token string\">'oneClick'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否一键安装</span>\n                    <span class=\"token string\">'allowElevation'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 允许请求提升。 如果为false，则用户必须使用提升的权限重新启动安装程序。</span>\n                    <span class=\"token string\">'allowToChangeInstallationDirectory'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 允许修改安装目录</span>\n                    <span class=\"token string\">'installerIcon'</span><span class=\"token operator\">:</span> <span class=\"token string\">'./favicon.ico'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 安装图标</span>\n                    <span class=\"token string\">'uninstallerIcon'</span><span class=\"token operator\">:</span> <span class=\"token string\">'./favicon.ico'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 卸载图标</span>\n                    <span class=\"token string\">'installerHeaderIcon'</span><span class=\"token operator\">:</span> <span class=\"token string\">'./favicon.ico'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 安装时头部图标</span>\n                    <span class=\"token string\">'createDesktopShortcut'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 创建桌面图标</span>\n                    <span class=\"token string\">'createStartMenuShortcut'</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 创建开始菜单图标</span>\n                    <span class=\"token string\">'shortcutName'</span><span class=\"token operator\">:</span> <span class=\"token string\">'nfuEcampusUtils'</span> <span class=\"token comment\">// 图标名称(项目名称)</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在上面代码里,<code>nsis</code>的配置里出现了一个<code>include : &#39;./installer.nsh&#39;</code> 这个文件是用来配置默认安装路径的。同样，在根目录创建文件<code>installer.nsh</code>，我是这样写的:</p>\n<pre class=\"line-numbers language-nsis\" data-language=\"nsis\"><code class=\"language-nsis\"><span class=\"token important\">!macro</span> preInit\n  <span class=\"token keyword\">SetRegView</span> <span class=\"token number\">64</span>\n  <span class=\"token keyword\">WriteRegExpandStr</span> <span class=\"token property\">HKLM</span> <span class=\"token string\">\"$&#123;INSTALL_REGISTRY_KEY&#125;\"</span> InstallLocation <span class=\"token string\">\"C:\\Program Files\\$&#123;PRODUCT_NAME&#125;\"</span>\n  <span class=\"token keyword\">WriteRegExpandStr</span> <span class=\"token property\">HKCU</span> <span class=\"token string\">\"$&#123;INSTALL_REGISTRY_KEY&#125;\"</span> InstallLocation <span class=\"token string\">\"C:\\Program Files\\$&#123;PRODUCT_NAME&#125;\"</span>\n  <span class=\"token keyword\">SetRegView</span> <span class=\"token number\">32</span>\n  <span class=\"token keyword\">WriteRegExpandStr</span> <span class=\"token property\">HKLM</span> <span class=\"token string\">\"$&#123;INSTALL_REGISTRY_KEY&#125;\"</span> InstallLocation <span class=\"token string\">\"C:\\Program Files (x86)\\$&#123;PRODUCT_NAME&#125;\"</span>\n  <span class=\"token keyword\">WriteRegExpandStr</span> <span class=\"token property\">HKCU</span> <span class=\"token string\">\"$&#123;INSTALL_REGISTRY_KEY&#125;\"</span> InstallLocation <span class=\"token string\">\"C:\\Program Files (x86)\\$&#123;PRODUCT_NAME&#125;\"</span>\n<span class=\"token important\">!macroend</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"5-我想让我的项目能持续迭代更新，并且让使用者也能在使用时收到更新通知\"><a href=\"#5-我想让我的项目能持续迭代更新，并且让使用者也能在使用时收到更新通知\" class=\"headerlink\" title=\"5.我想让我的项目能持续迭代更新，并且让使用者也能在使用时收到更新通知\"></a>5.我想让我的项目能持续迭代更新，并且让使用者也能在使用时收到更新通知</h4><p>本方法的使用条件是：你开发的是一个私有的 Electron 应用程序，或者你没有在 GitHub Releases 中公开发布。官方给了几种方法<a href=\"https://www.electronjs.org/docs/tutorial/updates#%E9%83%A8%E7%BD%B2%E6%9B%B4%E6%96%B0%E6%9C%8D%E5%8A%A1%E5%99%A8\">部署更新服务器</a></p>\n<p>但我觉得都太麻烦了，想直接将新版放到oss里面，并且速度也更客观，于是我进行查找后，得到了有效的方案。</p>\n<p>先修改<code>vue.config.js</code>里的<code>builderOptions</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n    pluginOptions<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n    \telectronBuilder：<span class=\"token punctuation\">&#123;</span>\n    \t\t···，\n    \t\tbuilderOptions<span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n    \t\t\t<span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n    \t\t\tpublish<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span>provider<span class=\"token operator\">:</span> <span class=\"token string\">'generic'</span><span class=\"token punctuation\">,</span>url<span class=\"token operator\">:</span><span class=\"token string\">'https://yourdomain.com/app'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                 <span class=\"token operator\">...</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\t\t\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>安装依赖并且修改<code>background.js</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> electron-updater<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span>autoUpdater<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'electron-updater'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">createWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">const</span> win <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BrowserWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">WEBPACK_DEV_SERVER_URL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">await</span> win<span class=\"token punctuation\">.</span><span class=\"token function\">loadURL</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">WEBPACK_DEV_SERVER_URL</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">IS_TEST</span><span class=\"token punctuation\">)</span> win<span class=\"token punctuation\">.</span>webContents<span class=\"token punctuation\">.</span><span class=\"token function\">openDevTools</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">createProtocol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n        win<span class=\"token punctuation\">.</span><span class=\"token function\">loadURL</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app://./index.html'</span><span class=\"token punctuation\">)</span>\n        autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">checkForUpdates</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ======================================================================</span>\n<span class=\"token comment\">// 更新模块</span>\n<span class=\"token comment\">// ======================================================================</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">WEBPACK_DEV_SERVER_URL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  autoUpdater<span class=\"token punctuation\">.</span>autoDownload <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\n  <span class=\"token comment\">// autoUpdater.signals.updateDownloaded(() => &#123;&#125;)</span>\n  autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'检查更新失败: '</span> <span class=\"token operator\">+</span> error <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token string\">'unknown'</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>stack <span class=\"token operator\">||</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    dialog<span class=\"token punctuation\">.</span><span class=\"token function\">showErrorBox</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error: '</span><span class=\"token punctuation\">,</span> error <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token string\">'unknown'</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>stack <span class=\"token operator\">||</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'update-available'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">info</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// var appInfo = &#123;</span>\n    <span class=\"token comment\">//   info: info.version,</span>\n    <span class=\"token comment\">//   files: info.files,</span>\n    <span class=\"token comment\">//   path: info.path,</span>\n    <span class=\"token comment\">//   sha512: info.sha512,</span>\n    <span class=\"token comment\">//   releaseDate: info.releaseDate</span>\n    <span class=\"token comment\">// &#125;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span>\n    dialog<span class=\"token punctuation\">.</span><span class=\"token function\">showMessageBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'info'</span><span class=\"token punctuation\">,</span>\n      title<span class=\"token operator\">:</span> <span class=\"token string\">'更新提示'</span><span class=\"token punctuation\">,</span>\n      message<span class=\"token operator\">:</span> <span class=\"token string\">'软件需要更新，您是否立即更新？'</span><span class=\"token punctuation\">,</span>\n      buttons<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'推迟'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'立即更新'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'index:'</span> <span class=\"token operator\">+</span> res<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>response <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'选择升级'</span><span class=\"token punctuation\">)</span>\n        autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">downloadUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'选择不升级:'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 检查更新时触发</span>\n  autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'update-available'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'检查更新时触发'</span><span class=\"token punctuation\">)</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// dialog.showMessageBox(&#123;</span>\n    <span class=\"token comment\">//   title: '检查更新',</span>\n    <span class=\"token comment\">//   message: '正在检查更新'</span>\n    <span class=\"token comment\">// &#125;)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 没有可用更新</span>\n  autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'update-not-available'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'没有可用更新'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// dialog.showMessageBox(&#123;</span>\n    <span class=\"token comment\">//   title: '已是最新版',</span>\n    <span class=\"token comment\">//   message: '当前版本是最新版本。'</span>\n    <span class=\"token comment\">// &#125;)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 安装更新</span>\n  autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'update-downloaded'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// console.log(res)</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'下载完毕！提示安装更新'</span><span class=\"token punctuation\">)</span>\n    dialog<span class=\"token punctuation\">.</span><span class=\"token function\">showMessageBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      title<span class=\"token operator\">:</span> <span class=\"token string\">'升级提示！'</span><span class=\"token punctuation\">,</span>\n      message<span class=\"token operator\">:</span> <span class=\"token string\">'已自动升级为最新版，请重启应用！'</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'确认安装'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">setImmediate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">quitAndInstall</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">//下载进度</span>\n  autoUpdater<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'download-progress'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>percent<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>用build打包第一个版本(1.0.0)</p>\n<p>打包后 <code>dist_electron</code> 目录中有 <code>*.blockmap</code> 格式的文件;</p>\n<p>将文件复制到 ‘更新服务器’ (<a href=\"http://yourdomain.com/app/\">http://yourdomain.com/app/</a>) 目录下;</p>\n<p>然后再打包一个升级版(1.1.0)</p>\n<p>打包后 <code>dist_electron</code> 有如下三个文件：</p>\n<ul>\n<li><code>新版本安装包.exe</code></li>\n<li><code>新版本_v1.1.0.blockmap</code>，</li>\n<li><code>latest.yml</code></li>\n</ul>\n<p>将上面三个文件复制到 ‘更新服务器’ (<a href=\"http://yourdomain.com/app/\">http://yourdomain.com/app/</a>) 目录下;</p>\n<p>以后每次有更新就复制这三个文件至 ‘更新服务器’，保留旧版本的 <code>*.blockmap</code> 文件，旧版本的应用的执行文件(<code>.exe</code>)可以删除。</p>\n"},{"title":"Vite+Vue3+TSX 实践","date":"2022-05-09T11:30:00.000Z","author":"Marshall","img":"https://unsplash.it/1920/1080?random8","top":true,"cover":true,"toc":true,"mathjax":false,"summary":"在项目中将TSX搭配Vue进行开发","reprintPolicy":"cc_by","_content":"\n在开发时，碰到一个需求：利用Element Plus的MessageBox组件实现一个弹框选择器，即MessageBox+Select组件搭配使用，要将Select放在MessageBox的message配置项里，但message接受的类型为`string | VNode`，所以要搭配Vue的render函数`h()`来实现。  \n思路就是将Select组件封装好后，用`h()`转换为`VNode`，一开始本打算直接在message配置项中写好`h()`，但是实际实现的时候比较麻烦，最后决定将Select用TSX封装后用`h()`转换为VNode最方便。  \n\n## tsx支持  \n首先需要安装官方维护的vite插件`@vitejs/plugin-vue-jsx`  \n```bash\nyarn add @vitejs/plugin-vue-jsx -D\n```\n安装好后在`vite.config.ts`配置，代码如下  \n```typescript\nimport { defineConfig } from \"vite\";\nimport vue from \"@vitejs/plugin-vue\";\nimport vueJsx from \"@vitejs/plugin-vue-jsx\";\n\nexport default defineConfig({\n  plugins: [\n    vue(),\n    vueJsx(),\n  ],\n})\n\n```\n\n## 封装Select组件  \n我想封装一个可刷新Option的组件，结构为Select + button > Option，并且需要父子组件间通信，即需要有`props`和`emit`。代码如下:  \n```html\n<!--child.vue-->\n<script lang=\"tsx\">\nimport { Refresh } from '@element-plus/icons-vue'\nimport axios, { AxiosRequestConfig } from 'axios';\nimport { defineComponent, ref, reactive, onMounted } from \"vue\"\nexport default defineComponent({\n    props: ['id'], //显式声明 prop\n    setup(props, { emit }) {\n        let id = props.id\n        interface optionsProps {\n            label: string\n            value: string\n        }\n        const options = reactive<optionsProps[]>([])\n        //刷新数据的函数\n        const getOptionsList = async () => {\n            options.splice(0, options.length)\n            const config: AxiosRequestConfig = {\n                method: 'get',\n                url: '/example',\n                headers: {}\n            };\n            let data = await axios(config)\n            let res = data.data\n            res.map((item: string) => {\n                if (item !== id) {\n                    options.push({\n                        label: item,\n                        value: item\n                    })\n                }\n            })\n        }\n        const selectValue = ref('')\n        //组件发出的自定义事件，将Select选中的数据传递给父组件\n        const selectChange = (val: string) => {\n            emit(\"getSelect\", val)\n        }\n        onMounted(() => {\n            getOptionsList()\n        })\n        return () => (\n            <div class=\"container\">\n                //Vue中的tsx规范\n                <el-select v-model={selectValue.value} onChange={selectChange}>\n                    // v-for\n                    {\n                        options.map((item) => {\n                            return <el-option\n                                key={item.value}\n                                label={item.label}\n                                value={item.value}\n                            />\n                        })\n                    }\n                </el-select>\n                <el-button icon={Refresh} size=\"large\" onClick={getOptionsList} circle class=\"btn\" />\n            </div>\n        )\n    }\n})\n</script>\n\n<style scoped>\n.container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.btn {\n    margin-left: 10px;\n}\n</style>\n```\n\n## 在MessageBox使用封装好的组件\n代码如下\n```html\n<!--parent.vue-->\n<script setup lang=\"ts\">\nimport { h, ref } from 'vue'\nimport { ElMessageBox } from 'element-plus'\nimport child from '@/components/child.vue'\n\nconst selectValue = ref('')\n\nElMessageBox({\n  message: h(child, {\n    id,//传递给child的prop\n    onGetSelect: (val: string) => {\n      selectValue.value = val\n    }//emit\n  }),\n  confirmButtonText: '发送请求',\n  beforeClose: (_action, _instance, _done) => {\n    //code\n  }\n})\n</script>\n\n```\n","source":"_posts/viteWithTSX.md","raw":"---\ntitle: Vite+Vue3+TSX 实践  \ndate: 2022-05-09 19:30:00  \nauthor: Marshall  \nimg: https://unsplash.it/1920/1080?random8  \ntop: true  \ncover: true  \ntoc: true  \nmathjax: false  \nsummary: 在项目中将TSX搭配Vue进行开发  \ncategories: Vue  \nreprintPolicy: cc_by  \ntags:\n- TypeScript\n- JSX/TSX\n- Vue\n- Vite\n---\n\n在开发时，碰到一个需求：利用Element Plus的MessageBox组件实现一个弹框选择器，即MessageBox+Select组件搭配使用，要将Select放在MessageBox的message配置项里，但message接受的类型为`string | VNode`，所以要搭配Vue的render函数`h()`来实现。  \n思路就是将Select组件封装好后，用`h()`转换为`VNode`，一开始本打算直接在message配置项中写好`h()`，但是实际实现的时候比较麻烦，最后决定将Select用TSX封装后用`h()`转换为VNode最方便。  \n\n## tsx支持  \n首先需要安装官方维护的vite插件`@vitejs/plugin-vue-jsx`  \n```bash\nyarn add @vitejs/plugin-vue-jsx -D\n```\n安装好后在`vite.config.ts`配置，代码如下  \n```typescript\nimport { defineConfig } from \"vite\";\nimport vue from \"@vitejs/plugin-vue\";\nimport vueJsx from \"@vitejs/plugin-vue-jsx\";\n\nexport default defineConfig({\n  plugins: [\n    vue(),\n    vueJsx(),\n  ],\n})\n\n```\n\n## 封装Select组件  \n我想封装一个可刷新Option的组件，结构为Select + button > Option，并且需要父子组件间通信，即需要有`props`和`emit`。代码如下:  \n```html\n<!--child.vue-->\n<script lang=\"tsx\">\nimport { Refresh } from '@element-plus/icons-vue'\nimport axios, { AxiosRequestConfig } from 'axios';\nimport { defineComponent, ref, reactive, onMounted } from \"vue\"\nexport default defineComponent({\n    props: ['id'], //显式声明 prop\n    setup(props, { emit }) {\n        let id = props.id\n        interface optionsProps {\n            label: string\n            value: string\n        }\n        const options = reactive<optionsProps[]>([])\n        //刷新数据的函数\n        const getOptionsList = async () => {\n            options.splice(0, options.length)\n            const config: AxiosRequestConfig = {\n                method: 'get',\n                url: '/example',\n                headers: {}\n            };\n            let data = await axios(config)\n            let res = data.data\n            res.map((item: string) => {\n                if (item !== id) {\n                    options.push({\n                        label: item,\n                        value: item\n                    })\n                }\n            })\n        }\n        const selectValue = ref('')\n        //组件发出的自定义事件，将Select选中的数据传递给父组件\n        const selectChange = (val: string) => {\n            emit(\"getSelect\", val)\n        }\n        onMounted(() => {\n            getOptionsList()\n        })\n        return () => (\n            <div class=\"container\">\n                //Vue中的tsx规范\n                <el-select v-model={selectValue.value} onChange={selectChange}>\n                    // v-for\n                    {\n                        options.map((item) => {\n                            return <el-option\n                                key={item.value}\n                                label={item.label}\n                                value={item.value}\n                            />\n                        })\n                    }\n                </el-select>\n                <el-button icon={Refresh} size=\"large\" onClick={getOptionsList} circle class=\"btn\" />\n            </div>\n        )\n    }\n})\n</script>\n\n<style scoped>\n.container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.btn {\n    margin-left: 10px;\n}\n</style>\n```\n\n## 在MessageBox使用封装好的组件\n代码如下\n```html\n<!--parent.vue-->\n<script setup lang=\"ts\">\nimport { h, ref } from 'vue'\nimport { ElMessageBox } from 'element-plus'\nimport child from '@/components/child.vue'\n\nconst selectValue = ref('')\n\nElMessageBox({\n  message: h(child, {\n    id,//传递给child的prop\n    onGetSelect: (val: string) => {\n      selectValue.value = val\n    }//emit\n  }),\n  confirmButtonText: '发送请求',\n  beforeClose: (_action, _instance, _done) => {\n    //code\n  }\n})\n</script>\n\n```\n","slug":"viteWithTSX","published":1,"updated":"2022-05-09T18:33:02.220Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4brvxsm000nkg7e9i247km0","content":"<p>在开发时，碰到一个需求：利用Element Plus的MessageBox组件实现一个弹框选择器，即MessageBox+Select组件搭配使用，要将Select放在MessageBox的message配置项里，但message接受的类型为<code>string | VNode</code>，所以要搭配Vue的render函数<code>h()</code>来实现。<br>思路就是将Select组件封装好后，用<code>h()</code>转换为<code>VNode</code>，一开始本打算直接在message配置项中写好<code>h()</code>，但是实际实现的时候比较麻烦，最后决定将Select用TSX封装后用<code>h()</code>转换为VNode最方便。  </p>\n<h2 id=\"tsx支持\"><a href=\"#tsx支持\" class=\"headerlink\" title=\"tsx支持\"></a>tsx支持</h2><p>首先需要安装官方维护的vite插件<code>@vitejs/plugin-vue-jsx</code>  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @vitejs/plugin-vue-jsx -D<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>安装好后在<code>vite.config.ts</code>配置，代码如下  </p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineConfig <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vite\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"@vitejs/plugin-vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> vueJsx <span class=\"token keyword\">from</span> <span class=\"token string\">\"@vitejs/plugin-vue-jsx\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">vueJsx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"封装Select组件\"><a href=\"#封装Select组件\" class=\"headerlink\" title=\"封装Select组件\"></a>封装Select组件</h2><p>我想封装一个可刷新Option的组件，结构为Select + button &gt; Option，并且需要父子组件间通信，即需要有<code>props</code>和<code>emit</code>。代码如下:  </p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!--child.vue--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tsx<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Refresh <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@element-plus/icons-vue'</span>\n<span class=\"token keyword\">import</span> axios<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> AxiosRequestConfig <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineComponent<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">,</span> reactive<span class=\"token punctuation\">,</span> onMounted <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    props<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//显式声明 prop</span>\n    <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> emit <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>id\n        <span class=\"token keyword\">interface</span> <span class=\"token class-name\">optionsProps</span> <span class=\"token punctuation\">&#123;</span>\n            label<span class=\"token operator\">:</span> string\n            value<span class=\"token operator\">:</span> string\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> reactive<span class=\"token operator\">&lt;</span>optionsProps<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">//刷新数据的函数</span>\n        <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getOptionsList</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            options<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">const</span> config<span class=\"token operator\">:</span> AxiosRequestConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n                method<span class=\"token operator\">:</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span>\n                url<span class=\"token operator\">:</span> <span class=\"token string\">'/example'</span><span class=\"token punctuation\">,</span>\n                headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>data\n            res<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item <span class=\"token operator\">!==</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    options<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n                        label<span class=\"token operator\">:</span> item<span class=\"token punctuation\">,</span>\n                        value<span class=\"token operator\">:</span> item\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">const</span> selectValue <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">//组件发出的自定义事件，将Select选中的数据传递给父组件</span>\n        <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">selectChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getSelect\"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token function\">onMounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">getOptionsList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n                <span class=\"token comment\">//Vue中的tsx规范</span>\n                <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>select v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>selectValue<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">&#125;</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>selectChange<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span>\n                    <span class=\"token comment\">// v-for</span>\n                    <span class=\"token punctuation\">&#123;</span>\n                        options<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                            <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>option\n                                key<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>item<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">&#125;</span>\n                                label<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>item<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">&#125;</span>\n                                value<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>item<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">&#125;</span>\n                            <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>select<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button icon<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>Refresh<span class=\"token punctuation\">&#125;</span> size<span class=\"token operator\">=</span><span class=\"token string\">\"large\"</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>getOptionsList<span class=\"token punctuation\">&#125;</span> circle <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"btn\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">scoped</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\">.container</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.btn</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"在MessageBox使用封装好的组件\"><a href=\"#在MessageBox使用封装好的组件\" class=\"headerlink\" title=\"在MessageBox使用封装好的组件\"></a>在MessageBox使用封装好的组件</h2><p>代码如下</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!--parent.vue--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> h<span class=\"token punctuation\">,</span> ref <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ElMessageBox <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'element-plus'</span>\n<span class=\"token keyword\">import</span> child <span class=\"token keyword\">from</span> <span class=\"token string\">'@/components/child.vue'</span>\n\n<span class=\"token keyword\">const</span> selectValue <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">ElMessageBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  message<span class=\"token operator\">:</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    id<span class=\"token punctuation\">,</span><span class=\"token comment\">//传递给child的prop</span>\n    <span class=\"token function-variable function\">onGetSelect</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      selectValue<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> val\n    <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//emit</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  confirmButtonText<span class=\"token operator\">:</span> <span class=\"token string\">'发送请求'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">beforeClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_action<span class=\"token punctuation\">,</span> _instance<span class=\"token punctuation\">,</span> _done</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//code</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{"friends":[{"avatar":"https://www.naiquoy.com/imgs/twain.jpeg","name":"Twain","introduction":"永远滴神","url":"https://blog.2333.ink/","title":"前去膜拜"},{"avatar":"https://noechou.cn/wp-content/uploads/2021/01/Cache_-6619600f913cdc0c..jpg","name":"第七纵队","introduction":"里歪是个戆卵","url":"https://noechou.cn/","title":"前去学习"},{"avatar":"https://www.scery.com/images/avatar.png","name":"Anthony","introduction":"As you look around","url":"https://www.scery.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1587892058-wechat_pic_20200406225459.jpg","name":"Taoidle","introduction":"秋深し 隣はなにも しない人","url":"https://www.taoidle.com/","title":"前去学习"},{"avatar":"https://cdn.site.taoidle.com/wp-content/uploads/2020/04/1588039248-photo_2019-02-14_18-47-31.jpg","name":"johnpoint","introduction":"折腾是第一生产力（不是","url":"https://blog.lvcshu.com/","title":"前去学习"},{"avatar":"https://img.imgdb.cn/item/603750c35f4313ce25f92a35.jpg","name":"SolitudeAlma","introduction":"都懂一点，不是很懂的小捞仔。","url":"https://blog.yt1209.com/","title":"前去学习"},{"avatar":"https://jniantic.cn/logo.jpg","name":"经年思维","introduction":"有一份光，发一份热","url":"https://jniantic.cn","title":"前去学习"}]}},"excerpt":"","more":"<p>在开发时，碰到一个需求：利用Element Plus的MessageBox组件实现一个弹框选择器，即MessageBox+Select组件搭配使用，要将Select放在MessageBox的message配置项里，但message接受的类型为<code>string | VNode</code>，所以要搭配Vue的render函数<code>h()</code>来实现。<br>思路就是将Select组件封装好后，用<code>h()</code>转换为<code>VNode</code>，一开始本打算直接在message配置项中写好<code>h()</code>，但是实际实现的时候比较麻烦，最后决定将Select用TSX封装后用<code>h()</code>转换为VNode最方便。  </p>\n<h2 id=\"tsx支持\"><a href=\"#tsx支持\" class=\"headerlink\" title=\"tsx支持\"></a>tsx支持</h2><p>首先需要安装官方维护的vite插件<code>@vitejs/plugin-vue-jsx</code>  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @vitejs/plugin-vue-jsx -D<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>安装好后在<code>vite.config.ts</code>配置，代码如下  </p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineConfig <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vite\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"@vitejs/plugin-vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> vueJsx <span class=\"token keyword\">from</span> <span class=\"token string\">\"@vitejs/plugin-vue-jsx\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">vueJsx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"封装Select组件\"><a href=\"#封装Select组件\" class=\"headerlink\" title=\"封装Select组件\"></a>封装Select组件</h2><p>我想封装一个可刷新Option的组件，结构为Select + button &gt; Option，并且需要父子组件间通信，即需要有<code>props</code>和<code>emit</code>。代码如下:  </p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!--child.vue--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tsx<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Refresh <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@element-plus/icons-vue'</span>\n<span class=\"token keyword\">import</span> axios<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> AxiosRequestConfig <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineComponent<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">,</span> reactive<span class=\"token punctuation\">,</span> onMounted <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    props<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//显式声明 prop</span>\n    <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> emit <span class=\"token punctuation\">&#125;</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>id\n        <span class=\"token keyword\">interface</span> <span class=\"token class-name\">optionsProps</span> <span class=\"token punctuation\">&#123;</span>\n            label<span class=\"token operator\">:</span> string\n            value<span class=\"token operator\">:</span> string\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> reactive<span class=\"token operator\">&lt;</span>optionsProps<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">//刷新数据的函数</span>\n        <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getOptionsList</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            options<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">const</span> config<span class=\"token operator\">:</span> AxiosRequestConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n                method<span class=\"token operator\">:</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span>\n                url<span class=\"token operator\">:</span> <span class=\"token string\">'/example'</span><span class=\"token punctuation\">,</span>\n                headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>data\n            res<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item <span class=\"token operator\">!==</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    options<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n                        label<span class=\"token operator\">:</span> item<span class=\"token punctuation\">,</span>\n                        value<span class=\"token operator\">:</span> item\n                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">const</span> selectValue <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">//组件发出的自定义事件，将Select选中的数据传递给父组件</span>\n        <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">selectChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getSelect\"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token function\">onMounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">getOptionsList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"container\"</span><span class=\"token operator\">></span>\n                <span class=\"token comment\">//Vue中的tsx规范</span>\n                <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>select v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>selectValue<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">&#125;</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>selectChange<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span>\n                    <span class=\"token comment\">// v-for</span>\n                    <span class=\"token punctuation\">&#123;</span>\n                        options<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n                            <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>option\n                                key<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>item<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">&#125;</span>\n                                label<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>item<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">&#125;</span>\n                                value<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>item<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">&#125;</span>\n                            <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>select<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button icon<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>Refresh<span class=\"token punctuation\">&#125;</span> size<span class=\"token operator\">=</span><span class=\"token string\">\"large\"</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>getOptionsList<span class=\"token punctuation\">&#125;</span> circle <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"btn\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">scoped</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\">.container</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token selector\">.btn</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"在MessageBox使用封装好的组件\"><a href=\"#在MessageBox使用封装好的组件\" class=\"headerlink\" title=\"在MessageBox使用封装好的组件\"></a>在MessageBox使用封装好的组件</h2><p>代码如下</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!--parent.vue--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">setup</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> h<span class=\"token punctuation\">,</span> ref <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> ElMessageBox <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'element-plus'</span>\n<span class=\"token keyword\">import</span> child <span class=\"token keyword\">from</span> <span class=\"token string\">'@/components/child.vue'</span>\n\n<span class=\"token keyword\">const</span> selectValue <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">ElMessageBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  message<span class=\"token operator\">:</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    id<span class=\"token punctuation\">,</span><span class=\"token comment\">//传递给child的prop</span>\n    <span class=\"token function-variable function\">onGetSelect</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n      selectValue<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> val\n    <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//emit</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  confirmButtonText<span class=\"token operator\">:</span> <span class=\"token string\">'发送请求'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">beforeClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_action<span class=\"token punctuation\">,</span> _instance<span class=\"token punctuation\">,</span> _done</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//code</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl4brvxse0001kg7eabep2zac","category_id":"cl4brvxsh0004kg7edqfp63my","_id":"cl4brvxsl000ikg7ec8rw6aeg"},{"post_id":"cl4brvxsg0003kg7e3osc4iwg","category_id":"cl4brvxsk000ckg7e61e544f1","_id":"cl4brvxsm000okg7e4qfq37ss"},{"post_id":"cl4brvxsi0007kg7e3pshbffa","category_id":"cl4brvxsl000jkg7e6mlzgeip","_id":"cl4brvxsn000skg7e98b578m0"},{"post_id":"cl4brvxsj0009kg7eh7jq7bt7","category_id":"cl4brvxsm000pkg7ehh72ged3","_id":"cl4brvxsn000wkg7ehp1eabbi"},{"post_id":"cl4brvxsk000bkg7e10651f6u","category_id":"cl4brvxsm000pkg7ehh72ged3","_id":"cl4brvxso0010kg7ee2s2e8ly"},{"post_id":"cl4brvxsk000gkg7efv1g219i","category_id":"cl4brvxsl000jkg7e6mlzgeip","_id":"cl4brvxso0014kg7e98d43vw3"},{"post_id":"cl4brvxsl000hkg7ean619uvw","category_id":"cl4brvxso000zkg7e3w3y3wcx","_id":"cl4brvxso0018kg7ec379ekr2"},{"post_id":"cl4brvxsm000lkg7e9jw5fmal","category_id":"cl4brvxso0015kg7ed5a89bqo","_id":"cl4brvxsp001bkg7ednf3bhnw"},{"post_id":"cl4brvxsm000nkg7e9i247km0","category_id":"cl4brvxso0015kg7ed5a89bqo","_id":"cl4brvxsp001ekg7e5nho0zix"}],"PostTag":[{"post_id":"cl4brvxse0001kg7eabep2zac","tag_id":"cl4brvxsi0005kg7e20nf5v20","_id":"cl4brvxsk000ekg7ehxuo118j"},{"post_id":"cl4brvxsg0003kg7e3osc4iwg","tag_id":"cl4brvxsk000dkg7e8fno6y7e","_id":"cl4brvxsm000mkg7e3oz70hsu"},{"post_id":"cl4brvxsi0007kg7e3pshbffa","tag_id":"cl4brvxsm000kkg7e120vb385","_id":"cl4brvxsn000rkg7egujv0xum"},{"post_id":"cl4brvxsj0009kg7eh7jq7bt7","tag_id":"cl4brvxsn000qkg7ehsw62wzy","_id":"cl4brvxso000ykg7eam4be3cc"},{"post_id":"cl4brvxsj0009kg7eh7jq7bt7","tag_id":"cl4brvxsn000ukg7e88yedtvs","_id":"cl4brvxso0011kg7eclx02ke4"},{"post_id":"cl4brvxsk000bkg7e10651f6u","tag_id":"cl4brvxsn000qkg7ehsw62wzy","_id":"cl4brvxso0013kg7efzfqchbd"},{"post_id":"cl4brvxsk000gkg7efv1g219i","tag_id":"cl4brvxsm000kkg7e120vb385","_id":"cl4brvxso0017kg7e8k06hax2"},{"post_id":"cl4brvxsl000hkg7ean619uvw","tag_id":"cl4brvxso0016kg7e0ntw3ljj","_id":"cl4brvxsp001dkg7e7kns6qix"},{"post_id":"cl4brvxsl000hkg7ean619uvw","tag_id":"cl4brvxso001akg7ec95cbibz","_id":"cl4brvxsp001fkg7e4rdzf17k"},{"post_id":"cl4brvxsm000lkg7e9jw5fmal","tag_id":"cl4brvxsp001ckg7e2f6w8kr7","_id":"cl4brvxsp001ikg7eadcg3z2z"},{"post_id":"cl4brvxsm000lkg7e9jw5fmal","tag_id":"cl4brvxsp001gkg7egai9ci4d","_id":"cl4brvxsp001jkg7e8v1m9tya"},{"post_id":"cl4brvxsm000nkg7e9i247km0","tag_id":"cl4brvxsp001hkg7e1qtr1xhx","_id":"cl4brvxsp001nkg7ed6fwh9f7"},{"post_id":"cl4brvxsm000nkg7e9i247km0","tag_id":"cl4brvxsp001kkg7e2r2c2fml","_id":"cl4brvxsp001okg7e1ee06vg4"},{"post_id":"cl4brvxsm000nkg7e9i247km0","tag_id":"cl4brvxsp001gkg7egai9ci4d","_id":"cl4brvxsp001pkg7e49nt8yz4"},{"post_id":"cl4brvxsm000nkg7e9i247km0","tag_id":"cl4brvxsp001mkg7ec1i362nk","_id":"cl4brvxsp001qkg7e95sp11mc"}],"Tag":[{"name":"Nodejs","_id":"cl4brvxsi0005kg7e20nf5v20"},{"name":"Jmeter","_id":"cl4brvxsk000dkg7e8fno6y7e"},{"name":"JavaScript","_id":"cl4brvxsm000kkg7e120vb385"},{"name":"mpvue","_id":"cl4brvxsn000qkg7ehsw62wzy"},{"name":"Vue.js","_id":"cl4brvxsn000ukg7e88yedtvs"},{"name":"Three.js","_id":"cl4brvxso0016kg7e0ntw3ljj"},{"name":"PhotoSphereViewer","_id":"cl4brvxso001akg7ec95cbibz"},{"name":"Electron","_id":"cl4brvxsp001ckg7e2f6w8kr7"},{"name":"Vue","_id":"cl4brvxsp001gkg7egai9ci4d"},{"name":"TypeScript","_id":"cl4brvxsp001hkg7e1qtr1xhx"},{"name":"JSX/TSX","_id":"cl4brvxsp001kkg7e2r2c2fml"},{"name":"Vite","_id":"cl4brvxsp001mkg7ec1i362nk"}]}}